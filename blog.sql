-- MySQL dump 10.13  Distrib 5.7.22, for Linux (i686)
--
-- Host: localhost    Database: blog
-- ------------------------------------------------------
-- Server version	5.7.22-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `article_article`
--

DROP TABLE IF EXISTS `article_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(30) NOT NULL,
  `content` longtext NOT NULL,
  `createTime` datetime(6) NOT NULL,
  `modifyTime` datetime(6) NOT NULL,
  `clickNums` int(11) NOT NULL,
  `pic` varchar(100) NOT NULL,
  `isShow` tinyint(1) NOT NULL,
  `category_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `title` (`title`),
  KEY `article_article_category_id_36b3c456_fk_article_category_id` (`category_id`),
  CONSTRAINT `article_article_category_id_36b3c456_fk_article_category_id` FOREIGN KEY (`category_id`) REFERENCES `article_category` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_article`
--

LOCK TABLES `article_article` WRITE;
/*!40000 ALTER TABLE `article_article` DISABLE KEYS */;
INSERT INTO `article_article` VALUES (1,'django admin定制（使用django-suit)','```\r\n环境：django2，python3\r\nOS:linux系统(deepin)\r\nIDE:pycharm\r\n```\r\n\r\n越使用django越觉得django的admin不好看，可能是审美疲劳，就想换个界面，还不想自己写，找到了一个很好用的django-suit\r\n\r\ndjango扩展能力还是挺强的，有牛人开发出了suit这个插件。只需要简单的几步配置，就可以让admin后台变得美观许多。\r\n\r\n先看效果，我的个人博客后台界面，如下图\r\n![](/media/editor/20180713162948941_20180714170258968155.png)\r\n\r\n那么，要怎么做呢？\r\n\r\n1：首先是安装(注：最好不要安装最新的版本，默认是老版本)\r\n```\r\npip install django-suit\r\n```\r\n2：接下来做一些配置工作\r\n在settings.py中，INSTALLED_APPS里面第一行加入’suit’（suit必须放在\'django.contrib.admin\'这一行的前面，否则服务启动后admin会加载默认admin界面）。之后，如果你的django版本在1.9以下，需要加入：\r\n```python\r\nfrom django.conf.global_settings import TEMPLATE_CONTEXT_PROCESSORS as TCP\r\n\r\nTEMPLATE_CONTEXT_PROCESSORS = TCP + (\r\n    \'django.core.context_processors.request\',\r\n)\r\n```\r\n\r\n如果是1.9以上（包含1.9），需要对TEMPLATES进行修改，加入一行：\r\n复制代码\r\n```python\r\nTEMPLATES = [\r\n    {\r\n        \'BACKEND\': \'django.template.backends.django.DjangoTemplates\',\r\n        \'DIRS\': [],\r\n        \'APP_DIRS\': True,\r\n        \'OPTIONS\': {\r\n            \'context_processors\': [\r\n                \'django.template.context_processors.debug\',\r\n                \'django.template.context_processors.request\',    # <-需要这一行\r\n                \'django.contrib.auth.context_processors.auth\',\r\n                \'django.contrib.messages.context_processors.messages\',\r\n            ],\r\n        },\r\n    },\r\n]\r\n```\r\n\r\n据说suit在admin里设置时间的一个小bug。在settings.py中需要把时间格式指定一下，同时设置时区和语言\r\n\r\n```python\r\nLANGUAGE_CODE = \'zh-Hans\'\r\n\r\nTIME_ZONE = \'Asia/Shanghai\'\r\n\r\nUSE_I18N = True\r\n\r\nUSE_L10N = True\r\n\r\nUSE_TZ = False  #设置为上海时间时关掉\r\n\r\nDATETIME_FORMAT = \'Y-m-d H:i:s\'\r\nDATE_FORMAT = \'Y-m-d\'\r\n```\r\n3：其他的编写models模型，在admin.py注册models，同步数据库，创建超级管理员与正常的一样，就不写了，项目运行后进入后台可以直接看到效果','2018-07-14 17:03:51.663357','2018-09-15 04:12:07.885387',28,'pic_img/rBABqFmNbmiENuPsAAAAAHGwmjE439_ZuijuWk.gif',1,1),(2,'Django2.0整合markdown编辑器并实现代码高亮','```\r\n测试成功环境： \r\npython：3.5.4 \r\nos：Deepin 15.5 \r\nDjango：2.0 \r\nIDE：pycharm\r\n```\r\n\r\n#Django整合django-mdeditor\r\n注：博主再写个人博客时，找了好久的编辑器，tinymce丑的一批，DjangoUeditor我没有做出来实时预览的效果，只有这个看着比较好，一是有普通编辑器具备的大部分功能，二是属于主流的markdown语法，比较适合使用，三是可以实时预览。。最主要的还是比较容易添加到admin界面\r\n\r\n1.安装django-mdeditor\r\n```\r\npip install django-mdeditor\r\n```\r\n2.在项目的settings.py的INSTALLED_APPS中添加\'mdeditor\', \r\n![](/media/editor/2018071315380941_20180714170426628043.png)\r\n\r\n3:添加路径到设置中\r\n```python\r\nMEDIA_ROOT = os.path.join(BASE_DIR, \'uploads\')	#uploads必须存在，且在项目目录下\r\nMEDIA_URL = \'/media/\'	#你上传的文件和图片会默认存在/uploads/editor下\r\n```\r\n\r\n4：添加设置到你的url中\r\n```python\r\nfrom django.conf.urls import url, include\r\nfrom django.conf.urls.static import static\r\nfrom django.conf import settings\r\nfrom django.contrib import admin\r\nfrom django.urls import path\r\n\r\nurlpatterns = [\r\n    path(\'admin/\',admin.site.urls),\r\n    url(r\'mdeditor/\', include(\'mdeditor.urls\')),\r\n]\r\n\r\nif settings.DEBUG:\r\n    # static files (images, css, javascript, etc.)\r\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\r\n```\r\n5.添加一个app\r\n```\r\npython manage.py startapp article\r\n```\r\n打开Test，在models.py中添加\r\n```python\r\nfrom django.db import models\r\nfrom mdeditor.fields import MDTextField	#必须导入\r\n\r\nclass Article(models.Model):\r\n    name = models.CharField(max_length=10)\r\n    content = MDTextField()    #注意为MDTextField()\r\n```\r\n6:在Blog/admin.py中注册\r\n```python\r\nfrom django.contrib import admin\r\n\r\n# Register your models here.\r\nfrom Blog.models import *\r\n\r\nadmin.site.register(Article)\r\n```\r\n7:效果如下：（注：因为我觉得django自带的admin不太好看，所以后台使用了django-suit替换掉了默认的admin界面，所以看起来不太一样，如果你也修改admin界面的话，可以看我另一篇文章）\r\n![](/media/editor/20180713155509660_20180714170519035430.png)\r\n\r\n还支持全屏编写，并实时预览，全屏效果如下\r\n![](/media/editor/20180713154719503_20180714170543144263.png)\r\n\r\n----------\r\n\r\n\r\n到了这个时候，后台的界面已经整合markdown编辑器完毕，可能有需要在前端界面显示出来，虽然没什么难度，但还是再写写\r\n\r\n8：如果需要在前台显示的话，可以在view.py获取到数据库的数据后，使用markdown.markdown()修饰为html语句，然后传到前端显示\r\n\r\n注：使用markdown.markdown()必须先安装markdown\r\n```\r\npip install markdown\r\n```\r\n\r\n```\r\n在view.py中导入包 import markdown\r\n```\r\n\r\n如图所示：\r\n![](/media/editor/1_20180714170613487946.png)\r\n\r\n代码解释(注：解释是在百度上找的，其实直接加上就行了，不用知道啥意思)：这样我们在模板中展示 {{ article.content }} 的时候，就不再是原始的 Markdown 文本了，而是渲染过后的 HTML 文本。注意这里我们给 markdown 渲染函数传递了额外的参数 extensions，它是对 Markdown 语法的拓展，这里我们使用了三个拓展，分别是 extra、codehilite、toc。extra 本身包含很多拓展，而 codehilite 是语法高亮拓展，这为我们后面的实现代码高亮功能提供基础，而 toc 则允许我们自动生成目录。\r\n\r\n\r\n在前端显示时必须使用safe过滤器，如下图\r\n![](/media/editor/2_20180714170639154599.png)\r\n\r\n前端效果如下（注：只是前面这些操作，代码都是一个颜色，并不会高亮的，如果想做到代码高亮，接着向下看）\r\n![](/media/editor/33_20180714170702866087.png)\r\n\r\n9：实现代码高亮\r\n首先我们需要安装 Pygments，激活虚拟环境，运行下面的命令安装即可。\r\n```\r\npip install Pygments \r\n```\r\n\r\n运行如下命令\r\n```\r\npygmentize -S default -f html -a .codehilite > code.css\r\n```\r\n在文件夹下会发现生成了code.css文件，将这个css文件加入到你的static文件夹下css里面(路径自己定，只要用的时候引入正确就行了)\r\n\r\n最后一步在需要高亮的html文件里面导入刚刚生成的css文件，例如我的是\r\n```python\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{% static \'css/code.css\' %}\">  {#语法高亮#}\r\n```\r\n前面的markdown下必须加入 \'markdown.extensions.codehilite\'高亮效果才会生效\r\n```python\r\n extensions=[\r\n              \'markdown.extensions.extra\',\r\n               \'markdown.extensions.codehilite\',\r\n               \'markdown.extensions.toc\',\r\n           ])\r\n```\r\n![](/media/editor/34_20180714170741953006.png)\r\n\r\n刷新前台，显示代码已经高亮。\r\n![](/media/editor/33_20180714170756858647.png)\r\n\r\n追加：使用过程中发现了一个问题，就是markdown的换行问题，在前端界面换行显示有问题，并没有br标签，这是因为在markdown语法中两个空格加一个换行才是换行，或者两个换行才是一个换行\r\n\r\n可使用article.content.replace(\"\\r\\n\", \'  \\n\'）解决，把换行符替换成两个空格+换行符，这样经过markdown转换后才可以转成前端的br标签\r\n\r\n```python\r\n    article.content = markdown.markdown(article.content.replace(\"\\r\\n\", \'  \\n\'),extensions=[\r\n                                     \'markdown.extensions.extra\',\r\n                                     \'markdown.extensions.codehilite\',\r\n                                     \'markdown.extensions.toc\',\r\n                                  ],safe_mode=True,enable_attributes=False)\r\n```','2018-07-14 17:08:25.787157','2018-09-14 18:37:48.447266',11,'pic_img/122.jpg',1,1),(14,'Django2.0整合markdown编辑器','```\r\n测试成功环境： \r\npython：3.5.4 \r\nos：Deepin 15.5 \r\nDjango：2.0 \r\nIDE：pycharm\r\n```\r\n\r\n#Django整合django-mdeditor\r\n注：博主再写个人博客时，找了好久的编辑器，tinymce丑的一批，DjangoUeditor我没有做出来实时预览的效果，只有这个看着比较好，一是有普通编辑器具备的大部分功能，二是属于主流的markdown语法，比较适合使用，三是可以实时预览。。最主要的还是比较容易添加到admin界面\r\n\r\n1.安装django-mdeditor\r\n```\r\npip install django-mdeditor\r\n```\r\n2.在项目的settings.py的INSTALLED_APPS中添加\'mdeditor\', \r\n![](/media/editor/2018071315380941_20180714170426628043.png)\r\n\r\n3:添加路径到设置中\r\n```python\r\nMEDIA_ROOT = os.path.join(BASE_DIR, \'uploads\')	#uploads必须存在，且在项目目录下\r\nMEDIA_URL = \'/media/\'	#你上传的文件和图片会默认存在/uploads/editor下\r\n```\r\n\r\n4：添加设置到你的url中\r\n```python\r\nfrom django.conf.urls import url, include\r\nfrom django.conf.urls.static import static\r\nfrom django.conf import settings\r\nfrom django.contrib import admin\r\nfrom django.urls import path\r\n\r\nurlpatterns = [\r\n    path(\'admin/\',admin.site.urls),\r\n    url(r\'mdeditor/\', include(\'mdeditor.urls\')),\r\n]\r\n\r\nif settings.DEBUG:\r\n    # static files (images, css, javascript, etc.)\r\n    urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)\r\n```\r\n5.添加一个app\r\n```\r\npython manage.py startapp article\r\n```\r\n打开Test，在models.py中添加\r\n```\r\nfrom django.db import models\r\nfrom mdeditor.fields import MDTextField	#必须导入\r\n\r\nclass Article(models.Model):\r\n    name = models.CharField(max_length=10)\r\n    content = MDTextField()    #注意为MDTextField()\r\n```\r\n6:在Blog/admin.py中注册\r\n```\r\nfrom django.contrib import admin\r\n\r\n# Register your models here.\r\nfrom Blog.models import *\r\n\r\nadmin.site.register(Article)\r\n```\r\n7:效果如下：（注：因为我觉得django自带的admin不太好看，所以后台使用了django-suit替换掉了默认的admin界面，所以看起来不太一样，如果你也修改admin界面的话，可以看我另一篇文章）\r\n![](/media/editor/20180713155509660_20180714170519035430.png)\r\n\r\n还支持全屏编写，并实时预览，全屏效果如下\r\n![](/media/editor/20180713154719503_20180714170543144263.png)\r\n\r\n----------\r\n\r\n\r\n到了这个时候，后台的界面已经整合markdown编辑器完毕，可能有需要在前端界面显示出来，虽然没什么难度，但还是再写写\r\n\r\n8：如果需要在前台显示的话，可以在view.py获取到数据库的数据后，使用markdown.markdown()修饰为html语句，然后传到前端显示\r\n\r\n注：使用markdown.markdown()必须先安装markdown\r\n```\r\npip install markdown\r\n```\r\n\r\n```\r\n在view.py中导入包 import markdown\r\n```\r\n\r\n如图所示：\r\n![](/media/editor/1_20180714170613487946.png)\r\n\r\n代码解释(注：解释是在百度上找的，其实直接加上就行了，不用知道啥意思)：这样我们在模板中展示 {{ article.content }} 的时候，就不再是原始的 Markdown 文本了，而是渲染过后的 HTML 文本。注意这里我们给 markdown 渲染函数传递了额外的参数 extensions，它是对 Markdown 语法的拓展，这里我们使用了三个拓展，分别是 extra、codehilite、toc。extra 本身包含很多拓展，而 codehilite 是语法高亮拓展，这为我们后面的实现代码高亮功能提供基础，而 toc 则允许我们自动生成目录。\r\n\r\n\r\n在前端显示时必须使用safe过滤器，如下图\r\n![](/media/editor/2_20180714170639154599.png)\r\n\r\n前端效果如下（注：只是前面这些操作，代码都是一个颜色，并不会高亮的，如果想做到代码高亮，接着向下看）\r\n![](/media/editor/33_20180714170702866087.png)\r\n\r\n9：实现代码高亮\r\n首先我们需要安装 Pygments，激活虚拟环境，运行下面的命令安装即可。\r\n```\r\npip install Pygments \r\n```\r\n\r\n运行如下命令\r\n```\r\npygmentize -S default -f html -a .codehilite > code.css\r\n```\r\n在文件夹下会发现生成了code.css文件，将这个css文件加入到你的static文件夹下css里面(路径自己定，只要用的时候引入正确就行了)\r\n\r\n最后一步在需要高亮的html文件里面导入刚刚生成的css文件，例如我的是\r\n```\r\n<link rel=\"stylesheet\" type=\"text/css\" href=\"{% static \'css/code.css\' %}\">  {#语法高亮#}\r\n```\r\n前面的markdown下必须加入 \'markdown.extensions.codehilite\'高亮效果才会生效\r\n```python\r\n extensions=[\r\n              \'markdown.extensions.extra\',\r\n               \'markdown.extensions.codehilite\',\r\n               \'markdown.extensions.toc\',\r\n           ])\r\n```\r\n![](/media/editor/34_20180714170741953006.png)\r\n\r\n刷新前台，显示代码已经高亮。\r\n![](/media/editor/33_20180714170756858647.png)','2018-07-20 17:27:50.764564','2018-09-14 14:57:54.233362',27,'pic_img/book_7eXrxZd.jpg',0,1),(15,'使用git报错：Failed to connect to 1','git clone 出现错误：\r\nFailed to connect to 127.0.0.1 port 8888: 拒绝连接\r\n\r\n分析：\r\n\r\n1. lsof -i:8888    发现端口未被占用\r\n\r\n2. 查看代理：env|grep -i proxy\r\n```\r\nhttps_proxy=127.0.0.1:8888\r\nhttp_proxy=127.0.0.1:8888\r\nsocks_proxy=\r\nftp_proxy=\r\n```\r\n原因是127.0.0.1 port 8888被当作代理占用了，需要关闭。\r\n\r\n解决：在终端输入以下命令\r\n```\r\nexport http_proxy=\'\'\r\nexport https_proxy=\'\'\r\n```','2018-07-28 15:12:36.993017','2018-09-14 14:16:48.699104',16,'pic_img/rBABqFmNbmiENuPsAAAAAHGwmjE439_6QuZQuf.gif',1,7),(17,'个人网站优化','最近一直在写一个个人博客网站，完成后发现打开速度和访问量都不如意，所以花了几天时间优化网站，以提高响应速度和访问量。。。。\r\n个人博客页面链接：http://www.shihao.online（django搭建的个人博客，还在完善中）\r\n\r\n一些小建议：\r\n**1：能用外链的js，css文件最好不要用服务器本地的**\r\n例子：\r\n一些常用的js,css文件引入公共资源库上的，如下演示\r\n```\r\n<link href=\"https://cdn.bootcss.com/bootstrap/3.3.0/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n```\r\n为什么这么做？\r\n1：自己的服务器不好（再好也没百度的好）\r\n2：百度的服务器节点多，响应快，可以提高网页加载速度\r\n3：等等等等。。。。。。\r\n\r\n一些常见的公共资源库\r\n百度的：http://cdn.code.baidu.com/（据说百度的快，但有些不是很常用的js,css上面没有）\r\nbootstrap的：https://www.bootcdn.cn/（基本上常用的都在上面）\r\n还有好多，想用百度搜一下\r\n\r\n**2：js, css一定要压缩**\r\n自己写，在自己电脑上运行，怎样都无所谓，但扔到服务器上，消耗的都是资源啊，一般人也没有太好的服务器\r\n\r\n一个好多常用工具的网站：（js压缩，css压缩都在）\r\nhttps://tool.lu/\r\n\r\n**3：处理网页上的图片**\r\n处理图片的方式我只想到了三种\r\n1：扔到图床上面\r\n2：base64转码\r\n3：压缩图片\r\n4：少用图片（这个不能算）\r\n\r\n第一种方法：还是没钱，去找免费的图床，我用的是七牛云，实名注册后每个月有免费的流量和空间，大部分个人小网站都够用，有钱可以加套餐，还有其他的好多图床，也可以百度找一下试试。\r\n第二种方法：base64转码可以减少 HTTP 请求，适合小尺寸的图片。但如果图片的大的话就不行了，会导致数据太大，加载过慢。一般不会很大，一些常用的图标都可以用base64转码\r\n第三种方法：可以把网页上背景图或者一些确定的图片进行压缩，减少图片大小，一个图片在线压缩的网站：https://www.iloveimg.com/zh-cn/compress-image/compress-gif\r\n\r\n**4：优化数据库，提高查询效率**\r\n这个没啥讲的，跟我的数据库表肯定不一样\r\n\r\n**5：seo**\r\n\r\nSEO即搜索引擎优化,简单的说，就是让百度、google、360等搜索引擎，可以发现我们的网站，让别人在搜索某些关键词时，能够展现出我们的网站，从而让用户有机会访问我们的网站。 \r\n1：到各大站长平台中提交我们的网站\r\n百度站长：http://zhanzhang.baidu.com \r\n360站长：http://zhanzhang.so.com \r\n搜狗站长：http://zhanzhang.sogou.com \r\n不过提交可不一定会收录，那要看网站的质量。 \r\n2：sitemap生成与提交\r\n3：主动推送\r\n4：自动推送\r\n注：2,3,4在每个站长平台都有自己的提交方法介绍，非常详细\r\n\r\n**6：外链自己的网站**\r\n\r\n这个简单，但比较耗时，算是一个累活吧。将我们的页面URL到各大网站上去发表，如百度贴吧、新浪微博、腾讯微博、博客，对于格式没有具体的要求，重点把你的链接发不去，这样百度收录该网站的页面时就会爬取到其中了链接，可以大大增加百度的收录，当然还是要看质量。','2018-07-28 17:29:18.289518','2018-09-14 14:53:11.504279',44,'pic_img/96b8f5e079144898880776823fe8114e_k1VNB4x_qnbLVPu.gif',1,1),(18,'django统计网站访问次数，同时记录访问ip地址和次数','写完博客网站之后，需要加一些统计信息，比如统计访问用户总访问量，或者统计用户ip地址和该ip地址的访问次数\r\n\r\n先看效果\r\n![](/media/editor/深度截图_选择区域_20180729194045_20180729194216341734.png)\r\n\r\n下面我自己写的models\r\nmodels.py\r\n```python\r\n#访问网站的ip地址和次数\r\nclass Userip(models.Model):\r\n    ip=models.CharField(verbose_name=\'IP地址\',max_length=30)    #ip地址\r\n    count=models.IntegerField(verbose_name=\'访问次数\',default=0) #该ip访问次数\r\n    class Meta:\r\n        verbose_name = \'访问用户信息\'\r\n        verbose_name_plural = verbose_name\r\n    def __str__(self):\r\n        return self.ip\r\n\r\n#网站总访问次数\r\nclass VisitNumber(models.Model):\r\n    count=models.IntegerField(verbose_name=\'网站访问总次数\',default=0) #网站访问总次数\r\n    class Meta:\r\n        verbose_name = \'网站访问总次数\'\r\n        verbose_name_plural = verbose_name\r\n    def __str__(self):\r\n        return str(self.count)\r\n```\r\n\r\n我的想法是定义一个函数(装饰器也可以，高大上一点)，实现更新网站访问量和访问ip等信息，在视图中调用，实现所有功能\r\n```python\r\nfrom .models import *\r\n\r\n#自定义的函数，不是视图\r\ndef change_info(request):       #修改网站访问量和访问ip等信息\r\n    # 每一次访问，网站总访问次数加一\r\n    count_nums = VisitNumber.objects.all()[0]\r\n    count_nums.count += 1\r\n    count_nums.save()\r\n\r\n    # 记录访问ip和每个ip的次数\r\n    if \'HTTP_X_FORWARDED_FOR\' in request.META:  # 获取ip\r\n        client_ip = request.META[\'HTTP_X_FORWARDED_FOR\']\r\n        client_ip = client_ip.split(\",\")[0]  # 所以这里是真实的ip\r\n    else:\r\n        client_ip = request.META[\'REMOTE_ADDR\']  # 这里获得代理ip\r\n    # print(client_ip)\r\n\r\n    ip_exist = Userip.objects.filter(ip=str(client_ip))\r\n    if ip_exist:  # 判断是否存在该ip\r\n        uobj = ip_exist[0]\r\n        uobj.count += 1\r\n    else:\r\n        uobj = Userip()\r\n        uobj.ip = client_ip\r\n        uobj.count = 1\r\n    uobj.save()\r\n```\r\n如下图所示，将函数导入到视图中，在需要的地方调用函数\r\n![](/media/editor/深度截图_选择区域_20180729182354_20180729182540961761.png)','2018-07-29 18:26:33.204493','2018-09-13 16:34:51.697596',70,'pic_img/25820ac55be142a8bec9fcfa9acf71de_Tuy830i.gif',1,1),(19,'django+nginx+uwsgi部署（及遇到的错误）','个人博客页面链接：http://www.shihao.online（django搭建的个人博客，还在完善中）\r\n**准备：服务器环境配置**\r\n\r\n在本地的虚拟环境中，项目根目录下，执行命令收集所有包\r\npip freeze > plist.txt\r\n通过ftp软件将开发好的项目上传到此服务器的某个目录\r\n安装并创建虚拟环境，如果已有则跳过此步\r\n```python\r\nsudo apt-get install python-virtualenv\r\npython -m venv  11_venv [虚拟环境名称]\r\n```\r\n\r\n在虚拟环境上工作，安装所有需要的包\r\n```python\r\nsource / 11_venv/bin/active\r\npip install -r plist.txt\r\n```\r\n\r\n更改settings.py文件\r\n```python\r\nDEBUG = False\r\nALLOW_HOSTS=[\'*\',]表示可以访问服务器的ip\r\n```\r\n启动服务器，运行正常，但是静态文件无法加载\r\n\r\n\r\n**1：uWSGI**\r\nuWSGI实现了WSGI的所有接口，是一个快速、自我修复、开发人员和系统管理员友好的服务器\r\n安装uWSGI\r\n```python\r\npip install uwsgi\r\n```\r\n注（安装遇到的错误）：pip install uwsgi安装uwsgi出错\r\n如果以前修改过电脑的python版本，可能安装失败，这是Python版本造成的，\r\n终端输入 python，看电脑用的哪个版本（我的是python3.5）\r\n那么安装3.5的python-dev，大概几分钟\r\n```python\r\nsudo apt-get install libpython3.5-dev \r\n```\r\n再次执行\r\n```python\r\npip install uwsgi\r\n```\r\n安装成功\r\n\r\n配置uWSGI，在项目中新建文件uwsgi.ini，编写如下配置\r\n```python\r\n[uwsgi]\r\nsocket=127.0.0.1:端口（使用nginx连接时，使用socket）\r\n#http=外网ip:端口（直接做web服务器，使用http）\r\nchdir=项目根目录\r\nwsgi-file=项目中wsgi.py文件的目录，相对于项目根目录\r\nprocesses=4\r\nthreads=2\r\nmaster=True\r\npidfile=uwsgi.pid\r\ndaemonize=uswgi.log\r\n```\r\n我的配置参考\r\n```python\r\n[uwsgi]\r\nsocket=10.212.63.20:8000\r\n#http=127.0.0.1:8000\r\nchdir=/home/shihao/Desktop/bushulianxi/test7\r\nwsgi-file=test7/wsgi.py\r\nprocesses=4\r\nthreads=2\r\nmaster=True\r\npidfile=uwsgi.pid\r\ndaemonize=uswgi.log\r\n```\r\n\r\n启动：uwsgi --ini uwsgi.ini		（需要在项目目录下执行,注意ini前面是两个-）\r\n停止：uwsgi --stop uwsgi.pid\r\n重启：uwsgi --reload uwsgi.pid\r\n结果：使用http协议查看网站运行情况，运行正常，但是静态文件无法加载\r\n\r\n\r\n**2：使用nginx**\r\nnginx的作用：\r\n负载均衡：多台服务器轮流处理请求\r\n反射代理：隐藏真实服务器\r\n实现构架：客户端请求nginx，再由nginx请求uwsgi，运行django框架下的python代码\r\nnginx+uwsgi也可以用于其它框架的python web代码，不限于django\r\n到官网下载nginx压缩文件或通过命令安装\r\n```python\r\nsudo apt-get install nginx\r\n```\r\n```python\r\n默认安装到/usr/local/nginx/sbin/目录（我的在/usr/sbin下），**注意：最好进入此目录执行命令**\r\n查看版本：sudo nginx -v\r\n启动：sudo nginx\r\n停止：sudo nginx -s stop\r\n重启：sudo nginx -s reload\r\n通过浏览器查看nginx运行结果\r\n```\r\n一些注意：\r\n```python\r\n#如果nginx没有安装在默认目录，可以搜索nginx的安装目录\r\nsudo ps  -ajx | grep nginx\r\n\r\n#查看nginx.conf配置文件目录(需先进入安转目录)\r\nsudo nginx -t\r\n\r\n#如果80端口被占用，使用命令关闭占用80端口的程序\r\nsudo fuser -k 80/tcp\r\n```\r\n指向uwsgi项目：编辑nginx.conf文件（我的在/etc/nginx下）\r\n```python\r\nsudo vim nginx.conf\r\n\r\n在server下添加新的location项，指向uwsgi的ip与端口\r\nlocation / {\r\n    include uwsgi_params;将所有的参数转到uwsgi下\r\n    uwsgi_pass uwsgi的ip与端口;\r\n}\r\n```\r\n**注意**:原来nginx.conf有两行必须注释掉。\r\n```python\r\ninclude /etc/nginx/conf.d/*.conf;\r\ninclude /etc/nginx/sites-enabled/*;\r\n```\r\n\r\n修改uwsgi.ini文件，启动socket，禁用http\r\n重启nginx、uwsgi\r\n结果：在浏览器中查看项目，发现静态文件加载不正常，接下来解决静态文件的问题\r\n\r\n**3：处理静态文件**\r\n静态文件一直都找不到，现在终于可以解决了\r\n所有的静态文件都会由nginx处理，不会将请求转到uwsgi\r\n配置nginx的静态项，打开conf/nginx.conf文件，找到server，添加新location\r\n\r\n```python\r\nlocation /static {\r\n    alias /var/www/test5/static/;   #注：地址是自己随便定的\r\n}\r\n```\r\n\r\n在服务器上创建目录结构“/var/www/test5/”\r\n```python\r\ncd /var/www\r\nmkdir test5\r\ncd test5\r\nmkdir static\r\nsudo chmod 777 static\r\n```\r\n\r\n修改settings.py文件\r\n```python\r\nSTATIC_ROOT=\'/var/www/test5/static/\'\r\nSTATIC_URL=\'/static/\'\r\n```\r\n\r\n\r\n收集所有静态文件到static_root指定目录：python manage.py collectstatic\r\n此时可以发现静态文件都存在了/var/www/test5/static 文件夹下\r\n重启nginx、uwsgi','2018-07-30 13:19:48.640246','2018-09-14 16:22:07.938168',65,'pic_img/0204b0888c057edb854bd219cec46814_4DKEH8M.gif',1,1),(20,'python3之输入输出格式','```python\r\n#encoding:utf-8\r\n\r\n#有多组输入数据，但组数不确定\r\nwhile True:\r\n    try:\r\n        a, b = map(int, input().split(\' \'))     #以空格隔开\r\n        print(a + b)                            #map(int, list)把每个list的元素转为int型\r\n    except EOFError:    #捕捉异常\r\n        break\r\n\r\n#先输入一个整数，告诉我们接下来有多少组数据，然后在输入每组数据的具体值。，\r\nn = int(input())\r\nfor temp in range(n):       #range(5)等价于list[0, 1, 2, 3, 4]\r\n    a, b = map(int, input().split(\' \'))\r\n    print(a + b)\r\n\r\n# 有多组输入数据，没有具体的告诉有多少组,但是却知道遇见什么结束\r\nwhile True:\r\n    a, b = map(int, input().split())\r\n    if a == 0 and b == 0:\r\n        break\r\n    else:\r\n        print(a + b)\r\n\r\n#有多组输入数据，对于每组输入数据的第一个数代表该组数据接下来要输入数据量\r\nwhile True:\r\n    try:\r\n        lst1 = list(map(int, input().split()))\r\n        n, lst = lst1[0], lst1[1:]\r\n        sum = 0     #对后面n个数据求和\r\n        for i in range(n):\r\n            sum += lst[i]\r\n        print(sum)\r\n    except EOFError:\r\n        break\r\n\r\n#把输入的字符串分成单个字符处理\r\nwhile True:\r\n    lst = list(input())\r\n    print(lst)\r\n\r\n\r\n#print输出不换行\r\nprint (\"Hello \", end=\'\')    #输出为： Hello World!\r\nprint (\"World\", end=\'\')\r\nprint(\"!\")\r\n\r\n#打印字符串\r\nprint(\"His name is %s\"%(\"zhangsan\"))    #输出为： His name is zhangsan\r\n\r\n#打印整数\r\nprint(\"He is %d years old\"%(25))    #输出为： He is 25 years old\r\n\r\n#打印浮点数\r\nprint(\"His weight is %f\"%(155.5))   #输出为： His weight is 155.500000\r\n\r\n#打印浮点数并指定保留小数点位数\r\nprint(\"His weight is %.2f\"%(155.5))   #输出为： His weight is 155.50\r\n\r\n#指定占位符宽度\r\nprint(\"Name:%10s  Age:%3d  Height:%8.2f\"%(\"zhangsan\", 25, 155.5))\r\n#输出为： Name:  zhangsan  Age: 25  Height:  155.50\r\n\r\n#指定占位符宽度(左对齐)\r\nprint(\"Name:%-10s  Age:%-3d  Height:%-8.2f\"%(\"zhangsan\", 25, 155.5))\r\n#输出为： Name:zhangsan    Age:25   Height:155.50\r\n\r\n#用0当占位符\r\nprint(\"Name:%-10s  Age:%03d  Height:%08.2f\"%(\"zhangsan\", 25, 155.5))\r\n#输出为： Name:zhangsan    Age:025  Height:00155.50\r\n\r\n#输出16进制，十进制，8进制整数\r\nn = 100\r\nprint(\"hex = %x, dec = %d, oct = %o\"%(n, n, n))   #输出为： hex = 64, dec = 100, oct = 144\r\n\r\n#指数输出\r\nprint(\"%.3e\" %2016) #输出2.016e+03,也可以写大E\r\n\r\n#输出列表\r\nlst = [1,2,3,4,\'python\']\r\nprint (lst)    #输出为： [1, 2, 3, 4, \'python\']\r\n\r\n\r\n#format的使用：通过{}和:来代替传统%方式\r\n\r\n#使用位置参数\r\nlist = [\'zhangsan\', 20]\r\nprint(\"my name is {}, age is {}\".format(\'zhangsan\', 20))    #输出为： my name is zhangsan, age is 20\r\n\r\nprint(\"my name is {1}, age is {0}\".format(20, \'zhangsan\'))     #输出为： my name is zhangsan, age is 20\r\n\r\nprint(\"my name is {1}, age is {0} and I am {1}\".format(20,\'zhangsan\'))\r\n#输出为： my name is zhangsan, age is 20 and I am zhangsan\r\n\r\nprint(\"my name is {}, age is {}\".format(*list))     #输出为: my name is zhangsan, age is 20\r\n\r\nprint(\"{a[0]}{a[1]}{a[2]}\".format(a=[\"spkk\",\".\",\"cn\"])) #输出spkk.cn\r\n\r\n#使用关键字参数（使用字典）\r\nstudent = {\'name\': \'zhangsan\', \'age\': 20}\r\nprint(\"my name is {name}, age is {age}\".format(name = \'zhangsan\', age = 20))\r\n#输出为： my name is zhangsan, age is 20\r\n\r\nprint(\"my name is {name}, age is {age}\".format(**student))\r\n#输出为： my name is zhangsan, age is 20\r\n\r\n#填充和格式化\r\nprint(\"{:,}\".format(123456))#输出1234,56\r\n\r\nprint(\"{a:x^8}\".format(a=\"8\"))#输出xxx8xxxx,填充x\r\n```','2018-08-02 21:17:14.936364','2018-09-11 12:06:12.236260',41,'pic_img/83025aafa40f4bfb0b175c3a084f78f0f636189d_Voq5Rx9.gif',1,9),(21,'外星人入侵游戏（Python3）','github源码：https://github.com/shihao1010/alien_invasion\r\nalien_invasion.py:\r\n```python\r\n#encoding:utf-8\r\n\r\n#创建pygame窗口以及响应用户输入\r\nimport sys\r\nimport pygame\r\nfrom pygame.sprite import Group\r\n#导入类Settings\r\nfrom settings import Settings\r\n\r\n#导入类Ship\r\nfrom ship import Ship\r\n\r\n#导入模块game_functions\r\nimport game_functions as gf\r\n\r\n#导入类Alien\r\nfrom alien import Alien\r\n\r\nfrom game_stats import GameStats\r\nfrom scoreboard import Scoreboard\r\nfrom button import Button\r\n\r\ndef run_game():\r\n    #初始化游戏并创建一个屏幕对象\r\n    pygame.init()   #初始化背景设置\r\n    ai_settings = Settings()\r\n    screen = pygame.display.set_mode((ai_settings.screen_width, ai_settings.screen_height))   #设置窗口大小\r\n    pygame.display.set_caption(\"Alien Invasion\")\r\n\r\n    #创建游戏按钮\r\n    play_button = Button(ai_settings, screen, \"Play\")\r\n\r\n    #创建一个用于存储游戏统计信息的实例， 并创建记分牌\r\n    stats = GameStats(ai_settings)\r\n    sb = Scoreboard(ai_settings, screen, stats)\r\n\r\n    #创建一艘飞船\r\n    ship = Ship(ai_settings, screen)\r\n\r\n    #创建一个用于存储子弹的编组\r\n    bullets = Group()\r\n\r\n    aliens = Group()\r\n    #创建外星人群\r\n    gf.create_fleet(ai_settings, screen, ship, aliens)\r\n\r\n    #背景音乐\r\n    pygame.mixer.music.load(\"sounds/111.mp3\")\r\n    pygame.mixer.music.play(loops=-1, start=0.0)\r\n    music1 = pygame.mixer.Sound(\"sounds/222.wav\")\r\n\r\n    #开始游戏的主循环\r\n    while True:\r\n        #监视键盘和鼠标事件\r\n        gf.check_events(ai_settings, screen, stats, play_button, ship, aliens, bullets, music1, sb)\r\n\r\n        if stats.game_active:     #判断是否处于活动状态（是否有命）\r\n\r\n            #根据移动标志调整飞船的位置\r\n            ship.update()\r\n\r\n            # 更新子弹位置并删除已消失的子弹  删除子弹击中的外星人\r\n            gf.update_bullets(ai_settings, screen, stats, sb, ship, aliens, bullets)\r\n\r\n            #更新外星人位置\r\n            gf.update_aliens(ai_settings, stats, screen, ship, aliens, bullets)\r\n\r\n        # 更新屏幕上的图像，并切换到新屏幕\r\n        gf.update_screen(ai_settings, screen, stats, sb, ship, aliens, bullets, play_button)\r\n\r\nrun_game()\r\n\r\n```\r\n\r\n\r\n----------\r\ngame_functions.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nimport sys\r\nimport pygame\r\nfrom bullet import Bullet\r\nfrom alien import Alien\r\nfrom time import sleep\r\n\r\ndef check_keydown_events(event, ai_settings, stats, screen, ship, bullets, music1):\r\n    \'\'\'响应按键\'\'\'\r\n    if event.key == pygame.K_RIGHT:\r\n        ship.moving_right = True\r\n\r\n    elif event.key == pygame.K_LEFT:\r\n        ship.moving_left = True\r\n\r\n    elif event.key == pygame.K_SPACE:\r\n        #创建一颗子弹，并将其加入到编组bullets中\r\n        fire_bullet(ai_settings, stats, screen, ship, bullets, music1)\r\n\r\n    elif event.key == pygame.K_ESCAPE:      #按Esc退出\r\n        sys.exit()\r\n\r\ndef check_keyup_events(event, ship):\r\n    \'\'\'响应松开\'\'\'\r\n    if event.key == pygame.K_RIGHT:\r\n        ship.moving_right = False\r\n    if event.key == pygame.K_LEFT:\r\n        ship.moving_left = False\r\n\r\ndef check_events(ai_settings, screen, stats, play_button, ship, aliens, bullets, music1, sb):\r\n    # 监视键盘和鼠标事件\r\n    for event in pygame.event.get():\r\n        if event.type == pygame.QUIT:   #如果鼠标点击关闭，就退出窗口\r\n            sys.exit()\r\n\r\n        elif event.type == pygame.KEYDOWN:      #对KEYDOWN事件作出响应\r\n            check_keydown_events(event, ai_settings, stats, screen, ship, bullets, music1)\r\n\r\n        elif event.type == pygame.KEYUP:        #对KEYUP事件做出响应\r\n            check_keyup_events(event, ship)\r\n\r\n        elif event.type == pygame.MOUSEBUTTONDOWN:      #对点击play按钮做出回应\r\n            mouse_x, mouse_y = pygame.mouse.get_pos()\r\n            check_play_button(ai_settings, screen, stats, play_button, ship, aliens, bullets, mouse_x, mouse_y, sb)\r\n\r\ndef check_play_button(ai_settings, screen, stats, play_button, ship, aliens, bullets, mouse_x, mouse_y, sb):\r\n    \'\'\'在玩家单击Play按钮时开始新游戏\'\'\'\r\n    button_clicked = play_button.rect.collidepoint(mouse_x, mouse_y)\r\n    if button_clicked and not stats.game_active:\r\n        #重置游戏设置\r\n        ai_settings.initialize_dynamic_settings()\r\n\r\n        #隐藏光标\r\n        pygame.mouse.set_visible(False)\r\n\r\n        #重置游戏信息\r\n        stats.reset_stats()\r\n        stats.game_active = True\r\n\r\n        #把分数0显示出来\r\n        sb.prep_score()\r\n        sb.show_score()\r\n\r\n        #清空外星人列表和子弹列表\r\n        aliens.empty()\r\n        bullets.empty()\r\n\r\n        #创建一群新的外星人，并让飞船居中\r\n        create_fleet(ai_settings, screen, ship, aliens)\r\n        ship.center_ship()\r\n\r\n#更新屏幕上的图像，并切换到新屏幕\r\ndef update_screen(ai_settings, screen, stats, sb, ship, aliens, bullets, play_button):\r\n    # 每次循环时都重绘屏幕\r\n    screen.fill(ai_settings.bg_color)\r\n\r\n    #在飞船和外星人后面重绘所有子弹\r\n    for bullet in bullets.sprites():       #方法bullets.sprites()返回一个列表\r\n        bullet.draw_bullet()\r\n\r\n    #更新飞船位置\r\n    ship.blitme()\r\n\r\n    #显示外星人\r\n    aliens.draw(screen)\r\n\r\n    #显示得分\r\n    sb.show_score()\r\n\r\n    #如果游戏处于非活动状态 ，就绘制Play按钮\r\n    if not stats.game_active:\r\n        play_button.draw_button()\r\n\r\n    # 让最近绘制的屏幕可见\r\n    pygame.display.flip()\r\n\r\n#更新子弹位置并删除已消失的子弹\r\ndef update_bullets(ai_settings, screen, stats, sb, ship, aliens, bullets):\r\n    # 更新子弹位置\r\n    bullets.update()\r\n\r\n    # 删除已消失的子弹\r\n    for bullet in bullets.copy():\r\n        if bullet.rect.bottom <= 0:\r\n            bullets.remove(bullet)\r\n    check_bullet_alien_collisions(ai_settings, screen, stats, sb, ship, aliens, bullets)\r\n\r\n#检查是否有子弹击中了外星人如果击中了，就删除相应的子弹和外星人\r\ndef check_bullet_alien_collisions(ai_settings, screen, stats, sb, ship, aliens, bullets):\r\n    collisions = pygame.sprite.groupcollide(bullets, aliens, True, True)\r\n\r\n    if collisions:       #记分\r\n        for aliens in collisions.values():\r\n            stats.score += ai_settings.alien_points * len(aliens)\r\n            sb.prep_score()\r\n        check_high_score(stats, sb)\r\n\r\n    #当外星人群被消灭后，删除现有的子弹并新建一群外星人, 同时加快游戏速度\r\n    if len(aliens) == 0:\r\n        bullets.empty()\r\n        ai_settings.increase_speed()\r\n        create_fleet(ai_settings, screen, ship, aliens)\r\n\r\n#如果还没有达到限制，就发射一颗子弹\r\ndef fire_bullet(ai_settings, stats, screen, ship, bullets, music1):\r\n    if len(bullets) < ai_settings.bullet_allowed and stats.game_active:\r\n        new_bullet = Bullet(ai_settings, screen, ship)\r\n        bullets.add(new_bullet)\r\n        music1.play()\r\n\r\ndef get_number_aliens_x(ai_settings, alien_width):\r\n    \'\'\'计算每行可容纳多少个外星人\'\'\'\r\n    available_space_x = ai_settings.screen_width - 2 * alien_width\r\n    number_aliens_x = int(available_space_x / (2 * alien_width))\r\n    return number_aliens_x\r\n\r\ndef get_number_rows(ai_settings, ship_height, alien_height):\r\n    \'\'\'计算屏幕可容纳多少行外星人\'\'\'\r\n    available_space_y = (ai_settings.screen_height - (3 * alien_height) - ship_height)\r\n    number_rows = int(available_space_y / (3 * alien_height))\r\n    return number_rows\r\n\r\ndef create_alien(ai_settings, screen, aliens, alien_number, row_number):\r\n    \'\'\'创建一个外星人将其放在当前行\'\'\'\r\n    alien = Alien(ai_settings, screen)\r\n    alien_width = alien.rect.width\r\n    alien.x = alien_width + 2 * alien_width * alien_number\r\n    alien.rect.x = alien.x\r\n    alien.rect.y = alien.rect.height + 2 * alien.rect.height * row_number\r\n    aliens.add(alien)\r\n\r\ndef create_fleet(ai_settings, screen, ship, aliens):\r\n    \'\'\'创建外星人群\'\'\'\r\n    #创建一个外星人，并计算一行可容纳多少个外星人\r\n    #外星人间距为外星人宽度\r\n    alien = Alien(ai_settings, screen)\r\n    number_aliens_x = get_number_aliens_x(ai_settings, alien.rect.width)\r\n    number_rows = get_number_rows(ai_settings, ship.rect.height, alien.rect.height)\r\n\r\n    #创建外星人群\r\n    for row_number in range(number_rows):\r\n        for alien_number in range(number_aliens_x):\r\n            create_alien(ai_settings, screen, aliens, alien_number, row_number)\r\n\r\ndef check_fleet_edges(ai_settings, aliens):\r\n    \'\'\'有外星人到达边缘时采取相应的措施\'\'\'\r\n    for alien in aliens.sprites():\r\n        if alien.check_edges():\r\n            change_fleet_direction(ai_settings, aliens)\r\n            break\r\n\r\ndef change_fleet_direction(ai_settings, aliens):\r\n    \'\'\'将整群外星人下移， 并改变他们的方向\'\'\'\r\n    for alien in aliens.sprites():\r\n        alien.rect.y += ai_settings.fleet_drop_speed\r\n    ai_settings.fleet_direction *= -1\r\n\r\ndef ship_hit(ai_settings, stats, screen, ship, aliens, bullets):\r\n    \'\'\'响应被外星人撞到的飞船\'\'\'\r\n    if stats.ships_left > 1:\r\n        #将ships_left减1\r\n        stats.ships_left -= 1\r\n\r\n        #清空外星人列表和子弹列表\r\n        aliens.empty()\r\n        bullets.empty()\r\n\r\n        #创建一群新的外星人， 并将飞船放到屏幕底端中央\r\n        create_fleet(ai_settings, screen, ship, aliens)\r\n        ship.center_ship()\r\n\r\n        #暂停\r\n        sleep(0.5)\r\n\r\n    else:\r\n        stats.game_active = False\r\n        pygame.mouse.set_visible(True)  #使光标可见\r\n\r\ndef check_aliens_bottom(ai_settings, stats, screen, ship, aliens, bullets):\r\n    \'\'\'检查是否有外星人到达了屏幕底端\'\'\'\r\n    screen_rect = screen.get_rect()\r\n    for alien in aliens.sprites():\r\n        if alien.rect.bottom >= screen_rect.bottom:\r\n            #像飞船被撞一样进行处理\r\n            ship_hit(ai_settings, stats, screen, ship, aliens, bullets)\r\n            break\r\n\r\ndef update_aliens(ai_settings, stats, screen, ship, aliens, bullets):\r\n    \'\'\'检查是否有外星人位于屏幕边缘   并更新外星人群中所有外星人的位置\'\'\'\r\n    check_fleet_edges(ai_settings, aliens)\r\n    aliens.update()\r\n\r\n    #检查外星人和飞船之间的碰撞\r\n    if pygame.sprite.spritecollideany(ship, aliens):\r\n        ship_hit(ai_settings, stats, screen, ship, aliens, bullets)\r\n\r\n    #检查是否有外星人到达屏幕底端\r\n    check_aliens_bottom(ai_settings, stats, screen, ship, aliens, bullets)\r\n\r\ndef check_high_score(stats, sb):\r\n    \'\'\'检查是否诞生了新的最高得分\'\'\'\r\n    if stats.score > stats.high_score:\r\n        stats.high_score = stats.score\r\n        sb.prep_high_score()\r\n\r\n```\r\n\r\n\r\n----------\r\nsettings.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nclass Settings():\r\n    \"\"\"存储《《外星人入侵》》的所有设置的类\"\"\"\r\n\r\n    def __init__(self):\r\n        \"\"\"初始化游戏的静态设置\"\"\"\r\n        #屏幕设置\r\n        self.screen_width = 1500\r\n        self.screen_height = 900\r\n        self.bg_color = (230, 230, 230)\r\n\r\n        #飞船的设置\r\n        self.ship_limit = 1      #3条命\r\n\r\n        #子弹设置\r\n        self.bullet_width = 3\r\n        self.bullet_height = 15\r\n        self.bullet_color = 250, 60, 60\r\n        self.bullet_allowed = 30     #限制子弹最大数量\r\n\r\n        #外星人设置\r\n        self.fleet_drop_speed = 10   #外星人竖直移动速度\r\n\r\n        #以什么样的速度去加快游戏节奏\r\n        self.speedup_scale = 1.2\r\n\r\n        #外星人点数的提高速度\r\n        self.score_scale = 1.5\r\n\r\n        self.initialize_dynamic_settings()\r\n\r\n    def initialize_dynamic_settings(self):\r\n        \'\'\'初始化随游戏进行而进行的设置\'\'\'\r\n        self.ship_speed_factor = 2      # 飞船速度\r\n        self.bullet_speed_factor = 3      # 子弹速度\r\n        self.alien_speed_factor = 1       # 外星人水平移动速度\r\n\r\n        # fleet_direction为1表示向右移， 为-1表示向左移\r\n        self.fleet_direction = 1\r\n\r\n        #记分\r\n        self.alien_points = 50000\r\n\r\n    def increase_speed(self):\r\n        \'\'\'提高速度设置和外星人点数\'\'\'\r\n        self.ship_speed_factor *=  self.speedup_scale\r\n        self.bullet_speed_factor *=  self.speedup_scale\r\n        self.alien_speed_factor *=  self.speedup_scale\r\n        self.alien_points = int(self.alien_points * self.score_scale)\r\n        print(self.alien_points)\r\n```\r\n\r\n\r\n----------\r\nbullet.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nimport pygame\r\nfrom pygame.sprite import Sprite\r\n\r\nclass Bullet(Sprite):\r\n    \'\'\'一个对飞船发射的子弹进行管理的类\'\'\'\r\n\r\n    def __init__(self, ai_setting, screen, ship):\r\n        \'\'\'在飞船所处的位置处创建一个子弹对象\'\'\'\r\n        super(Bullet, self).__init__()\r\n        self.screen = screen\r\n\r\n        #在(0,0)处创建一个表示子弹的矩形， 再设置正确的位置\r\n        self.rect = pygame.Rect(0, 0 ,ai_setting.bullet_width, ai_setting.bullet_height)\r\n        self.rect.centerx = ship.rect.centerx\r\n        self.rect.top = ship.rect.top\r\n\r\n        #存储用小数表示的子弹位置\r\n        self.y = float(self.rect.y)\r\n\r\n        self.color = ai_setting.bullet_color\r\n        self.speed_factor = ai_setting.bullet_speed_factor\r\n\r\n    def update(self):\r\n        \'\'\'向上移动子弹\'\'\'\r\n        #更新表示子弹位置的小数值\r\n        self.y -= self.speed_factor\r\n        #更新表示子弹的rect的位置\r\n        self.rect.y = self.y\r\n\r\n    def draw_bullet(self):\r\n        \'\'\'在屏幕上绘制子弹\'\'\'\r\n        pygame. draw.rect(self.screen, self.color, self.rect)\r\n\r\n```\r\n\r\n\r\n----------\r\nbutton.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nimport pygame.font\r\n\r\nclass Button():\r\n    def __init__(self, ai_setting, screen, msg):\r\n        \'\'\'初始化按钮的属性\'\'\'\r\n        self.screen = screen\r\n        self.screen_rect = screen.get_rect()\r\n\r\n        #设置按钮的尺寸和其他属性\r\n        self.width, self.height = 200, 50\r\n        self.button_color = (150, 150, 150)       #黑色\r\n        self.text_color = (150, 255, 255)   #白色\r\n        self.font = pygame.font.SysFont(None, 48)\r\n\r\n        #创建按钮的rect对象，并使其居中\r\n        self.rect = pygame.Rect(0, 0, self.width, self.height)\r\n        self.rect.center = self.screen_rect.center\r\n\r\n        #按钮的标签只需创建一次\r\n        self.prep_msg(msg)\r\n\r\n    def prep_msg(self, msg):\r\n        \'\'\'将msg渲染为图像， 并将其在按钮上居中\'\'\'\r\n        self.msg_image = self.font.render(msg, True, self.text_color, self.button_color)\r\n        self.msg_image_rect = self.msg_image.get_rect()\r\n        self.msg_image_rect.center = self.rect.center\r\n\r\n    def draw_button(self):\r\n        #绘制一个用颜色填充的按钮，在绘制文本\r\n        self.screen.fill(self.button_color, self.rect)\r\n        self.screen.blit(self.msg_image, self.msg_image_rect)\r\n\r\n```\r\n\r\n\r\n----------\r\ngame_stats.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nclass GameStats():\r\n    \'\'\'跟踪游戏的状态信息\'\'\'\r\n\r\n    def __init__(self, ai_settings):\r\n        \'\'\'初始化统计信息\'\'\'\r\n        self.ai_settings = ai_settings\r\n        self.reset_stats()\r\n\r\n        #让游戏一开始处于非活动状态\r\n        self.game_active = False\r\n\r\n        #在任何情况下都不应该重置最高得分\r\n        self.high_score = 0\r\n\r\n    def reset_stats(self):\r\n        \'\'\'初始化在游戏运行期间可能发生的统计信息\'\'\'\r\n        self.ships_left = self.ai_settings.ship_limit\r\n        self.score = 0\r\n```\r\n\r\n\r\n----------\r\nscoreboard.py\r\n\r\n```\r\n#encoding:utf-8\r\n\r\nimport pygame.font\r\n\r\nclass Scoreboard():\r\n    \'\'\'显示得分信息的类\'\'\'\r\n\r\n    def __init__(self, ai_settings, screen, stats):\r\n        \'\'\'初始化显示得分涉及的属性\'\'\'\r\n        self.screen = screen\r\n        self.screen_rect = screen.get_rect()\r\n        self.ai_settings = ai_settings\r\n        self.stats = stats\r\n\r\n        #显示得分信息时使用的字体设置\r\n        self.text_color = (30, 30, 30)\r\n        self.font = pygame.font.SysFont(None, 38)\r\n\r\n        #准备初始得分图像和包含最高得分\r\n        self.prep_score()\r\n        self.prep_high_score()\r\n\r\n    def prep_score(self):\r\n        \'\'\'将得分转换为一幅渲染的图像\'\'\'\r\n        rounded_score = int(round(self.stats.score, -1))\r\n        score_str = \"{:,}\".format(rounded_score)\r\n        self.score_image = self.font.render(score_str, True, self.text_color, self.ai_settings.bg_color)\r\n\r\n        #将得分放在屏幕右上角\r\n        self.score_rect = self.score_image.get_rect()\r\n        self.score_rect.right = self.screen_rect.right - 20\r\n        self.score_rect.top = 20\r\n\r\n    def prep_high_score(self):\r\n        \'\'\'将最高得分转换为渲染的图像\'\'\'\r\n        high_score = int(round(self.stats.high_score, -1))\r\n        high_score_str = \"{:,}\".format(high_score)\r\n        self.high_score_image = self.font.render(high_score_str, True, self.text_color, self.ai_settings.bg_color)\r\n\r\n        #将最高得分放在屏幕顶部中央\r\n        self.high_score_rect = self.high_score_image.get_rect()\r\n        self.high_score_rect.centerx = self.screen_rect.centerx\r\n        self.high_score_rect.top = self.score_rect.top\r\n\r\n    def show_score(self):\r\n        \'\'\'在屏幕上显示得分\'\'\'\r\n        self.screen.blit(self.score_image, self.score_rect)\r\n\r\n        \'\'\'显示最高得分\'\'\'\r\n        self.screen.blit(self.high_score_image, self.high_score_rect)\r\n\r\n        #在屏幕上显示score:\r\n        self.font2 = pygame.font.SysFont(None, 38)\r\n        self.score_image2 = self.font2.render(\"Score:\", True, self.text_color, self.ai_settings.bg_color)\r\n        self.score_rect2 = self.score_image2.get_rect()\r\n        self.score_rect2.right = self.score_rect.left - 10\r\n        self.score_rect2.top = 20\r\n        self.screen.blit(self.score_image2, self.score_rect2)\r\n```\r\n\r\n\r\n----------\r\nship.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nimport pygame\r\nimport pygame.font\r\n\r\nclass Ship():\r\n    def __init__(self, ai_settings, screen):\r\n        \"\"\"初始化飞船并设置其初始位置\"\"\"\r\n        self.screen = screen\r\n        self.ai_settings = ai_settings\r\n\r\n        #加载飞船图像并获取其外接矩形\r\n        self.image = pygame.image.load(\'images/ship.bmp\')\r\n        self.rect = self.image.get_rect()\r\n        self.screen_rect = screen.get_rect()\r\n\r\n        #将每艘飞船放在屏幕底部中央\r\n        self.rect.centerx = self.screen_rect.centerx\r\n        self.rect.bottom = self.screen_rect.bottom\r\n\r\n        #在飞船的属性center中存储小数值\r\n        self.center = float(self.rect.centerx)\r\n\r\n        #移动标志\r\n        self.moving_right = False\r\n        self.moving_left = False\r\n\r\n    def update(self):\r\n        \'\'\'根据移动标志调整飞船的位置\'\'\'\r\n        #更改飞船的center值，而不是rect\r\n        if self.moving_right and self.rect.right < self.screen_rect.right:      #确保飞船不会移出屏幕\r\n            self.center += self.ai_settings.ship_speed_factor\r\n        if self.moving_left and self.rect.left > 0:\r\n            self.center -= self.ai_settings.ship_speed_factor\r\n\r\n        #根据self更新rect对象\r\n        self.rect.centerx = self.center\r\n\r\n    def blitme(self):\r\n        \"\"\"在指定位置绘制飞船\"\"\"\r\n        self.screen.blit(self.image, self.rect)\r\n\r\n    def center_ship(self):\r\n        #让飞船居中\r\n        self.center = self.screen_rect.centerx\r\n\r\n\'\'\'\r\n    def show_end(self):\r\n        # 在屏幕上显示game over:\r\n        self.text_color3 = (30, 30, 30)\r\n        self.font3 = pygame.font.SysFont(None, 48)\r\n        self.image3 = self.font3.render(\"Game over\", True, self.text_color3, self.ai_settings.bg_color)\r\n        self.rect3 = self.image3.get_rect()\r\n        self.rect3.top = 20\r\n        self.rect3.left = 100\r\n        self.screen.blit(self.image3, self.rect3)\r\n        print(\"1\")\r\n\'\'\'\r\n```\r\nalien.py\r\n\r\n```python\r\n#encoding:utf-8\r\n\r\nimport pygame\r\nfrom pygame.sprite import Sprite\r\n\r\nclass Alien(Sprite):\r\n    \"\"\"表示单个外星人的类\"\"\"\r\n\r\n    def __init__(self, ai_settings, screen):\r\n        \'\'\'初始化外星人并设置其初始位置\'\'\'\r\n        super(Alien, self).__init__()\r\n        self.screen = screen\r\n        self.ai_settings = ai_settings\r\n\r\n        #加载外星人图像， 并设置其rect属性\r\n        self.image = pygame.image.load(\'images/alien.bmp\')\r\n        self.rect = self.image.get_rect()\r\n\r\n        #每个外星人最初都在屏幕左上角附近\r\n        self.rect.x = self.rect.width\r\n        self.rect.y = self.rect.height\r\n\r\n        #存储外星人的准确位置\r\n        self.x = float(self.rect.x)\r\n\r\n    def blitme(self):\r\n        \'\'\'在指定位置绘制外星人\'\'\'\r\n        self.screen.blit(self.image, self.rect)\r\n\r\n    def check_edges(self):\r\n        \'\'\'如果外星人位于屏幕边缘，就返回True\'\'\'\r\n        screen_rect = self.screen.get_rect()\r\n        if self.rect.right >= screen_rect.right:\r\n            return True\r\n        elif self.rect.left <= 0:\r\n            return True\r\n\r\n    def update(self):\r\n        \'\'\'向左或向右移动外星人\'\'\'\r\n        self.x += (self.ai_settings.alien_speed_factor * self.ai_settings.fleet_direction)\r\n        self.rect.x = self.x\r\n```\r\n![](/media/editor/20171112171416004_20180806160353190643.gif)','2018-08-06 16:05:30.225808','2018-09-14 09:22:21.551291',86,'pic_img/733523789408499038_sg48365.gif',1,10),(22,'c++中string的用法','````c++\r\n#include<iostream>\r\n#include\"string\"\r\n#include\"algorithm\"\r\nusing namespace std;\r\n\r\n//string的赋值\r\nvoid f1()\r\n{\r\n    string s1 =\"shihao\";        //string是一个类\r\n    string s2 (\"bbbbbb\");\r\n    string s3 = s1;\r\n    string s4(10, \'a\');     //等价于string s4 =\"aaaaaaaaaa\";\r\n    cout << s1 << endl;\r\n    cout << s2 << endl;\r\n    cout << s3 << endl;\r\n    cout << s4 << endl;\r\n}\r\n\r\n//string的遍历\r\nvoid f2()\r\n{\r\n    string s1 = \"abcdefg\";\r\n\r\n    //1:数组方式\r\n    for(int i = 0;  i < s1.length(); i++)\r\n    {\r\n        cout << s1[i] << \" \";\r\n    }\r\n    cout << endl;\r\n\r\n    //2:迭代器\r\n    for(string::iterator it = s1.begin(); it != s1.end(); it++)\r\n    {\r\n        cout << *it << \" \";\r\n    }\r\n    cout << endl;\r\n\r\n    //3  异常处理\r\n    try\r\n    {\r\n        for(int i = 0; i < s1.length() + 3; i++)\r\n        {\r\n            cout << s1.at(i) << \" \";   //当出现错误时， 会向外抛出异常\r\n        }\r\n    }\r\n    catch(...)\r\n    {\r\n        cout << \"发生异常\" << endl;\r\n    }\r\n\r\n    try\r\n    {\r\n        for(int i = 0;  i < s1.length() + 3; i++)   //出现错误, 不向外抛出异常\r\n        {\r\n            cout << s1[i] << \" \";\r\n        }\r\n    }\r\n    catch(...)\r\n    {\r\n        cout << \"发生异常\" << endl;\r\n    }\r\n}\r\n\r\n//字符指针和sting的转换\r\nvoid f4()\r\n{\r\n    //1:\r\n    string s1 = \"aaabbb\";\r\n    cout << s1.c_str() << endl;\r\n\r\n    //2:\r\n    char buf[128] = {0};\r\n    s1.copy(buf, 3, 1);    //拷贝3个字符，从1个字符开始(位置下标从0开始)    //注：不会自动加上字符串结束标志\r\n    cout << \"buf: \" << buf << endl;\r\n}\r\n\r\n//字符串的连接\r\nvoid f5()\r\n{\r\n    //1:\r\n    string s1 = \"aaa\";\r\n    string s2 = \"bbb\";\r\n    s1 = s1 + s2;\r\n    cout << \"s1: \" << s1 << endl;\r\n\r\n    //2:\r\n    string s3 = \"333\";\r\n    string s4 = \"444\";\r\n    s3.append(s4);\r\n    cout << \"s3: \" << s3 << endl;\r\n}\r\n\r\n//字符串的查找和替换\r\nvoid f6()\r\n{\r\n    string s1 = \"wbm hello wbm 111 wbm 222 wbm 333\";\r\n\r\n    //查找 从查找位置开始第一个出现的下标\r\n    int index = s1.find(\"wbm\", 1);  //位置下标从0开始\r\n    cout <<\"index: \" << index << endl << endl;\r\n\r\n    //查找每一次wbm出现的下标\r\n    int offindex = s1.find(\"wbm\", 0);\r\n    while (offindex != string::npos)   //不等于-1\r\n    {\r\n        cout << \"offindex: \" << offindex << endl;\r\n        offindex++;\r\n        offindex = s1.find(\"wbm\", offindex);\r\n    }\r\n\r\n    //把所有的wbm换成大写\r\n    offindex = s1.find(\"wbm\", 0);\r\n    while (offindex != string::npos)   //不等于-1\r\n    {\r\n        s1.replace(offindex, 3, \"WBM\");\r\n        offindex++;\r\n        offindex = s1.find(\"wbm\", offindex);\r\n    }\r\n    cout << endl << \"s1替换后的结果为： \" << s1 << endl;\r\n\r\n    //把aaa替换成大写\r\n    string s2 = \"aaa bbb ccc\";\r\n    s2.replace(0, 3, \"AAA\");    //从第0个位置开始替换3个\r\n    cout << endl << \"s2: \" << s2 << endl;\r\n}\r\n\r\n//区间删除和插入\r\nvoid f7()\r\n{\r\n    string s1 = \"hello1 hello2 hello1\";\r\n    string::iterator it = find(s1.begin(), s1.end(), \'l\');\r\n    if (it != s1.end())\r\n    {\r\n        s1.erase(it);   //删除\r\n    }\r\n    cout << \"s1删除l以后的结果为：\" << s1 << endl;\r\n\r\n    s1.erase(s1.begin(), s1.end());\r\n    cout << \"s1全部删除：\" << s1 << endl;\r\n    cout << \"s1的长度为: \" << s1.length() << endl;\r\n\r\n    //插入\r\n    string s2 = \"BBB\";\r\n    s2.insert(0, \"AAA\");\r\n    cout << \"s2: \" << s2 << endl;\r\n}\r\n\r\n//大小写转换\r\nvoid f8()\r\n{\r\n    string s1 = \"AAAbbb\";\r\n    transform(s1.begin(), s1.end(), s1.begin(), ::tolower);       //transform(first,last,result,op);\r\n    cout << \"s1全部转化为小写为: \" << s1 << endl;\r\n    transform(s1.begin(), s1.end(), s1.begin(), ::toupper);       //transform(first,last,result,op);\r\n    cout << \"s1全部转化为大写为: \" << s1 << endl;\r\n}\r\n\r\nint main()\r\n{\r\n    f8();\r\n    return 0;\r\n}\r\n\r\n````','2018-08-15 15:17:45.496949','2018-09-15 08:38:53.713570',31,'pic_img/u31404434502913357704fm214gp0_1.gif',1,11),(23,'python程序使用pdb调试','常用命令：\r\n-----\r\n```python\r\nbreak 或 b		设置断点\r\ncontinue 或 c	继续执行程序, 或是跳到下个断点\r\nlist 或 l		查看当前行的代码段\r\nstep 或 s		进入函数\r\nreturn 或 r		执行代码直到从当前函数返回\r\nexit 或 q		中止并退出\r\nnext 或 n		执行下一行\r\np 或!			打印变量的值，例如p a\r\nhelp 或 h		帮助\r\n```\r\n\r\n程序代码：\r\n---\r\n\r\n1.py\r\n```python\r\ndef Test():\r\n    \"注释\"\r\n    print(\"test\")\r\n\r\na = 11\r\nTest()\r\nb = 22\r\nc = 33\r\n```\r\n\r\n## 调试 ##\r\n```python\r\nshihao@shihao-PC:~/Desktop$ python -m pdb 1.py	  #进入调试\r\n> /home/shihao/Desktop/1.py(1)<module>()\r\n-> def Test():\r\n(Pdb) l							#显示代码\r\n  1  ->	def Test():             #箭头指向当前运行的位置\r\n  2  	    \"注释\"\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) n			#执行下一行\r\n> /home/shihao/Desktop/1.py(5)<module>()\r\n-> a = 11\r\n(Pdb) l				#显示\r\n  1  	def Test():\r\n  2  	    \"注释\"\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  ->	a = 11         #箭头指向当前运行行\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) n       			#执行下一行\r\n> /home/shihao/Desktop/1.py(6)<module>()\r\n-> Test()\r\n(Pdb) l               #显示\r\n  1  	def Test():\r\n  2  	    \"注释\"\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  ->	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) s           #进入函数\r\n--Call--\r\n> /home/shihao/Desktop/1.py(1)Test()\r\n-> def Test():\r\n(Pdb) l          #显示\r\n  1  ->	def Test():\r\n  2  	    \"注释\"\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) n          #执行下一行\r\n> /home/shihao/Desktop/1.py(3)Test()\r\n-> print(\"test\")\r\n(Pdb) l\r\n  1  	def Test():\r\n  2  	    \"注释\"\r\n  3  ->	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) n			#执行下一行\r\ntest\r\n--Return--\r\n> /home/shihao/Desktop/1.py(3)Test()->None\r\n-> print(\"test\")\r\n(Pdb) l			#显示\r\n  1  	def Test():\r\n  2  	    \"注释\"\r\n  3  ->	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) n			#执行下一行\r\n> /home/shihao/Desktop/1.py(7)<module>()\r\n-> b = 22\r\n(Pdb) l\r\n  2  	    \"注释\"\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  ->	b = 22\r\n  8  	c = 33\r\n[EOF]\r\n(Pdb) b 8		#给第8行设置断点\r\nBreakpoint 1 at /home/shihao/Desktop/1.py:8\r\n(Pdb) c         #执行到下一断点处\r\n> /home/shihao/Desktop/1.py(8)<module>()\r\n-> c = 33\r\n(Pdb) l\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8 B->	c = 33         #B表示该处有断点\r\n[EOF]\r\n(Pdb) clear 1		#删除第一个断点\r\nDeleted breakpoint 1 at /home/shihao/Desktop/1.py:8		#显示第一个断点在第八行\r\n(Pdb) n		#执行1行\r\n--Return--		#提示程序执行到最后\r\n> /home/shihao/Desktop/传智学习/python核心编程/1.py(8)<module>()->None\r\n-> c = 33\r\n(Pdb) l		#显示程序\r\n  3  	    print(\"test\")\r\n  4  	\r\n  5  	a = 11\r\n  6  	Test()\r\n  7  	b = 22\r\n  8  ->	c = 33      #前面的B已经消失，说明断点已经删除\r\n[EOF]\r\n(Pdb) p a			#打印a的值\r\n11\r\n(Pdb) p b			#打印b的值\r\n22\r\n(Pdb) q				#输入q退出\r\n```','2018-08-22 09:33:07.784989','2018-09-14 10:37:34.699919',42,'pic_img/book.jpg',1,9),(24,'随机漫步','```python\r\n#encoding:utf-8\r\n\r\nfrom random import choice\r\nimport matplotlib.pyplot as plt\r\n\r\nclass RandomWalk():\r\n    \'\'\'一个生成随机漫步数据的类\'\'\'\r\n    def __init__(self, num_points = 50000):\r\n        \'\'\'初始化随机漫步的属性\'\'\'\r\n        self.num_points = num_points\r\n\r\n        #所有随机漫步都始于（0，0)_\r\n        self.x_values = [0]\r\n        self.y_values = [0]\r\n\r\n    def fill_walk(self):\r\n        \'\'\'计算随机漫步包含的所有的点\'\'\'\r\n\r\n        #不断漫步，直到列表达到指定的长度\r\n        while len(self.x_values) < self.num_points:\r\n            x_step = self.get_walk()\r\n            y_step = self.get_walk()\r\n\r\n            #拒绝原地踏步\r\n            if x_step == 0 and y_step == 0:\r\n                continue\r\n\r\n            #计算下一个点的x和y值\r\n            next_x = self.x_values[-1] + x_step\r\n            next_y = self.y_values[-1] + y_step\r\n\r\n            self.x_values.append(next_x)\r\n            self.y_values.append(next_y)\r\n\r\n    def get_walk(self):\r\n        direction = choice([1, -1])\r\n        distance = choice([0, 1, 2, 3, 4])\r\n        step = direction * distance\r\n        return step\r\n\r\nwhile True:\r\n    rw = RandomWalk()\r\n    rw.fill_walk()\r\n\r\n    #设置绘图窗口的尺寸\r\n    plt.figure(dpi = 128, figsize = (10, 6))    #dpi为分辨率，figsize为窗口尺寸\r\n\r\n    #绘制点并将图形显示出来\r\n    point_numbers = list(range(rw.num_points))\r\n    plt.scatter(rw.x_values, rw.y_values, c = point_numbers, cmap = plt.cm.Blues, edgecolor = \'none\', s = 1)\r\n    plt.scatter(0, 0, c = \'green\', edgecolors = \'none\', s = 100)      #重新绘制起点和终点\r\n    plt.scatter(rw.x_values[-1], rw.y_values[-1], c = \'green\', edgecolors = \'none\', s = 100)\r\n\r\n    #隐藏坐标轴\r\n    plt.axes().get_xaxis().set_visible(False)\r\n    plt.axes().get_yaxis().set_visible(False)\r\n\r\n    plt.show()\r\n\r\n    keep_running = input(\"Make another walk? (y/n): \")\r\n    if keep_running == \'n\':\r\n        break\r\n\r\n\r\n```\r\n![](/media/editor/20171121170319571_20180908174951649221.png)','2018-09-08 17:50:11.676697','2018-09-14 11:01:49.990223',39,'pic_img/mp55952360_1453432388097_3.gif',1,9),(25,'人生哲理','```\r\n　　人生来得突然去也匆匆\r\n\r\n　　在不断感受着幸福和快乐的同时也不断接受困难和挫折\r\n\r\n　　在不断创造成功与希望的同时也不断接受着失败与折磨\r\n\r\n　　这是一段短暂而漫长的旅程\r\n\r\n　　它丰富多采也荆棘丛生\r\n\r\n　　然而\r\n\r\n　　知道这段旅程短暂的人才活得如此精彩\r\n\r\n　　才更加珍惜生命\r\n\r\n　　鏖战不停地与时间赛跑\r\n\r\n　　才会有结实而雄厚的事业\r\n\r\n　　有了困难和挫折才会使人不段完善自己的榜样\r\n\r\n　　正如“河里没有岩石怎能激起美丽的浪花”\r\n\r\n　　所以\r\n\r\n　　不必对困境是疑惑\r\n\r\n　　它是人生的一大收获\r\n\r\n　　人嘛\r\n\r\n　　总得相信：\r\n\r\n　　有生就有死\r\n\r\n　　有欢喜就有悲伤\r\n\r\n　　有从逢就有离别\r\n\r\n　　有成功就有失败\r\n\r\n　　有暴雨必然会有晴天\r\n\r\n　　就让它顺其自然吧！！！\r\n\r\n\r\n```','2018-09-14 15:03:11.126167','2018-09-14 15:03:24.491977',2,'pic_img/0204b0888c057edb854bd219cec46814_rDF1MYz.gif',1,12),(26,'c++运算符重载','```cpp\r\n#ifndef ARRAY_H_INCLUDED\r\n#define ARRAY_H_INCLUDED\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nclass Array\r\n{\r\npublic:\r\n    int m_length;      //数组的长度\r\n    int *m_space;      //指向数组的指针\r\npublic:\r\n    Array(int length)   //确定数组长度并且给数组分配存储空间\r\n    {\r\n        this->m_length = length;\r\n        m_space = new int[m_length];\r\n    }\r\n\r\n    void setData(int index, int value)  //为数组赋值\r\n    {\r\n        m_space[index] = value;\r\n    }\r\n\r\n    int getData(int i)      //返回数组元素str[i]的值\r\n    {\r\n        return m_space[i];\r\n    }\r\n\r\n    int &operator[](int i)  //运算符[]的重载， 返回值做左值，返回一个引用\r\n    {\r\n        return m_space[i];\r\n    }\r\n\r\n    Array& operator=(Array &temp)             //用=进行深拷贝\r\n    {\r\n        if (this->m_space != NULL)      //先清除原来所占的内存\r\n        {\r\n            delete [] m_space;\r\n            m_length = 0;\r\n        }\r\n        this->m_length = temp.m_length;\r\n        this->m_space = new int[m_length];\r\n        for (int i = 0; i < m_length; i++)\r\n        {\r\n            this->m_space[i] = temp[i];\r\n        }\r\n        return *this;\r\n    }\r\n\r\n    int operator==(Array &temp) //数组相等返回1，否则返回0\r\n    {\r\n        if (this->m_length != temp.m_length)    //先判断两个数组长度是否相等\r\n            return 0;\r\n        for (int i = 0; i < this->m_length; i++)   //判断数组的各个元素是否相等\r\n        {\r\n            if (this->m_space[i] != temp[i])\r\n                return 0;\r\n        }\r\n        return 1;\r\n    }\r\n};\r\n\r\n#endif // ARRAY_H_INCLUDED\r\n\r\n\r\n\r\n\r\n\r\n#include\"Array.h\"\r\n\r\nint main()\r\n{\r\n    Array a1(10);   //定义数组并分配存储空间\r\n    for (int i = 0; i < a1.m_length; i++)   //初始化数组\r\n    {\r\n        a1.setData(i, i);\r\n    }\r\n    cout << \"a1数组元素为:\" <<endl;\r\n    for (int i = 0; i < a1.m_length; i++)   //输出数组的值\r\n    {\r\n        cout << a1.getData(i) << \" \";\r\n    }\r\n    cout << endl;\r\n   // Array a2 = a1;\r\n    Array a2(5);\r\n        a2 = a1;\r\n        a2[2] = 10;\r\n    cout << \"a1[2]: \" << a1[2] << endl;\r\n    cout << \"a2[2]: \" << a2[2] << endl;\r\n    cout << \"a2数组元素为:\" <<endl;\r\n    for (int i = 0; i < a2.m_length; i++)   //输出数组的值\r\n    {\r\n        cout << a2.getData(i) << \" \";\r\n    }\r\n    cout << endl;\r\n    if (a1 == a2)\r\n        cout << \"两数组相等\" << endl;\r\n    else\r\n        cout << \"两数组不相等\" << endl;\r\n    return 0;\r\n}\r\n\r\n```\r\n\r\n\r\n```','2018-09-14 15:07:10.097338','2018-09-14 15:07:48.649711',2,'pic_img/96b8f5e079144898880776823fe8114e_YUMlhrn.gif',1,11),(27,'c++重载重写重定义','```cpp\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nclass Base\r\n{\r\npublic:\r\n    // =========================================================================\r\n    //  子类和父类返回值参数相同，函数名相同，有/无virtual关键字\r\n    // =========================================================================\r\n\r\n    //  若无virtual关键字，则在子类中声明与父类同名的方法，从而覆盖了父类的方法（函数重定义）\r\n    void a()\r\n    {\r\n        cout << \"Base::a()\" << endl;\r\n    };\r\n\r\n    // 若有virtual关键字，即为虚函数。由对象的类型决定调用哪个函数（多态，函数重写override）。\r\n    virtual void b()\r\n    {\r\n        cout << \"Base::b()\" << endl;\r\n    }\r\n\r\n    // =========================================================================\r\n    //  子类和父类返回值参数不同，函数名相同，有/无virtual关键字\r\n    // =========================================================================\r\n\r\n    // 若无virtual关键字，父类的同名成员被隐藏。\r\n    void d(int x)\r\n    {\r\n        cout << \"Base::d() x = \" << x << endl;\r\n    }\r\n\r\n    // 若有virtual关键字，父类的同名成员同样被隐藏。\r\n    virtual void e(int x)\r\n    {\r\n        cout << \"Base::e() x = \" << x << endl;\r\n    }\r\n\r\n    // =========================================================================\r\n    //  子类和父类返回值参数相同，函数名相同，函数返回值不同，有/无virtual关键字\r\n    // =========================================================================\r\n\r\n    // 若无virtual关键字（函数重写，这种情况不属于“函数重载”范畴）\r\n    void f()\r\n    {\r\n        cout << \"void Base::f()\" << endl;\r\n    }\r\n\r\n    // 若有virtual关键字 (报错）\r\n    virtual void g()\r\n    {\r\n        cout << \"virtual void Base::g()\" << endl;\r\n    }\r\n};\r\n\r\nclass Derived : public Base\r\n{\r\npublic:\r\n    // =========================================================================\r\n    //  子类和父类返回值参数相同，函数名相同，有/无virtual关键字\r\n    // =========================================================================\r\n\r\n    //  覆盖了父类同名方法（函数重写）\r\n    void a()\r\n    {\r\n        cout << \"Derived::a()\" << endl;\r\n    }\r\n\r\n    // 多态\r\n    virtual void b()\r\n    {\r\n        cout << \"Derived::b()\" << endl;\r\n    }\r\n\r\n    // =========================================================================\r\n    //  子类和父类返回值参数不同，函数名相同，有/无virtual关键字\r\n    // （注：函数重载与virtual关键字有无没有关系）\r\n    // =========================================================================\r\n\r\n    // 父类同名成员被隐藏\r\n    void d(int x, int y)\r\n    {\r\n        cout << \"Derived::d() x = \" << x << \" y = \" << y<< endl;\r\n    }\r\n\r\n    // 父类同名成员被隐藏\r\n    virtual void e(int x, int y)\r\n    {\r\n        cout << \"Derived::e() x = \" << x << \" y = \" << y << endl;\r\n    }\r\n\r\n    // =========================================================================\r\n    //  子类和父类返回值参数相同，函数名相同，函数返回值不同，有/无virtual关键字\r\n    // =========================================================================\r\n\r\n    // 返回值与基类不同\r\n    int f()\r\n    {\r\n        cout << \"int Derived::f()\" << endl;\r\n        return 1;\r\n    }\r\n\r\n    //// 错误\r\n    //virtual int g()\r\n    //{\r\n    //  cout << \"virtual int Base::g()\" << endl;\r\n    //  return 1;\r\n    //}\r\n};\r\n\r\nint main()\r\n{\r\n    // 用作参数\r\n    int xx = 100;\r\n\r\n    cout << \"子类和父类返回值参数相同，函数名相同，无virtual关键字\" << endl;\r\n    Derived d;\r\n    d.a();\r\n    d.Base::a();    // 显示调用基类方法\r\n    cout << \"子类和父类返回值参数相同，函数名相同，有virtual关键字\" << endl;\r\n    Base* b = new Derived;  //多态\r\n    b->b();\r\n    Base* s = new Base;\r\n    s->b();\r\n    cout << \"子类和父类返回值参数不同，函数名相同，无virtual关键字\" << endl;\r\n    d.d(xx, xx);\r\n    // d.d(xx); // 报错\r\n    d.Base::d(xx); // 显示调用\r\n    cout << \"子类和父类返回值参数不同，函数名相同，有virtual关键字\" << endl;\r\n    d.e(xx, xx);\r\n    //d.e(xx); // 报错\r\n    d.Base::e(xx);\r\n    cout << \"子类和父类返回值参数相同，函数名相同，函数返回值不同, 无virtual关键字\" << endl;\r\n    d.f();\r\n    d.Base::f();\r\n}\r\n\r\n```','2018-09-14 15:08:55.921981','2018-09-14 15:11:45.408323',2,'pic_img/rBABqFmNbmiENuPsAAAAAHGwmjE439_pfvElgv.gif',1,11),(28,'c语言指针转置二维数组','```c\r\n1,.静态：\r\n#include<stdio.h>\r\nvoid input(int *p,int n,int m)\r\n{\r\n    int i,j;\r\n    for(i=0;i<n;i++)\r\n        for(j=0;j<m;j++,p++)\r\n        scanf(\"%d\",p);\r\n}\r\nvoid swap(int *p1,int *p2,int n,int m)\r\n{\r\n    int i,j;\r\n    for(i=0;i<n;i++)\r\n        for(j=0;j<m;j++)\r\n        *(p2+j*n+i)=*(p1+i*m+j);\r\n}\r\nvoid output(int *p,int n,int m)\r\n{\r\n    int i,j;\r\n    for(i=0;i<m;i++)\r\n    {\r\n        for(j=0;j<n;j++,p++)\r\n        printf(\"%d \",*p);\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nint main()\r\n{\r\n    int a[50][50],b[50][50];\r\n    int n,m;\r\n    scanf(\"%d%d\",&n,&m);\r\n    input(*a,n,m);\r\n    swap(*a,*b,n,m);\r\n    output(*b,n,m);\r\n    return 0;\r\n}\r\n\r\n2.动态分配存储空间：\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nvoid input(int *p,int n,int m)\r\n{\r\n    int i,j;\r\n    for (i=0; i<n; i++)\r\n    {\r\n        for (j=0; j<m; j++,p++)\r\n        {\r\n            scanf(\"%d\",p);\r\n        }\r\n    }\r\n}\r\nvoid change(int *p,int *q,int n,int m)\r\n{\r\n    int i,j;\r\n    for (i=0; i<n; i++)\r\n    {\r\n        for (j=0; j<m; j++)\r\n        {\r\n            *(q+j*n+i)=*(p+i*m+j);\r\n        }\r\n    }\r\n}\r\nvoid output(int *q,int n,int m)\r\n{\r\n    int i,j;\r\n    for (i=0; i<n; i++)\r\n    {\r\n        for (j=0; j<m; j++,q++)\r\n        {\r\n            printf(\"%d \",*q);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}\r\nint main()\r\n{\r\n    int n,m;\r\n    int *p,*q;\r\n    scanf(\"%d%d\",&n,&m);\r\n    p=(int *)malloc(sizeof(int)*n*m);\r\n    q=(int *)malloc(sizeof(int)*n*m);\r\n    input(p,n,m);\r\n    change(p,q,n,m);\r\n    output(q,m,n);\r\n    free(p);\r\n    free(q);\r\n    return 0;\r\n}\r\n\r\n```','2018-09-14 15:11:44.247246','2018-09-14 15:11:48.890133',1,'pic_img/f636afc379310a55c363958dbb4543a982261007.gif',1,13),(29,'街区最短路径问题','```c\r\n街区最短路径问题\r\n时间限制：3000 ms  |  内存限制：65535 KB\r\n难度：4\r\n描述\r\n一个街区有很多住户，街区的街道只能为东西、南北两种方向。\r\n\r\n住户只可以沿着街道行走。\r\n\r\n各个街道之间的间隔相等。\r\n\r\n用(x,y)来表示住户坐在的街区。\r\n\r\n例如（4,20），表示用户在东西方向第4个街道，南北方向第20个街道。\r\n\r\n现在要建一个邮局，使得各个住户到邮局的距离之和最少。\r\n\r\n求现在这个邮局应该建在那个地方使得所有住户距离之和最小；\r\n\r\n输入\r\n第一行一个整数n<20，表示有n组测试数据，下面是n组数据;\r\n每组第一行一个整数m<20,表示本组有m个住户，下面的m行每行有两个整数0<x,y<100，表示某个用户所在街区的坐标。\r\nm行后是新一组的数据；\r\n输出\r\n每组数据输出到邮局最小的距离和，回车结束；\r\n样例输入\r\n2\r\n3\r\n1 1\r\n2 1\r\n1 2\r\n5\r\n2 9 \r\n5 20\r\n11 9\r\n1 1\r\n1 20\r\n样例输出\r\n2\r\n44\r\n```\r\n\r\n```\r\n/*************************************************************************\r\n    > File Name: 街区最短路径问题.c\r\n    > Author: shihao\r\n    > Mail: 249083992@qq.com \r\n    > Created Time: 2018年03月08日 星期四 20时05分03秒\r\n ************************************************************************/\r\n\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\n\r\nstruct Point\r\n{\r\n	int x;\r\n	int y;\r\n}p[20];\r\n\r\nint main()\r\n{\r\n	int n;\r\n	scanf(\"%d\", &n);\r\n	while(n--)\r\n	{\r\n		int num, i, j, temp;\r\n		scanf(\"%d\", &num);\r\n		for (i = 0; i < num; i++)\r\n			scanf(\"%d%d\", &p[i].x, &p[i].y);\r\n		for (i = 0; i < num-1; i++)\r\n		{\r\n			for (j = 0; j < num-1-i; j++)\r\n			{\r\n				if (p[j].x > p[j+1].x)\r\n				{\r\n					temp = p[j].x;\r\n					p[j].x = p[j+1].x;\r\n					p[j+1].x = temp;\r\n				}\r\n				if (p[j].y > p[j+1].y)\r\n				{\r\n					temp = p[j].y;\r\n					p[j].y = p[j+1].y;\r\n					p[j+1].y = temp;\r\n				}\r\n			}\r\n		}\r\n		int x = p[num/2].x;\r\n		int y = p[num/2].y;\r\n		int total = 0;\r\n		for (i = 0; i < num; i++)\r\n		{\r\n			total = total + fabs(p[i].x - x) + fabs(p[i].y - y) ;\r\n		}\r\n		printf(\"%d\\n\", total);\r\n	}\r\n	return 0;\r\n}\r\n```','2018-09-14 15:12:36.244946','2018-09-14 15:12:40.038853',1,'pic_img/733523789408499038_SINBngD.gif',1,13),(30,'学生成绩管理系统','```c\r\n#include<stdio.h>\r\n#include<string.h>\r\n\r\n/*定义学生结构体*/\r\nstruct Student\r\n{\r\n    char ID[20];    //学号\r\n    char Name[20];  //姓名\r\n    float Mark1;    //语文成绩\r\n    float Mark2;    //数学成绩\r\n    float Mark3;    //英语成绩\r\n    float Average;  //平均成绩\r\n};\r\n\r\n\r\n/*声明学生数组及学生数量*/\r\nstruct Student students[1000];\r\nint num=0;\r\n\r\n\r\n/*求平均值*/\r\nfloat Avg(struct Student stu)\r\n{\r\n    return (stu.Mark1+stu.Mark2+stu.Mark3)/3;\r\n}\r\n\r\n\r\n\r\n/*通过学号返回数组下标*/\r\nint Student_SearchByIndex(char id[])\r\n{\r\n    int i;\r\n    for (i=0;i<num;i++)\r\n    {\r\n        if (strcmp(students[i].ID,id)==0)\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n/*通过姓名返回数组下标*/\r\nint Student_SearchByName(char name[])\r\n{\r\n    int i;\r\n    for (i=0;i<num;i++)\r\n    {\r\n        if (strcmp(students[i].Name,name)==0)\r\n        {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\n\r\n/*显示单条学生记录*/\r\nvoid Student_DisplaySingle(int index)\r\n{\r\n    printf(\"%10s%10s%8s%8s%8s%10s\\n\",\"学号\",\"姓名\",\"语文\",\"数学\",\"英语\",\"平均成绩\");\r\n    printf(\"-------------------------------------------------------------\\n\");\r\n    printf(\"%10s%10s%8.2f%8.2f%8.2f%10.2f\\n\",students[index].ID,students[index].Name,\r\n    students[index].Mark1,students[index].Mark2,students[index].Mark3,students[index].Average);\r\n}\r\n\r\n/*插入学生信息*/\r\nvoid Student_Insert()\r\n{\r\n    while(1)\r\n    {\r\n        printf(\"请输入学号:\");\r\n        scanf(\"%s\",&students[num].ID);\r\n        getchar();\r\n\r\n        printf(\"请输入姓名:\");\r\n        scanf(\"%s\",&students[num].Name);\r\n        getchar();\r\n\r\n        printf(\"请输入语文成绩:\");\r\n        scanf(\"%f\",&students[num].Mark1);\r\n        getchar();\r\n\r\n        printf(\"请输入数学成绩:\");\r\n        scanf(\"%f\",&students[num].Mark2);\r\n        getchar();\r\n\r\n        printf(\"请输入英语成绩:\");\r\n        scanf(\"%f\",&students[num].Mark3);\r\n        getchar();\r\n\r\n        students[num].Average=Avg(students[num]);\r\n        num++;\r\n        printf(\"是否继续?(y/n)\");\r\n        if (getchar()==\'n\')\r\n        {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/*修改学生信息*/\r\nvoid Student_Modify()\r\n{\r\n    //float mark1,mark2,mark3;\r\n    while(1)\r\n    {\r\n        char id[20];\r\n        int index;\r\n        printf(\"请输入要修改的学生的学号:\");\r\n        scanf(\"%s\",&id);\r\n        getchar();\r\n        index=Student_SearchByIndex(id);\r\n        if (index==-1)\r\n            printf(\"学生不存在!\\n\");\r\n        else\r\n        {\r\n            printf(\"你要修改的学生信息为:\\n\");\r\n            Student_DisplaySingle(index);\r\n            printf(\"-- 请输入新值--\\n\");\r\n            printf(\"请输入学号:\");\r\n            scanf(\"%s\",&students[index].ID);\r\n            getchar();\r\n            printf(\"请输入姓名:\");\r\n            scanf(\"%s\",&students[index].Name);\r\n            getchar();\r\n            printf(\"请输入语文成绩:\");\r\n            scanf(\"%f\",&students[index].Mark1);\r\n            getchar();\r\n            printf(\"请输入数学成绩:\");\r\n            scanf(\"%f\",&students[index].Mark2);\r\n            getchar();\r\n            printf(\"请输入英语成绩:\");\r\n            scanf(\"%f\",&students[index].Mark3);\r\n            getchar();\r\n            students[index].Average=Avg(students[index]);\r\n        }\r\n        printf(\"是否继续?(y/n)\");\r\n        if (getchar()==\'n\')\r\n            break;\r\n    }\r\n}\r\n\r\n/*删除学生信息*/\r\nvoid Student_Delete()\r\n{\r\n    int i;\r\n    while(1)\r\n    {\r\n        char id[20];\r\n        int index;\r\n        printf(\"请输入要删除的学生的学号:\");\r\n        scanf(\"%s\",&id);\r\n        getchar();\r\n        index=Student_SearchByIndex(id);\r\n        if (index==-1)\r\n        {\r\n            printf(\"学生不存在!\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"你要删除的学生信息为:\\n\");\r\n            Student_DisplaySingle(index);\r\n            printf(\"是否真的要删除?(y/n)\");\r\n            if (getchar()==\'y\')\r\n            {\r\n                for (i=index;i<num-1;i++)\r\n                {\r\n                   students[i]=students[i+1];//把后边的对象都向前移动\r\n                }\r\n                num--;\r\n            }\r\n            getchar();\r\n        }\r\n        printf(\"是否继续?(y/n)\");\r\n        if (getchar()==\'n\')\r\n        {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*按姓名查询*/\r\nvoid Student_Select()\r\n{\r\n    while(1)\r\n    {\r\n        char name[20];\r\n        int index;\r\n        printf(\"请输入要查询的学生的姓名:\");\r\n        scanf(\"%s\",&name);\r\n        getchar();\r\n        index=Student_SearchByName(name);\r\n        if (index==-1)\r\n        {\r\n            printf(\"学生不存在!\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"你要查询的学生信息为:\\n\");\r\n            Student_DisplaySingle(index);\r\n        }\r\n        printf(\"是否继续?(y/n)\");\r\n        if (getchar()==\'n\')\r\n        {\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*按平均值排序*/\r\nvoid Student_SortByAverage()\r\n{\r\n    int i,j;\r\n    struct Student tmp;\r\n    for (i=0;i<num;i++)\r\n    {\r\n        for (j=1;j<num-i;j++)\r\n        {\r\n            if (students[j-1].Average<students[j].Average)\r\n            {\r\n                tmp=students[j-1];\r\n                students[j-1]=students[j];\r\n                students[j]=tmp;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n/*显示学生信息*/\r\nvoid Student_Display()\r\n{\r\n    int i;\r\n    printf(\"%10s%10s%8s%8s%8s%10s\\n\",\"学号\",\"姓名\",\"语文\",\"数学\",\"英语\",\"平均成绩\");\r\n    printf(\"-------------------------------------------------------------\\n\");\r\n    for (i=0;i<num;i++)\r\n    {\r\n        printf(\"%10s%10s%8.2f%8.2f%8.2f%10.2f\\n\",students[i].ID,students[i].Name,\r\n        students[i].Mark1,students[i].Mark2,students[i].Mark3,students[i].Average);\r\n    }\r\n}\r\n\r\n\r\n/*将学生信息从文件读出*/\r\nvoid IO_ReadInfo()\r\n{\r\n    FILE *fp;\r\n    int i;\r\n    if ((fp=fopen(\"Database.txt\",\"rb\"))==NULL)\r\n    {\r\n        printf(\"不能打开文件!\\n\");\r\n        return;\r\n    }\r\n    if (fread(&num,sizeof(int),1,fp)!=1)\r\n    {\r\n        num=-1;\r\n    }\r\n    else\r\n    {\r\n        for(i=0;i<num;i++)\r\n        {\r\n            fread(&students[i],sizeof(struct Student),1,fp);\r\n        }\r\n    }\r\n    fclose(fp);\r\n}\r\n\r\n\r\n/*将学生信息写入文件*/\r\nvoid IO_WriteInfo()\r\n{\r\n    FILE *fp;\r\n    int i;\r\n    if ((fp=fopen(\"Database.txt\",\"wb\"))==NULL)\r\n    {\r\n        printf(\"不能打开文件!\\n\");\r\n        return;\r\n    }\r\n    if (fwrite(&num,sizeof(int),1,fp)!=1)\r\n    {\r\n        printf(\"写入文件错误!\\n\");\r\n    }\r\n    for (i=0;i<num;i++)\r\n    {\r\n        if (fwrite(&students[i],sizeof(struct Student),1,fp)!=1)\r\n        {\r\n            printf(\"写入文件错误!\\n\");\r\n        }\r\n    }\r\n    fclose(fp);\r\n}\r\n\r\n\r\n/*主程序*/\r\nvoid main()\r\n{\r\n    int choice;\r\n    IO_ReadInfo();\r\n    while(1)\r\n    {\r\n        /*主菜单*/\r\n        printf(\"\\n           学生成绩管理系统            \");\r\n		printf(\"\\n***************************************\");\r\n		printf(\"\\n        1------增加学生记录            \");\r\n		printf(\"\\n        2------修改学生记录            \");\r\n		printf(\"\\n        3------删除学生记录            \");\r\n		printf(\"\\n        4------按姓名查询学生记录      \");\r\n		printf(\"\\n        5------按平均成绩排序          \");\r\n		printf(\"\\n        0------退出                    \");\r\n		printf(\"\\n**************************************\");\r\n        printf(\"\\n  请选择菜单号（0---5):      \");\r\n\r\n        scanf(\"%d\",&choice);\r\n        getchar();\r\n        switch(choice)\r\n        {\r\n            case 1:\r\n                Student_Insert();\r\n                break;\r\n            case 2:\r\n                Student_Modify();\r\n                break;\r\n            case 3:\r\n                Student_Delete();\r\n                break;\r\n            case 4:\r\n                Student_Select();\r\n                break;\r\n            case 5:\r\n                Student_SortByAverage();\r\n                Student_Display();\r\n                break;\r\n            case 0:\r\n                return;\r\n        }\r\n    IO_WriteInfo();\r\n    }\r\n}\r\n\r\n\r\n```','2018-09-14 15:14:30.927859','2018-09-14 15:14:30.927891',0,'pic_img/83025aafa40f4bfb0b175c3a084f78f0f636189d_gpiJjS0.gif',1,13),(31,'无线网络覆盖','无线网络覆盖\r\n时间限制：3000 ms  |  内存限制：65535 KB\r\n难度：3\r\n\r\n描述\r\n\r\n    我们的乐乐同学对于网络可算得上是情有独钟，他有一个计划，那就是用无线网覆盖郑州大学。\r\n\r\n    现在学校给了他一个机会，因此他要购买很多的无线路由。现在他正在部署某条大道的网络，而学校只允许把他的无线路由器放在路的正中间。我们默认这条大道是笔直的并且它在任何地方的宽度都一样。并且所有的路由器的覆盖面积是相同的。现在乐乐计算出这条大道的长和宽，以及路由器的覆盖半径，想请你帮忙，帮他计算出他最少要购买的路由器的数量。\r\n\r\n    注意：为了防止某种干扰，两台无线路由之间的最小距离不能小于1米\r\n\r\n    图1中为一条矩形的道路，中间的虚线代表中线。图2为最小覆盖的示意图。\r\n\r\n     \r\n\r\n输入\r\n    输入包括多组测试数据\r\n    第一部分：一个整数T(1<=T<=500)\r\n    第二部分：一共T行，每行包括三个整数L,D,R代表路的长，宽和覆盖半径（米）。\r\n    (1<=L<=100000),(1<=D<=50),(1<=R<=200)。\r\n输出\r\n    对于每组测试数据输出各占一行，只有一个整数，表示最少的路由器数量。如果不能覆盖，请输出impossible\r\n样例输入\r\n\r\n    2\r\n    40 6 5\r\n    40 10 5\r\n\r\n样例输出\r\n\r\n    5\r\n    impossible\r\n\r\n\r\n```c\r\n \r\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int n,a,b,r,t;\r\n    double f;\r\n    scanf(\"%d\",&n);\r\n    while (n--)\r\n    {\r\n        scanf(\"%d%d%d\",&a,&b,&r);\r\n        t=f=a/(sqrt(r*r-b*b/4.0)*2);\r\n        if (t<0)\r\n            printf(\"impossible\\n\");\r\n        if (t>=0 && t == f)\r\n            printf(\"%d\\n\",t);\r\n        if (t>=0 && t!= f)\r\n            printf(\"%d\\n\",t+1);\r\n\r\n    }\r\n    return 0;\r\n}\r\n        \r\n```','2018-09-14 15:15:28.524958','2018-09-14 15:18:49.624105',1,'pic_img/book.jpg',1,13),(32,'蛇形添数','![](/media/editor/20171121091301687_20180914151942979323.png)\r\n```\r\n \r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int a[100][100]={0};\r\n    int k,m,n,i,j;\r\n    scanf(\"%d\",&n);\r\n    m=n/2-1;\r\n    i=0;\r\n    j=n-1;\r\n    for (k=1;k<=n*n;k++)\r\n    {\r\n        a[i][j]=k;\r\n        if (j==n-1 && i<n-1)\r\n            {i++;continue;}\r\n        if (i==n-1 && j >0)\r\n            {j--; continue;}\r\n        if (i>0 && j == 0)\r\n            {i--; continue;}\r\n        if (i==0 && a[i][j+1]==0)\r\n            {j++; continue;}\r\n        if (j>m && a[i+1][j]==0 && a[i][j+1]!=0)\r\n            {i++; continue;}\r\n        if (i>m && a[i][j-1]==0)\r\n            {j--; continue;}\r\n        if (j<=m && a[i-1][j]==0)\r\n            {i--; continue;}\r\n        if (i<=m && a[i][j+1]==0)\r\n            {j++; continue;}\r\n    }\r\n    for (i=0;i<n;i++)\r\n    {\r\n        for (j=0;j<n;j++)\r\n            printf(\"%d \",a[i][j]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}\r\n        \r\n```','2018-09-14 15:16:31.479539','2018-09-14 19:42:28.392016',3,'pic_img/4b145b63eb785b06a276c_pKOGDu7.gif',1,13),(33,'最长公共子序列','![](/media/editor/20171119190903598_20180914152111805510.png)\r\n```c\r\n#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\n#define MAX(a,b) a > b ? a : b\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while (n--)\r\n    {\r\n        char a[1000] = {0}, b[1000] = {0};\r\n        scanf(\"%s%s\",a,b);\r\n        int a_len = strlen(a), b_len = strlen(b);\r\n        int dp[a_len+1][b_len+1];      //定义dp[][]用来记录所有可能的最长公共子序列长度\r\n        memset(dp, 0, sizeof(dp));    //初始化二维数组dp[][];\r\n        int i, j;\r\n        for (i = 1; i <= a_len; i++)    //注意i和j应该从一开始\r\n        {\r\n            for (j = 1; j <= b_len; j++)\r\n            {\r\n                // 如果a[i-1] == b[i-1],则最长公共子序列长度加1\r\n                if (a[i-1] == b[j-1])\r\n                    dp[i][j] = dp[i-1][j-1] + 1;\r\n\r\n                //如果a[i-1] == b[i-1],则在两个子问题中去较大值\r\n                else\r\n                    dp[i][j] = MAX(dp[i-1][j], dp[i][j-1]);\r\n            }\r\n        }\r\n        printf(\"%d\\n\",dp[a_len][b_len]);\r\n    }\r\n    return 0;\r\n}\r\n        \r\n```','2018-09-14 15:21:57.725236','2018-09-14 15:21:57.725276',0,'pic_img/122_5dnHqAd.jpg',1,14),(34,'非洲小孩','![](/media/editor/20171120155434209_20180914152259714709.png)\r\n```c\r\n \r\n#include<stdio.h>\r\nstruct Node  // 定义结构体，方便处理数据\r\n{\r\n    int start;  //定义开始时间\r\n    int end;    //定义结束时间\r\n}a[200];\r\n\r\nvoid quick_sort(struct Node *arr, int l, int r)  //对结束时间进行排序\r\n{\r\n    if (l < r)     //进行判断，用来终止递归\r\n    {\r\n        int i = l, j = r, x = arr[l].end;\r\n        struct Node temp = arr[l];          //用来交换结构体数组变量\r\n        while (i < j)\r\n        {\r\n            while (i < j && x <= arr[j].end)    //从右往左找一个小于x的数\r\n                j--;\r\n            if (i < j)\r\n                arr[i++] = arr[j];\r\n            while (i < j && x > arr[i].end)     //从左往右找一个大于x的数\r\n                i++;\r\n            if (i < j)\r\n                arr[j--]= arr[i];\r\n        }\r\n        arr[i] = temp;\r\n        quick_sort(arr, l ,i - 1);              //递归调用，分治思想，左边分治。\r\n        quick_sort(arr, i + 1, r);              //右边分治\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (scanf(\"%d\",&n) != EOF)\r\n    {\r\n        int i, j, a1, a2, b1, b2, temp, sum = 1;\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d:%d-%d:%d\", &a1, &a2, &b1, &b2);\r\n            a2 = a1 * 60 + a2;\r\n            b2 = b1 * 60 + b2;\r\n            if (a2 > b2)        // 判断前面的时间是否小于后面的时间\r\n            {\r\n                temp = a2;\r\n                a2 = b2;\r\n                b2 = temp;\r\n            }\r\n            a[i].start = a2;\r\n            a[i].end = b2;\r\n        }\r\n        quick_sort(a, 0, n-1);  // 注意是从n-1开始\r\n        j = 0;\r\n        for (i = 0; i < n; i++)\r\n        {\r\n            if (a[i].start > a[j].end)  //当下一个的开始时间大于现在的结束时间时，说明需要开关一次水龙头。\r\n            {\r\n                j = i;\r\n                sum++;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}\r\n        \r\n```','2018-09-14 15:23:23.820767','2018-09-14 15:23:23.820795',0,'pic_img/83025aafa40f4bfb0b175c3a084f78f0f636189d_3IUFMsA.gif',1,14),(35,'背包问题','![](/media/editor/20171120154819047_20180914152456418309.png)\r\n```c\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nstruct Node\r\n{\r\n    double value;\r\n    double weight;\r\n}a[10];\r\n\r\nvoid quick_sort(struct Node *arr, int l, int r)  //对结束时间进行排序\r\n{\r\n    if (l < r)     //进行判断，用来终止递归\r\n    {\r\n        int i = l, j = r, x = arr[l].value;\r\n        struct Node temp = arr[l];          //用来交换结构体数组变量\r\n        while (i < j)\r\n        {\r\n            while (i < j && x <= arr[j].value)    //从右往左找一个小于x的数\r\n                j--;\r\n            if (i < j)\r\n                arr[i++] = arr[j];\r\n            while (i < j && x > arr[i].value)     //从左往右找一个大于x的数\r\n                i++;\r\n            if (i < j)\r\n                arr[j--]= arr[i];\r\n        }\r\n        arr[i] = temp;\r\n        quick_sort(arr, l ,i - 1);              //递归调用，分治思想，左边分治。\r\n        quick_sort(arr, i + 1, r);              //右边分治\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int s, i, j;\r\n    scanf(\"%d\",&s);\r\n    while (s--)             //s组测试数据\r\n    {\r\n        int n;\r\n        double m, total_value = 0, total_weight = 0;           //m为背包所能装的最大重量\r\n        scanf(\"%d%lf\",&n, &m);\r\n        for (i = 0; i < n; i++)\r\n            scanf(\"%lf%lf\",&a[i].value, &a[i].weight);\r\n        quick_sort(a, 0, n - 1);\r\n        for (i = n - 1; i >= 0; i--)\r\n        {\r\n            if (total_weight + a[i].weight <= m)\r\n            {\r\n                total_weight += a[i].weight;\r\n                total_value += a[i].value * a[i].weight;\r\n            }\r\n            else\r\n                break;\r\n        }\r\n        total_value += (m - total_weight) * a[i].value;\r\n        printf(\"%d\\n\",(int)total_value);\r\n    }\r\n    return 0;\r\n}\r\n        \r\n```','2018-09-14 15:25:09.084112','2018-09-14 15:25:09.084139',0,'pic_img/733523789408499038_itjq882.gif',1,14),(36,'二叉树子系统','```c\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\ntypedef char datatype;\r\ntypedef struct BitNode\r\n{\r\n	datatype data;\r\n	struct BitNode *lchild, *rchild;\r\n}BT;\r\n\r\nchar sh = \'0\';	  //判断是否为根结点\r\n\r\nBT *create_tree()\r\n{\r\n	BT *bt;\r\n	char x;\r\n\r\n	if (sh == \'0\')\r\n	{\r\n		printf(\"\\n请按先序序列输入二叉树结点。\'0\'表示后继结点为空。\\n请输入根结点: \");\r\n		sh = \'1\';\r\n	}\r\n	scanf(\"%c\", &x);\r\n	getchar();\r\n	if (x == \'0\')\r\n		bt = NULL;\r\n	else\r\n	{\r\n		bt = (BT *)malloc(sizeof(BT));\r\n		bt->data = x;\r\n		printf(\"请输入%c结点的左结点: \", x);\r\n		bt->lchild = create_tree();\r\n		printf(\"请输入%c结点的右结点: \", x);\r\n		bt->rchild = create_tree();\r\n	}\r\n	return bt;\r\n}\r\n\r\nvoid preorder(BT *bt)\r\n{\r\n	if (bt == NULL)\r\n		return;\r\n	printf(\"%c \", bt->data);\r\n	preorder(bt->lchild);\r\n	preorder(bt->rchild);\r\n}\r\n\r\nvoid inorder(BT *bt)\r\n{\r\n	if (bt == NULL)\r\n		return;\r\n	inorder(bt->lchild);\r\n	printf(\"%c \", bt->data);\r\n	inorder(bt->rchild);\r\n}\r\n\r\nvoid postorder(BT *bt)\r\n{\r\n	if (bt == NULL)\r\n		return;\r\n	postorder(bt->lchild);\r\n	postorder(bt->rchild);\r\n	printf(\"%c \", bt->data);\r\n}\r\n\r\nvoid levelorder(BT *bt)\r\n{\r\n	if (bt == NULL)\r\n		return;\r\n    int i = 0,j = 1;\r\n    BT *str[100], *p;\r\n    str[0] = bt;\r\n    while (i != j)\r\n    {\r\n        p = str[i];\r\n        printf(\"%c \", p->data);\r\n        if (p->lchild != NULL)\r\n        {\r\n            str[j] = p->lchild;\r\n            j++;\r\n        }\r\n        if (p->rchild != NULL)\r\n        {\r\n            str[j] = p->rchild;\r\n            j++;\r\n        }\r\n        i++;\r\n    }\r\n}\r\n\r\nint num = 0;\r\nvoid leafnum(BT *bt)\r\n{\r\n    if (bt != NULL)\r\n    {\r\n        if (bt->lchild == NULL && bt->rchild == NULL)\r\n            num++;\r\n        leafnum(bt->lchild);\r\n        leafnum(bt->rchild);\r\n    }\r\n}\r\n\r\nvoid nodenumber(BT *bt)\r\n{\r\n    if (bt != NULL)\r\n    {\r\n        num++;\r\n        nodenumber(bt->lchild);\r\n        nodenumber(bt->rchild);\r\n    }\r\n}\r\n\r\nint treedepth(BT *bt)\r\n{\r\n    int ldep, rdep;\r\n    if (bt == NULL)\r\n        return 0;\r\n    else\r\n    {\r\n        ldep = treedepth(bt->lchild);\r\n        rdep = treedepth(bt->rchild);\r\n        if (ldep > rdep)\r\n            return ldep + 1;\r\n        else\r\n            return rdep + 1;\r\n    }\r\n}\r\n\r\nvoid caidan()\r\n{\r\n	printf(\"\\n\\t\\t                二叉树子系统                   \\n\");\r\n	printf(\"\\t\\t***********************************************\\n\");\r\n	printf(\"\\t\\t*               1----建二叉树                 *\\n\");\r\n	printf(\"\\t\\t*               2----先序遍历                 *\\n\");\r\n	printf(\"\\t\\t*               3----中序遍历                 *\\n\");\r\n	printf(\"\\t\\t*               4----后序遍历                 *\\n\");\r\n	printf(\"\\t\\t*               5----层次遍历                 *\\n\");\r\n	printf(\"\\t\\t*               6----求叶子数                 *\\n\");\r\n	printf(\"\\t\\t*               7----求结点数                 *\\n\");\r\n	printf(\"\\t\\t*               8----求树深度                 *\\n\");\r\n	printf(\"\\t\\t*               0----返回                     *\\n\");\r\n	printf(\"\\t\\t***********************************************\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n	while (1)\r\n	{\r\n		int ch;\r\n		BT *bt;\r\n		caidan();\r\n		printf(\"\\n请选择菜单号<0-9>: \");\r\n		scanf(\"%d\", &ch);\r\n		getchar();\r\n		switch(ch)\r\n		{\r\n			case 1:\r\n				bt = create_tree();\r\n				printf(\"二叉树建立成功。\\n\");\r\n				break;\r\n			case 2:\r\n				printf(\"二叉树先序遍历为: \");\r\n				preorder(bt);\r\n				break;\r\n			case 3:\r\n				printf(\"二叉树中序遍历为: \");\r\n				inorder(bt);\r\n				break;\r\n			case 4:\r\n				printf(\"二叉树后序遍历为: \");\r\n				postorder(bt);\r\n				break;\r\n			case 5:\r\n				printf(\"二叉树层次遍历为: \");\r\n				levelorder(bt);\r\n				break;\r\n            case 6:\r\n                num = 0;\r\n                printf(\"二叉树叶子数为: \");\r\n                leafnum(bt);\r\n                printf(\"%d\\n\", num);\r\n                break;\r\n            case 7:\r\n                num = 0;\r\n                printf(\"二叉树结点数为: \");\r\n                nodenumber(bt);\r\n                printf(\"%d\\n\", num);\r\n                break;\r\n            case 8:\r\n                printf(\"树的深度为：\");\r\n                int dep = treedepth(bt);\r\n                printf(\"%d\\n\", dep);\r\n                break;\r\n            case 0:\r\n                printf(\"程序结束！\\n\");\r\n                return;\r\n		}\r\n	}\r\n\r\n	return 0;\r\n}\r\n\r\n```','2018-09-14 15:26:37.515500','2018-09-14 15:26:45.228738',1,'pic_img/f029bc9a7ec867c995d11359d00a75f4db79ef32_size100_w400_h300.gif',1,15),(37,'循环队列的基本操作','VC6.0下写的：\r\n```c\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#define MAXSIZE 100\r\ntypedef char datatype;\r\ntypedef struct\r\n{\r\n    datatype *base;     //存储空间的基地址\r\n    int front;      //记录队头的下标\r\n    int rear;       //记录队尾下一个位置的下标\r\n}Queue;\r\n\r\nint judge = 0;      //判断队是否存在（0为不存在，1为存在）\r\nQueue initQueue()   //构造空队\r\n{\r\n	Queue Q;\r\n	Q.base = (datatype *)malloc(sizeof(datatype) * MAXSIZE);\r\n    if (judge == 1)\r\n    {\r\n        printf(\"队列已存在！\\n\");\r\n		free(Q.base);\r\n        return Q;\r\n    }\r\n    if (!Q.base)\r\n    {\r\n        printf(\"构造空队失败！\\n\");\r\n        return Q;\r\n    }\r\n    judge = 1;\r\n    Q.front = 0;\r\n    Q.rear = 0;\r\n    printf(\"构造空队成功\\n\");\r\n    return Q;\r\n}\r\n\r\nQueue push_Queue(Queue Q)    //入队\r\n{\r\n	datatype data;\r\n    if (judge == 0)\r\n    {\r\n        printf(\"队列不存在！\\n\");\r\n        return Q;\r\n    }\r\n    if ((Q.rear + 1) % MAXSIZE == Q.front)\r\n    {\r\n        printf(\"队已满，无法入队！\\n\");\r\n        return Q;\r\n    }\r\n    printf(\"请输入要入队的元素：\\n\");\r\n    scanf(\"%c\", &data);\r\n    getchar();\r\n    Q.base[Q.rear] = data;\r\n    Q.rear = (Q.rear + 1) % MAXSIZE;\r\n    printf(\"元素%c已入队!\\n\", data);\r\n    return Q;\r\n}\r\n\r\nQueue pop_Queue(Queue Q)     //出队\r\n{\r\n	datatype data;\r\n    if (judge == 0)\r\n    {\r\n        printf(\"队列不存在！\\n\");\r\n        return Q;\r\n    }\r\n    if (Q.rear == Q.front)\r\n    {\r\n        printf(\"队列已空，无法出队！\\n\");\r\n        return Q;\r\n    }\r\n    data = Q.base[Q.front];\r\n    Q.front = (Q.front + 1) % MAXSIZE;\r\n    printf(\"元素%c已出队\\n\", data);\r\n    return Q;\r\n}\r\n\r\nvoid show_Queue(Queue Q)    //显示队（顺序为从队头到队尾）\r\n{\r\n	int i;\r\n    if (judge == 0)\r\n    {\r\n        printf(\"队列不存在！\\n\");\r\n        return;\r\n    }\r\n    if (Q.rear == Q.front)\r\n    {\r\n        printf(\"队为空\\n\");\r\n        return ;\r\n    }\r\n    i = Q.front;\r\n    printf(\"队遍历为：\\n\");\r\n    while (i != Q.rear)\r\n    {\r\n        printf(\"%c \", Q.base[i]);\r\n        i++;\r\n    }\r\n}\r\n\r\nvoid length_Queue(Queue Q)\r\n{\r\n	int i, n = 0;\r\n    if (judge == 0)\r\n    {\r\n        printf(\"队列不存在！\\n\");\r\n        return;\r\n    }\r\n    i = Q.front;\r\n    while (i != Q.rear)\r\n    {\r\n        i++;\r\n        n++;\r\n    }\r\n    printf(\"队列的长度为%d\\n\", n);\r\n}\r\n\r\nvoid destroy_Queue(Queue Q)\r\n{\r\n    if (judge == 0)\r\n    {\r\n        printf(\"队列不存在！\\n\");\r\n        return;\r\n    }\r\n    free(Q.base);\r\n    judge = 0;\r\n    printf(\"队列已销毁！\\n\");\r\n}\r\n\r\nvoid caidan()   //输出菜单\r\n{\r\n    printf(\"               循环队列子系统\\n\");\r\n    printf(\"**************************************************\\n\");\r\n    printf(\"*          1-----构造空队                        *\\n\");\r\n    printf(\"*          2-----入队                            *\\n\");\r\n    printf(\"*          3-----出队                            *\\n\");\r\n    printf(\"*          4-----显示队                          *\\n\");\r\n    printf(\"*          5-----求队列长度                      *\\n\");\r\n	printf(\"*          6-----销毁队                          *\\n\");\r\n    printf(\"*          0-----结束                            *\\n\");\r\n    printf(\"**************************************************\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n    caidan();\r\n    while(1)\r\n    {\r\n        int ch;\r\n        Queue Q;\r\n		printf(\"\\n***************************************************\\n\");\r\n        printf(\"请输入你要进行的操作对应的数字：\");\r\n		scanf(\"%d\",&ch);\r\n		getchar();\r\n		switch(ch)\r\n		{\r\n            case 1:     //构造空队\r\n            {\r\n                Q = initQueue();\r\n                break;\r\n            }\r\n            case 2:     //入队\r\n            {\r\n                Q = push_Queue(Q);\r\n                break;\r\n            }\r\n            case 3:     //出队\r\n            {\r\n                Q = pop_Queue(Q);\r\n                break;\r\n            }\r\n            case 4:     //显示队\r\n            {\r\n                show_Queue(Q);\r\n                break;\r\n            }\r\n            case 5:     //求队列长度\r\n            {\r\n                length_Queue(Q);\r\n                break;\r\n            }\r\n            case 6:     //销毁队\r\n            {\r\n                destroy_Queue(Q);\r\n                break;\r\n            }\r\n            case 0:\r\n                return 0;\r\n		}\r\n    }\r\n    return 0;\r\n}\r\n```','2018-09-14 15:27:48.234955','2018-09-14 15:27:56.454815',1,'pic_img/9af6eacff4464fa797be5cacb9ca35a3.gif',1,15),(38,'二叉树遍历（前序，中序，后序）','```c\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\n\r\n#define  MAXSIZE 20\r\n//二叉树结点的结构体表示形式\r\ntypedef struct BitNode\r\n{\r\n    char    data;\r\n    struct BitNode* left,*right;\r\n}BitTree;\r\n\r\n//栈的结构体表示形式\r\ntypedef struct stackelem\r\n{\r\n    BitTree* a[MAXSIZE];\r\n    int top;\r\n}Stack;\r\n\r\n//队列的结构体的表示形式\r\ntypedef struct queueelem\r\n{\r\n    BitTree* b[MAXSIZE];\r\n    int front,rear;\r\n}Queue;\r\n\r\n//创建二叉树，利用递归的方法\r\n//按前序次序输入。 如 A # #(#表示空树)\r\nBitTree* Create()\r\n{\r\n    char ch;\r\n    scanf(\"%c\",&ch);\r\n    getchar();    //吃掉空格符\r\n    if (ch==\'#\')\r\n    {\r\n        return NULL;\r\n    }\r\n    else\r\n    {\r\n        BitTree* btree=(BitTree*)malloc(sizeof(BitTree));\r\n        if (NULL==btree)\r\n        {\r\n            return NULL;\r\n        }\r\n        btree->data=ch;\r\n        btree->left=Create();\r\n        btree->right=Create();\r\n        return btree;\r\n    }\r\n}\r\n\r\n//前序遍历，递归的方法\r\nvoid Preorder(BitTree* bt)\r\n{\r\n    if (NULL!=bt)\r\n    {\r\n        printf(\"%c \",bt->data);\r\n        Preorder(bt->left);\r\n        Preorder(bt->right);\r\n    }\r\n}\r\n\r\n//前序遍历的非递归实现\r\n/*\r\n 思想：利用栈来实现；根结点进栈，之后栈非空，弹出，接着根节点的右结点进栈，之后，左节点进栈；接着，弹出栈顶元素（输出）,\r\n 此结点的右结点进栈，之后左节点进栈，弹出栈顶元素（输出）...一直这样下去，直到栈为空。\r\n */\r\nvoid Preorder2(BitTree* bt)\r\n{\r\n    BitTree* p;\r\n    Stack st;\r\n    st.top=-1;\r\n    if (NULL==bt)\r\n    {\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        st.top++;\r\n        st.a[st.top]=bt;\r\n        while (st.top!=-1)\r\n        {\r\n            p=st.a[st.top];\r\n            st.top--;\r\n            printf(\"%c \",p->data);\r\n            if (p->right!=NULL)\r\n            {\r\n                st.top++;\r\n                st.a[st.top]=p->right;\r\n            }\r\n            if (p->left!=NULL)\r\n            {\r\n                st.top++;\r\n                st.a[st.top]=p->left;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//中序遍历，递归实现\r\nvoid Inorder(BitTree* bt)\r\n{\r\n    if (NULL!=bt)\r\n    {\r\n        Inorder(bt->left);\r\n        printf(\"%c \",bt->data);\r\n        Inorder(bt->right);\r\n    }\r\n}\r\n\r\n//中序遍历，非递归实现\r\n/*\r\n 思想：利用栈。从根节点开始，循环，只要有左子节点则进栈，直到左子节点为空。接着弹出栈顶输出，判断该结点是否有右子节点，\r\n 若有则进栈，若没有继续弹栈。有右子节点的情况，判断该节点是否有左子节点，有则进栈，直到左子节点为空；若该右子节点没有\r\n 左子节点，则弹栈；判断弹出的节点，是否有右子节点，若有则进栈，没有继续弹栈；接着又要判断刚进栈的这个节点，是否有左子节点，\r\n 有则进栈，没有则继续弹栈。重复下去....\r\n 栈空，是判定条件。\r\n */\r\nvoid Inorder2(BitTree* bt)\r\n{\r\n    BitTree* p,*q;\r\n    Stack st;\r\n    st.top=-1;\r\n    if (NULL==bt)\r\n    {\r\n        return;\r\n    }\r\n    else\r\n    {\r\n        while (bt!=NULL)\r\n        {\r\n            st.top++;\r\n            st.a[st.top]=bt;\r\n            bt=bt->left;\r\n        }\r\n        while (st.top!=-1)\r\n        {\r\n            p=st.a[st.top];\r\n            st.top--;\r\n            printf(\"%c \",p->data);\r\n            while ( p->right!=NULL )\r\n            {\r\n                st.top++;\r\n                st.a[st.top]=p->right;\r\n                q=p->right;\r\n                while (q->left!=NULL)\r\n                {\r\n                    st.top++;\r\n                    st.a[st.top]=q->left;\r\n                    q=q->left;\r\n                }\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//后序遍历，递归实现\r\nvoid Postorder(BitTree* bt)\r\n{\r\n    if (bt!=NULL)\r\n    {\r\n        Postorder(bt->left);\r\n        Postorder(bt->right);\r\n        printf(\"%c \",bt->data);\r\n    }\r\n}\r\n\r\n//后序遍历，非递归实现\r\n/*\r\n 算法思想：利用栈来实现。从根结点开始，只要左子节点非空，则进栈，直到左子节点为空为止。取出栈顶元素（只是取，并非弹栈），判断\r\n 1:取出的栈顶元素是否有右子节点，或者右子节点是否被访问过，若满足条件（无右子节点，或者右子节点被访问过），则输出该结点，\r\n 同时弹栈，并且记录下该访问的节点。\r\n 2:取出的栈顶元素，若有右子节点，且未被访问过，则指针继续移动到右子节点，重复一开始是否又左子节点的判断。\r\n */\r\nvoid Postorder2(BitTree* bt)\r\n{\r\n    Stack st;\r\n    st.top=-1;\r\n    BitTree* t;\r\n    do\r\n    {\r\n        while (bt!=NULL)\r\n        {\r\n            st.top++;\r\n            st.a[st.top]=bt;\r\n            bt=bt->left;\r\n        }\r\n        t=NULL;\r\n        while (st.top!=-1)\r\n        {\r\n            bt=st.a[st.top];\r\n            if (bt->right==t)  //t:表示为null，或者右子节点被访问过了。\r\n            {\r\n                printf(\"%c \",bt->data);\r\n                st.top--;\r\n                t=bt;  //t记录下刚刚访问的节点\r\n            }\r\n            else\r\n            {\r\n                bt=bt->right;\r\n                break;\r\n            }\r\n        }\r\n    } while (st.top!=-1);\r\n}\r\n\r\n//求二叉树的高度，递归实现\r\nint Height(BitTree* bt)\r\n{\r\n    int depth1,depth2;\r\n    if (NULL==bt)\r\n    {\r\n        return 0;\r\n    }\r\n    else\r\n    {\r\n        depth1=Height(bt->left);\r\n        depth2=Height(bt->right);\r\n        if (depth1>depth2)\r\n        {\r\n            return (depth1+1);\r\n        }\r\n        else\r\n        {\r\n            return (depth2+1);\r\n        }\r\n    }\r\n}\r\n\r\n//层次遍历二叉树,用队列来实现\r\nvoid TraversalOfLevel(BitTree* bt)\r\n{\r\n    Queue q;\r\n    q.front=q.rear=0;\r\n    if (bt!=NULL)\r\n    {\r\n        printf(\"%c \",bt->data);\r\n    }\r\n    q.b[q.front]=bt;\r\n    q.rear=q.rear+1;\r\n    while (q.front<q.rear)\r\n    {\r\n        bt=q.b[q.front];\r\n        q.front=q.front+1;\r\n        if (bt->left!=NULL)\r\n        {\r\n            printf(\"%c \",bt->left->data);\r\n            q.b[q.rear]=bt->left;\r\n            q.rear=q.rear+1;\r\n        }\r\n        if (bt->right!=NULL)\r\n        {\r\n            printf(\"%c \",bt->right->data);\r\n            q.b[q.rear]=bt->right;\r\n            q.rear=q.rear+1;\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    BitTree* btr=Create();\r\n    printf(\"前序遍历：递归和非递归实现：\\n\");\r\n    Preorder(btr);\r\n    printf(\"\\n\");\r\n    Preorder2(btr);\r\n    printf(\"\\n\");\r\n    printf(\"中序遍历：递归和非递归实现：\\n\");\r\n    Inorder(btr);\r\n    printf(\"\\n\");\r\n    Inorder2(btr);\r\n    printf(\"\\n\");\r\n    printf(\"后序遍历：递归和非递归实现：\\n\");\r\n    Postorder(btr);\r\n    printf(\"\\n\");\r\n    Postorder2(btr);\r\n    printf(\"\\n\");\r\n    printf(\"二叉树的高度：\\n\");\r\n    int Hgt=Height(btr);\r\n    printf(\"%d \\n\",Hgt);\r\n    printf(\"层次遍历二叉树:\\n\");\r\n    TraversalOfLevel(btr);\r\n    printf(\"\\n\");\r\n    return 0;\r\n}\r\n\r\n/*  测试数据：\r\n d b a # # c # # f e # # g # #\r\n 前序遍历：递归和非递归实现：\r\n d b a c f e g\r\n d b a c f e g\r\n 中序遍历：递归和非递归实现：\r\n a b c d e f g\r\n a b c d e f g\r\n 后序遍历：递归和非递归实现：\r\n a c b e g f d\r\n a c b e g f d\r\n 二叉树的高度：\r\n 3\r\n 层次遍历二叉树:\r\n d b f a c e g\r\n\r\n*/\r\n\r\n```','2018-09-14 15:28:47.058710','2018-09-14 15:28:47.058745',0,'pic_img/34eec904fd1b49d1b14f45a3cc22632b.gif',1,15),(39,'希尔排序','```c\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int a[10] = {49, 38, 65, 97, 26, 13, 27, 49, 55, 4};\r\n    int i, j, gap, n = 10;\r\n    for (gap = n / 2; gap > 0; gap /= 2)\r\n    {\r\n        for (j = gap; j < n; j++)//从数组第gap个元素开始\r\n        {\r\n            if (a[j] < a[j - gap])//每个元素与自己组内的数据进行直接插入排序\r\n            {\r\n                int temp = a[j];\r\n                int k = j - gap;\r\n                while (k >= 0 && a[k] > temp)\r\n                {\r\n                    a[k + gap] = a[k];\r\n                    k -= gap;\r\n                }\r\n                a[k + gap] = temp;\r\n            }\r\n        }\r\n    }\r\n    for (i = 0; i < n; i++)\r\n        printf(\"%d \",a[i]);\r\n    return 0;\r\n}\r\n\r\n/*\r\n#include<stdio.h>\r\nint main()\r\n{\r\n    int a[10]={49, 38, 65, 97, 26, 13, 27, 49, 55, 4};\r\n    int i, j, gap, n = 10;\r\n    for (gap = n / 2; gap > 0; gap /= 2)\r\n        for (i = 0; i < gap; i++)\r\n        {\r\n            for (j = i + gap; j < n; j += gap)\r\n            {\r\n                if (a[j - gap] > a[j])\r\n                {\r\n                    int temp = a[j];\r\n                    int k = j - gap;\r\n                    while (k >= 0 && a[k] > temp)\r\n                    {\r\n                        a[k + gap] = a[k];\r\n                        k -= gap;\r\n                    }\r\n                    a[k + gap] = temp;\r\n                }\r\n            }\r\n        }\r\n    for (i = 0; i < 10; i++)\r\n        printf(\"%d \",a[i]);\r\n    return 0;\r\n}\r\n*/\r\n\r\n```','2018-09-14 15:29:44.974148','2018-09-14 15:29:44.974176',0,'pic_img/book.jpg',1,15),(40,'链表的基本操作','```c\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n\r\n#define true 1\r\n#define false 0\r\nint s = 0;      //定义全局变量s接收查找数据的位置\r\n\r\n//结点类型定义\r\ntypedef struct linknode\r\n{\r\n    char data;\r\n    struct linknode *next;\r\n}Node;\r\n\r\n//构造链表（带头结点的尾插法建表）\r\nNode* create_list()\r\n{\r\n    int len, i, t;    //len为链表长度, t用来接收输入值\r\n    Node *p, *tail;   //定义p用来创建结点，tail指向链表的尾节点\r\n    Node *head = (Node *)malloc(sizeof(Node));   //生成头结点\r\n    tail = head;         //尾结点的初值指向头结点\r\n    printf(\"请输入你要创建的链表的长度:\");\r\n    scanf(\"%d\",&len);\r\n    getchar();\r\n    for (i = 0; i < len; i++)\r\n    {\r\n        printf(\"请输入第%d个结点数据域的值：\",i+1);\r\n        scanf(\"%c\",&t);\r\n        getchar();\r\n        p = (Node *)malloc(sizeof(Node));\r\n        p->data = t;\r\n        tail->next = p;\r\n        tail = p;\r\n    }\r\n    tail->next = NULL;\r\n    printf(\"链表建立成功！\\n\");\r\n    return head;\r\n}\r\n\r\n//输出链表\r\nvoid output_list(Node *head)\r\n{\r\n    Node *p = head->next;\r\n    while (p != NULL)\r\n    {\r\n        printf(\"%c \",p->data);\r\n        p = p->next;\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\n//求链表长度\r\nint length_list(Node *head)\r\n{\r\n    Node *p = head;\r\n    int len = 0;\r\n    while (p->next != NULL)\r\n    {\r\n        len++;\r\n        p=p->next;\r\n    }\r\n    return len;\r\n}\r\n\r\n//判断链表是否为空\r\nint empty_list(Node *head)\r\n{\r\n    if (head->next == NULL)\r\n        return true;\r\n    else\r\n        return false;\r\n}\r\n\r\n//删除链表中某个元素\r\nint delete_list(Node *head, int pos, char *val)  // pos(从1开始)代表你要删除链表中第几个元素\r\n{                                                // 指针val用来存放删除的数值\r\n    int i;\r\n    Node *p = NULL;\r\n	Node *t = NULL;\r\n	if (empty_list(head) || pos > length_list(head))\r\n        return false;\r\n    p = head;\r\n    for (i = 0; i < pos - 1; i++)   //找到第pos-1个位置的结点\r\n        p = p->next;\r\n    t = p->next;              //用t记住p，结束后释放掉，防止内存泄漏\r\n    *val = p->next->data;           //保存删除的数值\r\n    p->next = p->next->next;        //指向下一结点\r\n    free(t);\r\n    return true;\r\n}\r\n\r\n//插入某个元素\r\nint insert_list(Node *head, int pos, char data)\r\n{\r\n	int i;\r\n	Node *p = NULL;\r\n	Node *t = NULL;\r\n    if (pos > length_list(head) + 1 || empty_list(head))\r\n        return false;\r\n    p = head;\r\n    for (i = 0; i < pos - 1; i++)\r\n        p = p->next;\r\n    t = (Node *)malloc(sizeof(Node));\r\n    t->data = data;\r\n    t->next = p->next;\r\n    p->next = t;\r\n    return true;\r\n}\r\n\r\n//在链表中按值查找\r\nint search_list(Node *head, char data) //在链表中查找和data相同的数\r\n{\r\n	int i = 1;\r\n	Node *p = NULL;\r\n    if (empty_list(head))\r\n    {\r\n        printf(\"链表为空\\n\");\r\n        return false;\r\n    }\r\n    p = head->next;\r\n    while (p != NULL && p->data != data)\r\n    {\r\n        i++;\r\n        p = p->next;\r\n    }\r\n    if (p != NULL)\r\n    {\r\n        printf(\"在第%d个位置找到%c\\n\", i, data);\r\n        s = i;\r\n        return true;\r\n    }\r\n    printf(\"未找到值为%c的点\\n\",data);\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n	int ch;\r\n	Node *head;\r\n    printf(\"               线性表子系统\\n\");\r\n    printf(\"**************************************************\\n\");\r\n    printf(\"*          1-----建表                            *\\n\");\r\n    printf(\"*          2-----插入                            *\\n\");\r\n    printf(\"*          3-----删除                            *\\n\");\r\n    printf(\"*          4-----显示                            *\\n\");\r\n    printf(\"*          5-----查找                            *\\n\");\r\n    printf(\"*          6-----求表长                          *\\n\");\r\n    printf(\"*          0-----返回                            *\\n\");\r\n    printf(\"**************************************************\\n\");\r\n    while (1)\r\n    {\r\n        printf(\"\\n***************************************************\\n\");\r\n        printf(\"请输入你要进行的操作对应的数字：\");\r\n\r\n        scanf(\"%d\",&ch);\r\n        getchar();\r\n\r\n        switch(ch)\r\n        {\r\n            case 1:                          //建表\r\n            {\r\n                head = create_list();\r\n                break;\r\n            }\r\n            case 2:                          //插入\r\n            {\r\n                int pos;\r\n                char data;\r\n                printf(\"请输入你要插入的数据的位置：\");\r\n                scanf(\"%d\",&pos);\r\n                getchar();\r\n                printf(\"请输入你要插入数据的值：\");\r\n                scanf(\"%c\",&data);\r\n                getchar();\r\n                if(insert_list(head, pos, data) == 0)\r\n                    printf(\"输入的位置错误\\n\");\r\n                else\r\n                {\r\n                    printf(\"插入后的链表的长度为：\");\r\n                    printf(\"%d\\n\",length_list(head));\r\n                    printf(\"链表遍历为：\");\r\n                    output_list(head);\r\n                }\r\n                break;\r\n            }\r\n            case 3:                         //删除\r\n            {\r\n                char data;\r\n                printf(\"请输入你要删除的数据的值: \");\r\n                scanf(\"%c\",&data);\r\n                getchar();\r\n                if (search_list(head, data) == 0)      //查找要删除的数据的位置,判断是否查找成功\r\n                    break;\r\n                delete_list(head, s, &data);   //s为全局变量，存放的是查找的数据的位置。\r\n                printf(\"删除后的链表的长度为: \");\r\n                printf(\"%d\\n\",length_list(head));\r\n                if (empty_list(head))       //判断链表删除后是否为空\r\n                {\r\n                    printf(\"链表为空\\n\");\r\n                    break;\r\n                }\r\n                printf(\"链表遍历为: \");\r\n                output_list(head);\r\n                break;\r\n            }\r\n            case 4:                //显示\r\n            {\r\n                if (empty_list(head))\r\n                {\r\n                    printf(\"链表为空\\n\");\r\n                    break;\r\n                }\r\n                printf(\"链表遍历为: \");\r\n                output_list(head);\r\n                break;\r\n            }\r\n            case 5:                //查找\r\n            {\r\n                char data;\r\n                printf(\"请输入你要查找的数据的值：\");\r\n                scanf(\"%c\",&data);\r\n                getchar();\r\n                search_list(head, data);\r\n                break;\r\n            }\r\n            case 6:                 //求链表长度\r\n            {\r\n                printf(\"链表的长度为:%d\\n\",length_list(head));\r\n                break;\r\n            }\r\n            case 0:                 //输入0结束\r\n            {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n```','2018-09-14 15:30:58.182178','2018-09-14 15:30:58.182209',0,'pic_img/25820ac55be142a8bec9fcfa9acf71de_aQb2IGQ.gif',1,15),(41,'快速排序','```c\r\n//库函数调用快速排序：\r\n--------------------------------------------------------------------------------\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint sort(const void *a, const void *b)\r\n{\r\n    return *(int *)a - *(int *)b;\r\n}\r\nint main()\r\n{\r\n    int i;\r\n    int arr[6] = {1, 3, 5, 2, 4, 6};\r\n    qsort(arr, 6, sizeof(int),sort);\r\n    for (i = 0; i < 6; i++)\r\n        printf(\"%d \",arr[i]);\r\n    return 0;\r\n}\r\n\r\n\r\n--------------------------------------------------------------------------------\r\n//快速排序\r\n#include<stdio.h>\r\nvoid quick_sort(int s[], int l, int r)\r\n{\r\n    if (l < r)\r\n    {\r\n        int i = l, j = r, x = s[l];     //x为基数\r\n        while (i < j)\r\n        {\r\n            while(i < j && s[j] >= x) // 从右向左找第一个小于x的数\r\n                j--;\r\n            if(i < j)\r\n                s[i++] = s[j];\r\n\r\n            while(i < j && s[i] < x) // 从左向右找第一个大于等于x的数\r\n                i++;\r\n            if(i < j)\r\n                s[j--] = s[i];\r\n        }\r\n        s[i] = x;\r\n        quick_sort(s, l, i - 1); // 递归调用  分治思想   左边分治\r\n        quick_sort(s, i + 1, r);    //右边分治\r\n    }\r\n}\r\nint main()\r\n{\r\n    int a[10] = {72, 6, 57, 88, 60, 42, 83, 73, 48, 85};\r\n    int i = 0, j = 9;\r\n    quick_sort(a, i, j);\r\n    for (i = 0; i < 10; i++)\r\n        printf(\"%d \",a[i]);\r\n    return 0;\r\n}\r\n\r\n```','2018-09-14 15:31:39.716279','2018-09-14 15:32:35.291105',1,'pic_img/0204b0888c057edb854bd219cec46814_LiVL1P7.gif',1,15),(42,'二分法插入排序','```c\r\n\r\n把一个数插入到已经排好序的数组中去：\r\n--------------------------------------------------------------------------------\r\n// 二分插入排序\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint sort(const void *a, const void *b)\r\n{\r\n    return *(int *)a - *(int *)b;\r\n}\r\nint main()\r\n{\r\n    int n, i, num, a[100];    //num表示要插入的数\r\n    scanf(\"%d\",&n);\r\n    for (i = 0; i < n; i++)\r\n        scanf(\"%d\",&a[i]);\r\n    qsort(a, n, sizeof(int), sort);\r\n    scanf(\"%d\",&num);\r\n\r\n    int l = 0, r = n - 1, mid;\r\n    while (l <= r)             //用二分法寻找插入位置\r\n    {\r\n        mid = (l + r) / 2;\r\n        if (num > a[mid])\r\n            l = mid + 1;\r\n        else\r\n            r = mid - 1;\r\n    }\r\n\r\n    for (i = n - 1; i >= l; i--)   //插入\r\n        a[i + 1] = a[i];\r\n    a[l] = num;\r\n\r\n    for(i = 0; i <= n; i++)    //输出插入完成后的数组\r\n        printf(\"%d \",a[i]);\r\n    return 0;\r\n}\r\n--------------------------------------------------------------------------------\r\n\r\n```','2018-09-14 15:32:25.620228','2018-09-15 08:50:21.299343',2,'pic_img/u8428641102011334040fm27gp0.jpg',1,15),(43,'将json格式文件进行数据可视化绘制世界人口地图','```python\r\n#encoding:utf-8\r\n\r\nimport pygal\r\nimport json\r\nfrom pygal_maps_world.i18n import COUNTRIES\r\nfrom pygal.style import RotateStyle     #设置颜色的模块\r\nfrom pygal.style import LightColorizedStyle    #加亮颜色主题\r\n\r\n\r\ndef get_country_code(country_name):\r\n    \'\'\'根据指定的国家， 返回Pygal使用的两个字母的国别码\'\'\'\r\n    for code, name in COUNTRIES.items():    #遍历键值对\r\n        if name == country_name:\r\n            return code\r\n    #如果找不到指定的国家， 就返回None\r\n    return None\r\n\r\n#将数据加载到一个列表中\r\nfilename = \'population_data.json\'\r\nwith open(filename) as f:\r\n    pop_data = json.load(f)\r\n\r\n#创建一个包含人口数量的字典\r\ncc_populations = {}\r\nfor pop_dict in pop_data:\r\n    if pop_dict[\'Year\'] == \'2010\':\r\n        country_name = pop_dict[\'Country Name\']\r\n        population = int(float(pop_dict[\'Value\']))\r\n        #print(country_name + \": \" + str(population))\r\n        code = get_country_code(country_name)\r\n        if code:\r\n            cc_populations[code] = population\r\n\r\n#根据人口数量将所有的国家分成三组\r\ncc_pops_1, cc_pops_2, cc_pops_3 = {}, {}, {}\r\nfor cc, pop in cc_populations.items():\r\n    if pop < 10000000:\r\n        cc_pops_1[cc] =pop\r\n    elif pop < 1000000000:\r\n        cc_pops_2[cc] = pop\r\n    else:\r\n        cc_pops_3[cc] = pop\r\n\r\nwm_style = RotateStyle(\"#336699\", base_style = LightColorizedStyle)   #红绿蓝\r\nwm = pygal.maps.world.World(style = wm_style)   #创建一个world实例\r\nwm.title = \'World Population in 2010, by Country\'\r\nwm.add(\"0-10m\", cc_pops_1)    #add()接受一个标签和一个列表或者字典\r\nwm.add(\"10m-1bn\", cc_pops_2)\r\nwm.add(\">1bn\", cc_pops_3)\r\nwm.render_to_file(\'World_Population.svg\')\r\n\r\n```\r\n![](/media/editor/11_20180914153413316216.png)','2018-09-14 15:34:15.680519','2018-09-14 16:22:06.448085',4,'pic_img/96b8f5e079144898880776823fe8114e_JcDAP8f.gif',1,9),(44,'使用pygal绘制世界地图时的两个报错','在使用pygal调用国别码、绘制世界地图的时候，遇到了两个问题，\r\n\r\n问题一：\r\n 使用下方语句调用国别码的时候\r\n```python\r\nfrom pygal.i18n import COUNTRIES\r\n```\r\n程序报错\r\n```python\r\nModuleNotFoundError: No module named \'pygal.i18n\'\r\n```\r\n解决：\r\n	pygal.i18n 已经不存在了，现在已经更改成了 pygal_maps_world, 使用下列代码安装pygal_maps_world\r\n```python\r\npip3 install pygal_maps_world\r\n\r\n```\r\n将from pygal.i18n import COUNTRIES改为下列代码\r\n```python\r\nfrom pygal_maps_world.i18n import COUNTRIES\r\n```\r\n\r\n问题2：\r\n使用下方语句绘制世界地图的时候\r\n```python\r\nimport pygal\r\nwm = pygal.Worldmap()\r\n```\r\n程序报错\r\n\r\n```python\r\nAttributeError: module \'pygal\' has no attribute \'Worldmap\'\r\n```\r\n修改为下列代码即可\r\n\r\n```python\r\nimport pygal.maps.world\r\nwm = pygal.maps.world.World()\r\n```','2018-09-14 15:49:29.501708','2018-09-14 15:51:49.521405',2,'pic_img/u31404434502913357704fm214gp0_1_YTtPqfx.gif',1,9),(45,'处理.CSV文件格式的数据并用matplotlib可视化','```\r\n#encoding:utf-8\r\n\r\nimport csv\r\nfrom matplotlib import pyplot as plt\r\nfrom datetime import datetime\r\n\r\n#从文件中获取日期和最高气温\r\nfilename = \'death_valley_2014.csv\'  #死亡谷数据\r\nwith open(filename) as f:\r\n    reader = csv.reader(f)\r\n    header_row = next(reader)\r\n    \'\'\'\r\n    #打印文件头及其位置\r\n    for index, column_header in enumerate(header_row):\r\n        print(index, column_header)\r\n    \'\'\'\r\n\r\n    dates, highs, lows = [], [], []\r\n    for row in reader:\r\n        try:\r\n            current_date = datetime.strptime(row[0], \"%Y-%m-%d\")\r\n            high = int(row[1])\r\n            low = int(row[3])\r\n        except ValueError:      #捕捉ValueError\r\n            print(current_date, \"missing data\")\r\n        else:\r\n            dates.append(current_date)\r\n            highs.append(high)\r\n            lows.append(low)\r\n\r\n\r\n    #print(highs)\r\n\r\n    fig = plt.figure(dpi = 128, figsize = (10, 6))\r\n    plt.plot(dates, highs, c = \'red\', alpha = 0.5)      #Alpha表示透明度\r\n    plt.plot(dates, lows, c = \'Blue\', alpha = 0.5)\r\n    plt.fill_between(dates, highs, lows, facecolor = \'Blue\', alpha = 0.1)   #填充颜色\r\n\r\n    #设置图形格式\r\n    plt.title(\"Daily high and low temperatures - 2014\\nDeath Vally\", fontsize = 24)\r\n    plt.xlabel(\" \", fontsize = 16)\r\n    plt.ylabel(\"Temperature(F)\", fontsize = 16)\r\n    fig.autofmt_xdate()     #绘制斜的标签， 防止日期重叠\r\n    plt.tick_params(axis = \'both\', which = \'major\', labelsize = 16)\r\n\r\n    #设置x轴, y轴开始的位置\r\n    #plt.axis([dates[0], dates[-1], 0, 80])   #方法1\r\n    plt.xlim(dates[0], dates[-1])       #方法2\r\n    plt.ylim(0, max(highs) + 10)\r\n\r\n    plt.show()\r\n\r\n```\r\n![](/media/editor/333_20180914155018534612.png)','2018-09-14 15:51:47.185768','2018-09-14 15:55:58.359647',2,'pic_img/ySlb-fykcpru7854701.gif',1,9),(46,'第一次使用semantic ui做的网页','效果图\r\n![](/media/editor/12_20180914155435419469.png)\r\n![](/media/editor/13_20180914155446232500.png)\r\n![](/media/editor/14_20180914155500084187.png)\r\n\r\nfirst_landing-page.html\r\n```\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <title>First web</title>\r\n    <link rel=\"stylesheet\" href=\"../static/CSS/semantic.css\" media=\"screen\" title=\"no title\" charset=\"utf-8\">\r\n    <link rel=\"stylesheet\" href=\"../static/CSS/custom.css\" media=\"screen\" title=\"no title\" charset=\"utf-8\">\r\n</head>\r\n<body>\r\n    <div class=\"ui  vertical basic segment masthead\">\r\n        <div class=\"ui big text menu\">\r\n            <div class=\"ui image\">\r\n                <img src=\"../static/images/12.png\" alt=\"\" />\r\n            </div>\r\n            <div class=\"right menu\">\r\n                <div class=\"item\">\r\n                    <!--<button type=\"button\" name=\"button\" class=\"ui inverted circular button\">Register</button>-->\r\n                    <button type=\"button\" name=\"button\" class=\"ui inverted circular button\">Login</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <h1 class=\"ui center inverted aligned header slogan\">\r\n            这里是大标题应该出现的位置\r\n            <p class=\"sub header\">\r\n                这里是次级标题的位置\r\n            </p>\r\n            <button type=\"button\" name=\"button\" class=\"ui orange circular button\">一个按钮</button>\r\n        </h1>\r\n    </div>\r\n\r\n    <div class=\"ui vertical basic segment recommended s112\">\r\n        <h1 class=\"ui center aligned header\">这里应该是一个标题</h1>\r\n        <div class=\"ui three column grid s112\">      <!--定宽和定栏-->\r\n            <div class=\"column\">\r\n                <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/17.jpg\'); background-size: cover;background-repeat: no-repeat;\">\r\n                    <h3 class=\"ui header title\">Title\'s here</h3>\r\n                    <h4 class=\"ui header\">Username</h4>\r\n                    <div class=\"ui divider\"></div>      <!--分割线-->\r\n                    <div class=\"ui red circular label\">40%get√</div>\r\n                    <span>10k<i class=\"unhide icon\"></i> </span>\r\n                </div>\r\n                <div class=\"s113\">\r\n                    <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/21.png\'); background-size: cover;background-repeat: no-repeat;\">\r\n                        <h3 class=\"ui header title\">Title\'s here</h3>\r\n                        <h4 class=\"ui header\">Username</h4>\r\n                        <div class=\"ui divider\"></div>      <!--分割线-->\r\n                        <div class=\"ui red circular label\">40%get√</div>\r\n                        <span>10k<i class=\"unhide icon\"></i> </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"column\">\r\n                <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/19.jpg\'); background-size: cover;background-repeat: no-repeat;\">\r\n                    <h3 class=\"ui header title\">Title\'s here</h3>\r\n                    <h4 class=\"ui header\">Username</h4>\r\n                    <div class=\"ui divider\"></div>\r\n                    <div class=\"ui red circular label\">40%get√</div>\r\n                    <span>10k<i class=\"unhide icon\"></i> </span>\r\n                </div>\r\n                <div class=\"s113\">\r\n                    <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/18.jpg\'); background-size: cover;background-repeat: no-repeat;\">\r\n                    <h3 class=\"ui header title\">Title\'s here</h3>\r\n                    <h4 class=\"ui header\">Username</h4>\r\n                    <div class=\"ui divider\"></div>\r\n                    <div class=\"ui red circular label\">40%get√</div>\r\n                    <span>10k<i class=\"unhide icon\"></i> </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"column\">\r\n                <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/16.jpg\'); background-size: cover;background-repeat: no-repeat;\">\r\n                    <h3 class=\"ui header title\">Title\'s here</h3>\r\n                    <h4 class=\"ui header\">Username</h4>\r\n                    <div class=\"ui divider\"></div>\r\n                    <div class=\"ui red circular label\">40%get√</div>\r\n                    <span>10k<i class=\"icon unhide\"></i> </span>\r\n                </div>\r\n                <div class=\"s113\">\r\n                    <div class=\"ui inverted segment card-view\" style=\" background: url(\'../static/images/15.jpg\'); background-size: cover;background-repeat: no-repeat;\">\r\n                        <h3 class=\"ui header title\">Title\'s here</h3>\r\n                        <h4 class=\"ui header\">Username</h4>\r\n                        <div class=\"ui divider\"></div>\r\n                        <div class=\"ui red circular label\">40%get√</div>\r\n                        <span>10k<i class=\"icon unhide\"></i> </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <!--<div>-->\r\n                <!--<div class=\"two wide column\"></div>-->\r\n            <!--</div>-->\r\n            <!--<div class=\"six wide column\">-->\r\n                <!--<h1 class=\"ui header\">This is a title</h1>-->\r\n                <!--<pre><p style=\"font-size: 20px\" >-->\r\n<!--在低谷中，人能做的事情就是不断反思自己，躲在黑暗中舔舐自己的伤口。-->\r\n<!--在孤独冷漠的山谷里，俯瞰山下灯火通明;-->\r\n<!--红灯绿酒，泪水随着泪槽缓缓落下，回忆之前的构陷和恶意谩骂心灵伤口无法抚平.-->\r\n<!--你若大红大紫，要经得起更多的痛苦和折磨;-->\r\n<!--你若平平庸庸就要甘于风轻云淡，能承受别人轻视你，谩骂你，诋毁你;-->\r\n<!--会有人问我，这句话不是自相矛盾吗，人已经普通得不能再普通了为什么还要经历这么多痛苦呢;-->\r\n<!--那么你可以细心听我说教，平庸的人无欲无求但是在任何场合都会成为牺牲品;-->\r\n                <!--</p></pre>-->\r\n            <!--</div>-->\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"ui vertical segment s116\">\r\n        <h1 class=\"ui inverted center aligned header s114\">我有的，并不只是诗和远方</h1>\r\n        <div class=\"ui four column grid s115\">\r\n            <div class=\"column\">\r\n                <div class=\"ui circular inverted segment renwu\">\r\n                    <i class=\"big inverted red circular star icon\"></i>\r\n                    <h4 class=\"ui inverted header\">王小帽\r\n                        <p class=\"ui inverted very small header\">秋刀鱼和猫</p>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n            <div class=\"column\">\r\n                <div class=\"ui circular inverted segment renwu\">\r\n                    <i class=\"big inverted red circular star icon\"></i>\r\n                    <h4 class=\"ui inverted header\">王小帽\r\n                        <p class=\"ui inverted very small header\">秋刀鱼和猫</p>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n            <div class=\"column\">\r\n                <div class=\"ui circular inverted segment renwu\">\r\n                    <i class=\"big inverted red circular star icon\"></i>\r\n                    <h4 class=\"ui inverted header\">王小帽\r\n                        <p class=\"ui inverted very small header\">秋刀鱼和猫</p>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n            <div class=\"column\">\r\n                <div class=\"ui circular inverted segment renwu\">\r\n                    <i class=\"big inverted red circular star icon\"></i>\r\n                    <h4 class=\"ui inverted header\">王小帽\r\n                        <p class=\"ui inverted very small header\">秋刀鱼和猫</p>\r\n                    </h4>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"ui labeled button\" tabindex=\"0\">\r\n            <div class=\"ui red button\"><i class=\"heart icon\"></i> Like </div>\r\n            <a class=\"ui basic red left pointing label\">1,048</a>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"ui vertical very padded pink segment\">\r\n        <div class=\"ui grid\">\r\n            <div class=\"four wide column\">\r\n                <div class=\"ui vertical text menu\">\r\n                    <div class=\"ui image s111\">\r\n                        <img src=\"../static/images/12.png\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"four wide column\">\r\n                <div class=\"ui vertical text menu\">\r\n                    <div class=\"item\">\r\n                         <h3 class=\"ui header\">Company</h3>\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Address : CN\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Tel:010-666666\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Tel:010-666666\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"four wide column\">\r\n                <div class=\"ui vertical text menu\">\r\n                    <div class=\"item\">\r\n                         <h3 class=\"ui header\">Company</h3>\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Address : CN\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Tel:010-666666\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        Tel:010-666666\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"four wide column\">\r\n                <div class=\"ui vertical text menu\">\r\n                    <div class=\"item\">\r\n                        <h3 class=\"ui header\">DESIGEND BY</h3>\r\n                    </div>\r\n                    <div class=\"item\">\r\n                        <h1 class=\"ui header\">ShiHao</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n</html>\r\n\r\n```\r\n\r\n\r\ncustom.css\r\n```\r\n.ui.vertical.basic.segment.masthead{\r\n    height: 1000px;\r\n    background: url(\"../images/2.png\");\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    padding-left: 40px;\r\n    padding-right: 40px;\r\n    /*position: relative;*/\r\n}\r\n\r\n.ui.center.inverted.aligned.header.slogan{\r\n    font-size: 50px;\r\n    position: absolute;\r\n    left: 50%;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.ui.orange.circular.button{\r\n    width: 200px;\r\n}\r\n.ui.image.s111{\r\n    padding-left: 100px;\r\n}\r\n\r\n.ui.inverted.segment.card-view{\r\n    height: 300px;\r\n}\r\n\r\n.ui.vertical.basic.segment.recommended.s112 > .ui.center.aligned.header{\r\n    font-size: 40px;\r\n    color: red;\r\n    margin-top: 40px;\r\n    margin-bottom: 40px;\r\n}\r\n\r\n.ui.header.title{\r\n    margin-top: 5px;\r\n    margin-bottom: 170px;\r\n}\r\n\r\n.ui.vertical.basic.segment.recommended.s112{\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n    margin-bottom: 50px;\r\n}\r\n\r\n.s113 {\r\n    margin-top: 22px;\r\n}\r\n\r\n.ui.inverted.segment.renwu{\r\n    height: 200px;\r\n    width: 200px;\r\n    background: url(\"../images/20.jpg\");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: -50px 0px;     /*可以调整背景图片位置(左 上)*/\r\n}\r\n\r\n.ui.center.aligned.header.s114{\r\n    margin-top: 100px;\r\n    margin-bottom: 50px;\r\n}\r\n\r\n.ui.four.column.grid.s115{\r\n    margin-left: 16%;\r\n    margin-right: 10%;\r\n    margin-bottom: 105px;\r\n}\r\n\r\n.ui.vertical.segment.s116{\r\n    background: url(\'../images/14.png\');\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: 10% 15%;\r\n    margin-bottom: 150px;\r\n    position: relative;\r\n}\r\n\r\n.ui.vertical.segment.s116 > .ui.labeled.button{\r\n    font-size: 17px;\r\n    height: 40px;\r\n    width: 170px;\r\n    top: 100%;\r\n    left: 50%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n    background: pink;\r\n}\r\n\r\n.ui.inverted.segment.renwu > .unhide.icon{\r\n    top: 90%;\r\n    left: 80%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n}\r\n\r\n.ui.inverted.segment.renwu > .ui.inverted.header{\r\n    top:105%;\r\n    left: 45%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n}\r\n.big.inverted.red.circular.star.icon{\r\n    top: 85%;\r\n    left: 85%;\r\n    position: absolute;\r\n    transform: translate(-50%, -50%);\r\n}\r\n```','2018-09-14 15:55:56.643107','2018-09-14 18:21:51.374075',7,'pic_img/u22082907741653936739fm27gp0.jpg',1,16),(47,'CSS盒模型','CSS盒子模型\r\n盒子模型解释 \r\n元素在页面中显示成一个方块，类似一个盒子，CSS盒子模型就是使用现实中盒子来做比喻，帮助我们设置元素对应的样式。盒子模型示意图如下：\r\n![](/media/editor/16_20180914155702037280.jpeg)\r\n\r\n把元素叫做盒子，设置对应的样式分别为：盒子的边框(border)、盒子内的内容和边框之间的间距(padding)、盒子与盒子之间的间距(margin)。\r\n\r\n设置边框 \r\n设置一边的边框，比如顶部边框，可以按如下设置：\r\n```HTML\r\nborder-top-color:red;    /* 设置顶部边框颜色为红色 */  \r\nborder-top-width:10px;   /* 设置顶部边框粗细为10px */   \r\nborder-top-style:solid;  /* 设置顶部边框的线性为实线，常用的有：solid(实线)  \r\n  dashed(虚线)  dotted(点线); */\r\n```\r\n上面三句可以简写成一句：\r\n\r\n```html\r\nborder-top:10px solid red;\r\n```\r\n\r\n设置其它三个边的方法和上面一样，把上面的\'top\'换成\'left\'就是设置左边，换成\'right\'就是设置右边，换成\'bottom\'就是设置底边。\r\n\r\n四个边如果设置一样，可以将四个边的设置合并成一句：\r\n\r\n```html\r\nborder:10px solid red;\r\n```\r\n\r\n设置内间距padding\r\n\r\n设置盒子四边的内间距，可设置如下：\r\n\r\n```html\r\npadding-top：20px;     /* 设置顶部内间距20px */ \r\npadding-left:30px;     /* 设置左边内间距30px */ \r\npadding-right:40px;    /* 设置右边内间距40px */ \r\npadding-bottom:50px;   /* 设置底部内间距50px */\r\n```\r\n\r\n上面的设置可以简写如下：\r\n\r\n```html\r\npadding：20px 40px 50px 30px; /* 四个值按照顺时针方向，分别设置的是 上 右 下 左  \r\n四个方向的内边距值。 */\r\n```\r\n\r\npadding后面还可以跟3个值，2个值和1个值，它们分别设置的项目如下：\r\n```html\r\npadding：20px 40px 50px; /* 设置顶部内边距为20px，左右内边距为40px，底部内边距为50px */ \r\npadding：20px 40px; /* 设置上下内边距为20px，左右内边距为40px*/ \r\npadding：20px; /* 设置四边内边距为20px */\r\n```\r\n\r\n设置外间距margin\r\n\r\n外边距的设置方法和padding的设置方法相同，将上面设置项中的\'padding\'换成\'margin\'就是外边距设置方法。\r\n\r\n盒子的width和height设置的是盒子内容的宽和高，不是盒子本身的宽和高，盒子的真实尺寸计算公式如下：\r\n\r\n盒子宽度 = width + padding左右 + border左右\r\n盒子高度 = height + padding上下 + border上下\r\n\r\nmargin相关技巧 \r\n1、设置元素水平居中： margin:x auto;\r\n2、margin负值让元素位移及边框合并\r\n\r\n外边距合并\r\n\r\n外边距合并指的是，当两个垂直外边距相遇时，它们将形成一个外边距。合并后的外边距的高度等于两个发生合并的外边距的高度中的较大者。解决方法如下：\r\n\r\n1、使用这种特性\r\n2、设置一边的外边距，一般设置margin-top\r\n3、将元素浮动或者定位\r\n\r\nmargin-top 塌陷\r\n\r\n在两个盒子嵌套时候，内部的盒子设置的margin-top会加到外边的盒子上，导致内部的盒子margin-top设置失败，解决方法如下：\r\n\r\n1、外部盒子设置一个边框\r\n2、外部盒子设置 overflow:hidden\r\n3、使用伪元素类：\r\n\r\n```html\r\n.clearfix:before{\r\n    content: \'\';\r\n    display:table;\r\n}\r\n```','2018-09-14 15:58:38.301954','2018-09-14 15:59:08.368885',5,'pic_img/rBABqFmNbmiENuPsAAAAAHGwmjE439_L3xS1UE.gif',1,16),(48,'html表格及传统布局','html表格\r\n------\r\n\r\ntable常用标签\r\n1、table标签：声明一个表格\r\n\r\n2、tr标签：定义表格中的一行\r\n\r\n3、td和th标签：定义一行中的一个单元格，td代表普通单元格，th表示表头单元格\r\n\r\ntable常用属性：\r\n1、border 定义表格的边框\r\n\r\n2、cellpadding 定义单元格内内容与边框的距离\r\n\r\n3、cellspacing 定义单元格与单元格之间的距离\r\n\r\n4、align 设置单元格中内容的水平对齐方式,设置值有：left | center | right\r\n\r\n5、valign 设置单元格中内容的垂直对齐方式 top | middle | bottom\r\n\r\n6、colspan 设置单元格水平合并\r\n\r\n7、rowspan 设置单元格垂直合并\r\n\r\n传统布局：\r\n传统的布局方式就是使用table来做整体页面的布局，布局的技巧归纳为如下几点：\r\n\r\n1、定义表格宽高，将border、cellpadding、cellspacing全部设置为0\r\n\r\n2、单元格里面嵌套表格\r\n\r\n3、单元格中的元素和嵌套的表格用align和valign设置对齐方式\r\n\r\n4、通过属性或者css样式设置单元格中元素的样式\r\n\r\n\r\n```HTML\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n	<meta charset=\"UTF-8\">\r\n	<title>html表格</title>\r\n</head>\r\n<body>\r\n	\r\n	<!-- table>(tr>td*4)*4 -->\r\n	<table border=\"1\" cellpadding=\"10\" cellspacing=\"10\">\r\n		<tr>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n		</tr>\r\n		<tr>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n		</tr>\r\n		<tr>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n		</tr>\r\n		<tr>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n			<td>123</td>\r\n		</tr>\r\n	</table>\r\n\r\n\r\n\r\n\r\n	<h3>html表格</h3>\r\n	<table border=\"1\" width=\"500\" height=\"300\">\r\n		<tr>\r\n			<th>序号</th>\r\n			<th>产品名称</th>\r\n			<th>产品价格</th>\r\n			<th>产品数量</th>\r\n		</tr>\r\n		<tr align=\"center\">\r\n			<td>1</td>\r\n			<td>苹果</td>\r\n			<td>RMB5.00</td>\r\n			<td>1000</td>\r\n		</tr>\r\n		<tr align=\"center\">\r\n			<td>2</td>\r\n			<td>橘子</td>\r\n			<td>RMB10.00</td>\r\n			<td>2000</td>\r\n		</tr>\r\n	</table>\r\n\r\n\r\n\r\n	<h3>个人简历表</h3>\r\n\r\n	<table border=\"1\" width=\"600\" height=\"300\">\r\n		<tr>\r\n			<th colspan=\"5\" align=\"left\">基本情况</th>\r\n		</tr>\r\n		<tr>\r\n			<td width=\"18%\">姓名</td>\r\n			<td width=\"18%\"></td>\r\n			<td width=\"18%\">性别</td>\r\n			<td width=\"18%\"></td>\r\n			<td rowspan=\"5\"><img src=\"./images/person.png\" alt=\"图片\"></td>\r\n		</tr>\r\n		<tr>\r\n			<td>民族</td>\r\n			<td></td>\r\n			<td>性别</td>\r\n			<td></td>\r\n		</tr>\r\n		<tr>\r\n			<td>政治面貌</td>\r\n			<td></td>\r\n			<td>性别</td>\r\n			<td></td>\r\n		</tr>\r\n		<tr>\r\n			<td>籍贯</td>\r\n			<td></td>\r\n			<td>性别</td>\r\n			<td></td>\r\n		</tr>\r\n		<tr>\r\n			<td>电子邮箱</td>\r\n			<td></td>\r\n			<td>性别</td>\r\n			<td></td>\r\n		</tr>\r\n	</table>\r\n	\r\n	\r\n</body>\r\n</html>\r\n```\r\n\r\n效果图：\r\n![](/media/editor/22_20180914160047057055.png)\r\n\r\n\r\n\r\n表格传统布局\r\n```HTML\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n	<meta charset=\"UTF-8\">\r\n	<title>html表格传统布局</title>\r\n	<style type=\"text/css\">\r\n		body{\r\n			font-family: \"微软雅黑\"; \r\n		}\r\n\r\n		.title1{\r\n			color: #5f5f5f;\r\n			font-size: 24px;\r\n			font-weight: bold;\r\n		}\r\n		\r\n		.title2{\r\n			color: #5f5f5f;\r\n			font-size: 18px;\r\n			font-weight: bold;\r\n		}\r\n\r\n		td span{\r\n			color: #5f5f5f;\r\n			font-size: 16px;\r\n			font-weight: bold;\r\n		}\r\n\r\n		table .font1{\r\n			color: #5f5f5f;\r\n			font-size: 16px;\r\n		}\r\n		\r\n		.font2{\r\n			color: #a7a6a6;\r\n			font-size: 16px;\r\n		}\r\n\r\n		td{\r\n			line-height: 30px;\r\n		}\r\n	</style>\r\n</head>\r\n<body>\r\n	<table width=\"800\" height=\"800\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n		<tr>\r\n			<td width=\"260\" valign=\"top\" bgcolor=\"#f2f2f2\">\r\n				<table width=\"260\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n					<tr height=\"100\">\r\n						<td></td>\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td width=\"230\" align=\"right\"><img src=\"./images/person.png\" alt=\"人物图片\"></td>\r\n						<td width=\"30\"></td>\r\n					</tr>\r\n					<tr>\r\n						<td align=\"right\" class=\"title1\">张达山</td>\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td align=\"right\" class=\"font2\">18210898888</td>\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td align=\"right\" class=\"font2\">zhangdasan@126.com</td>\r\n						<td></td>\r\n					</tr>\r\n				</table>\r\n			</td>\r\n			<td width=\"30\"></td>\r\n			<td width=\"480\" valign=\"top\">\r\n				<table width=\"480\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\">\r\n					<tr height=\"75\">\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td align=\"right\"><img src=\"./images/resume.png\" alt=\"图片\"></td>\r\n					</tr>\r\n				</table>\r\n\r\n				<hr />	<!--画一条线-->\r\n\r\n				<table width=\"480\" height=\"180\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"font1\">\r\n					<tr height=\"30\">\r\n						<td></td>\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td colspan=\"2\" class=\"title2\"><b>个人基本情况</b></td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>姓 名：</span>张达山</td>\r\n						<td><span>籍 贯：</span>北京昌平</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>性 别：</span>男</td>\r\n						<td><span>身 高：</span>175cm</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>民 族：</span>汉</td>\r\n						<td><span>体 重：</span>70kg</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>出生日期：</span>1992.03.28</td>\r\n						<td><span>电 话：</span>18210898888</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>专 业：</span>工业设计</td>\r\n						<td><span>现居住地：</span>昌平天通苑</td>\r\n					</tr>\r\n				</table>\r\n\r\n				<table width=\"480\" height=\"180\" border=\"0\" cellpadding=\"0\" cellspacing=\"0\" class=\"font1\">\r\n					<tr height=\"30\">\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td class=\"title2\">教育背景及工作经历</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>2008.09-2011.06 </span>北京邮电大学 工业设计专业</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>2011.06-2012.09</span>北京微创信息科技有限公司 任前端开发工程师</td>\r\n					</tr>\r\n					<tr height=\"30\">\r\n						<td></td>\r\n					</tr>\r\n					<tr>\r\n						<td class=\"title2\">所获证书</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>2009年：</span>荣获“高级美术设计师”证书</td>\r\n					</tr>\r\n					<tr>\r\n						<td><span>2009年：</span>荣获“优秀班干部”证书</td>\r\n					</tr>\r\n				</table>\r\n\r\n			</td>\r\n			<td width=\"30\"></td>\r\n		</tr>\r\n	</table>\r\n</body>\r\n</html>\r\n```\r\n效果图\r\n![](/media/editor/21_20180914160019475631.png)','2018-09-14 16:01:36.285318','2018-09-14 16:01:42.849706',1,'pic_img/mp55952360_1453432388097_3_NgKEL3h.gif',1,16),(49,'安装windows+ubuntu双系统','需要的工具：\r\n------\r\n\r\n ubuntu 13.04 32位  （百度云盘链接：链接：https://pan.baidu.com/s/1cvesFTnrxmgWFfT8yrqSag 密码：q2c6\r\n 也可以去官网下载最新版）\r\n\r\n UltraISO最新版  （百度云盘链接：https://pan.baidu.com/s/1ZBCFK1Ei1sdy2JivILmLxQ 密码：p3wl  \r\n 用来刻录U盘启动盘）\r\n\r\n 一个空着的U盘（若有文件，请先备份）\r\n在系统的windows上分出一个至少20G的空闲分区\r\n\r\n\r\n制作U盘启动盘：\r\n----------------\r\n1：运行UltraISO软件，在“本地目录”中查找ubuntu13.04镜像文件的位置，在右方找到后，双击该镜像文件\r\n![](/media/editor/31_20180914160256293922.png)\r\n2：完成上步后，选择上方的“启动”--“写入硬盘映像...”\r\n![](/media/editor/32_20180914160318379780.png)\r\n3：在弹出的窗口中进行如下图设置，\r\n刻录校验：打上对号\r\n写入方式：USB-ZIP+\r\n便捷启动：写入新的硬盘主引导记录（MBR）-USB-ZIP+\r\n设置完毕后，单击“写入”\r\n如下图：\r\n![](/media/editor/33_20180914160421487535.png)\r\n4：如果出现提示，点击是，等待写入完成\r\n\r\n到此，将ubuntu13.04写入U盘的工作就结束了。\r\n\r\n\r\nubuntu13.04安装\r\n-------------\r\n\r\n总算到了关键的一步\r\n\r\n1：重启计算机，从U盘启动，我的笔记本是dell系列的，开机后连续多次按f12进入bios设置，一般电脑都是F2或者F12，如果不同，请搜索百度（电脑品牌+如何进入bios）\r\n\r\n2：进入选择USB HDD, 从u盘启动电脑（如果没有该选项，百度搜索电脑品牌+如何设置电脑从u盘启动）\r\n![](/media/editor/34_20180914160507718169.png)\r\n\r\n3： 稍等片刻后，将进入ububtu13.04的安装界面，这里我们选择了“中文（简体）”，然后单击安装：\r\n![](/media/editor/35_20180914160539037131.png)\r\n\r\n4：出现如下图时，请根据需要选择，然后单击“继续” ，\r\n接下来会出现问你是否要连接网络，我们选择“我现在不想连接wifi网络”，然后点击“继续”，由于篇幅问题，在此就不上传它了。\r\n![](/media/editor/36_20180914160617769827.png)\r\n\r\n5： 我们要手动分盘符，所以，出现下图时，请选择“其它选项”\r\n![](/media/editor/37_20180914160644422783.png)\r\n\r\n6： 找到其中标有“空闲”的盘符，这个盘符就是我们用于安装ubuntu的100G空间，别去碰别的盘符，小心弄得到时候win7不能用了，甚至品牌机自带的隐藏分区也会被破坏。\r\n\r\n然后，点击下方的“+”\r\n![](/media/editor/38_20180914160710888804.png)\r\n\r\n7; 接下来，我们要进行四次分区，每次都是从“空闲”中分出部分区域，网上也有人说两次分区即可，但初学者，按着4次走就行了，以后想探索，那是以后的事了。\r\n\r\n第一次分区：\r\n\r\n上一步骤点“+”，进行如下设置：\r\n\r\n挂载点：“/”\r\n\r\n大小：22000MB\r\n\r\n新分区的类型：主分区\r\n\r\n新分区的位置：空间起始位置\r\n\r\n用于：EXT4日志文件系统\r\n\r\n第一次分区完毕\r\n\r\n下图所示：\r\n![](/media/editor/41_20180914160742914659.png)\r\n\r\n8: 第二次分区：\r\n\r\n“空闲”处，继续点“+”，如下设置，\r\n\r\n挂载点：（不设置）\r\n\r\n大小：2048MB（网上认为是物理内存的2倍，其实笔者认为1G就够了，顶多2G）\r\n\r\n新分区的类型：逻辑分区\r\n\r\n新分区的位置：空间起始位置\r\n\r\n用于：交换空间\r\n\r\n第二次分区完毕\r\n\r\n下图所示：\r\n![](/media/editor/42_20180914160904458685.png)\r\n\r\n9:  第三次分区：\r\n\r\n“空闲”处，继续点“+”，如下设置，\r\n\r\n挂载点：/boot  （网上有的说不需要设置这项，但双系统引导时需要，先不要去理解这些）\r\n\r\n大小：200MB（笔者暂时设置为200MB）\r\n\r\n新分区的类型：逻辑分区\r\n\r\n新分区的位置：空间起始位置\r\n\r\n用于：EXT4日志文件系统\r\n\r\n第三次分区完毕\r\n\r\n下图所示：\r\n![](/media/editor/43_20180914160939175085.png)\r\n\r\n10:  第四次分区：\r\n\r\n“空闲”处，继续点“+”，如下设置，\r\n\r\n挂载点：/home \r\n\r\n大小：（剩余全部空间，剩下显示多少，就多少）\r\n\r\n新分区的类型：逻辑分区\r\n\r\n新分区的位置：空间起始位置\r\n\r\n用于：EXT4日志文件系统\r\n\r\n第四次分区完毕\r\n\r\n下图所示：\r\n![](/media/editor/44_20180914161031671207.png)\r\n\r\n11: 分区设置完毕后，下方还有一项“安装启动引导器的设备”，默认就如下图所示那样，也是网友们所说的sda，如果选择默认，则是ubuntu引导windows7，到时候卸载ubuntu时，可能会麻烦些，如果想用windows7引导ubuntu，请选择你/boot所在的盘符，之后还要在windows下安装引导类的软件，才能启动ubuntu，过程会复杂些。这一步骤请大家慎重选择，笔者选择的默认选项，以后产生什么问题，以后再说吧。\r\n\r\n然后点击“现在安装”，\r\n![](/media/editor/45_20180914161105531388.png)\r\n\r\n12:之后就没什么了，一些使用的设置，比较简单，就不说了','2018-09-14 16:11:32.081976','2018-09-14 22:36:23.755919',4,'pic_img/25820ac55be142a8bec9fcfa9acf71de_IxAEJp1.gif',1,17),(50,'deepin中安装mongodb','安装\r\n下载地址：https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-2.6.0.tgz（或者到官网上下载别的版本）\r\n\r\n完成下载后，把软件包移动到软件安装的目录下，我这里是/usr/local/。\r\n\r\n解压：tar -zxvf mongodb-linux-x86_64-2.6.0.tgz（权限不够，要加sudo，下同）\r\n\r\n更改安装目录：mv mongodb-linux-x86_64-2.6.0.tgz mongodb\r\n\r\n创建mongodb数据库存放路径：mkdir -p /data/db\r\n\r\n创建mongodb数据库日志存放路径：mkdir -p /usr/local/mongodb/log/（存放在安装路径下）\r\n\r\n启动服务\r\n```shell\r\n启动mongodb服务：/usr/local/mongodb/bin/mongod --dbpath=/data/db --logpath=/usr/local/mongodb/log/mongodb.log --logappend --port 27017 --fork（若出现错误，可能是权限不够）\r\n--dbpath 数据库路径(数据文件)\r\n--logpath 数据库日志文件路径\r\n--port 启用端口号\r\n--fork 在后台运行\r\n--auth 是否需要验证权限登录(用户名和密码)\r\n```\r\n\r\n设置mongodb\r\n添加安装路径到path中：\r\n\r\n```shell\r\n$ vim /etc/profile\r\n添加一下代码到文件的最后一行，并保存:\r\nexport PATH=$PATH:/usr/local/mongodb/bin\r\n使设置生效：source /etc/profile\r\n进入控制台：mongo（在任意位置）\r\n```\r\n\r\n设置mongodb开机自启：\r\n编辑mongodb配置文件，设置启动参数：vim /usr/local/mongodb/mongodb.conf（没有就新建一个）\r\n\r\n加入以下参数并保存：\r\n\r\n```shell\r\ndbpath=/data/db #数据库路径\r\nport=27017 #端口号\r\nfork=true #设置后台运行\r\nlogappend=true\r\nshardsvr=true\r\npidfilepath=/usr/local/mongodb/mongo.pid\r\nlogpath=/usr/local/mongodb/log/mongodb.log #日志输出文件路径\r\ndirectoryperdb=true\r\nauth=false #关闭认证\r\n```\r\n打开命令行，输入mongo，即可验证。','2018-09-14 16:14:03.934312','2018-09-14 18:22:10.624070',3,'pic_img/0204b0888c057edb854bd219cec46814_WIwYoHJ.gif',1,17),(51,'git使用','**Git简介**\r\nGit是目前世界上最先进的分布式版本控制系统\r\n安装\r\nsudo apt-get install git\r\n安装成功后，运行如下命令\r\ngit\r\n检测是否安装成功\r\n\r\n\r\n**创建github账号**\r\n本地Git仓库和GitHub仓库之间的传输是通过SSH加密的\r\nstep1：创建项目的SSH Key\r\n```shell\r\nssh-keygen -t rsa -C \"youremail@example.com\"\r\n```\r\n创建完成后，在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人\r\nstep2:* 登录github注册或登录账号，打开“settings”的“SSH Keys”页面，然后，点“New SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容，点“Add Key”，你就应该看到已经添加的Key\r\n\r\n**创建远程库**\r\n登陆GitHub\r\n在右上角找到“new repository”按钮，创建一个新的仓库\r\n\r\n**从远程库克隆**\r\n将github上的项目，克隆到本地一份\r\n\r\n```shell\r\ngit clone git@github.com:账号名/项目名.git\r\n```\r\n\r\n**与远程库交互**\r\n\r\n```shell\r\n从远程库获取到本地\r\ngit pull\r\n将本地提交远程库\r\ngit push origin master\r\n```\r\n\r\n\r\n----------\r\n**本地仓库**\r\n\r\n1：在目录下创建本地仓库\r\n```shell\r\ngit init\r\n```\r\n2：文件管理:\r\n本地仓库分为三部分：工作区，暂存区，仓库区，其中暂存区、仓库区是版本库部分\r\n\r\n3：工作区与暂存区:\r\n```shell\r\n使用IDE打开目录，创建项目，将文件添加到暂存区\r\ngit add 文件1 文件2 ...\r\ngit add 目录\r\n使用暂时区的内容恢复工作区的内容\r\ngit checkout -- 文件名\r\n查看暂存区的状态\r\ngit status\r\n```\r\n\r\n4：暂存区与仓库区\r\n```shell\r\n将暂存区的记录添加到仓库区\r\ngit commit -m \'本次提交的说明信息\'\r\n查看仓库区的历史\r\n当前版本的历史版本：git log\r\n简版显示：git log --pretty=oneline\r\n历史命令：git reflog\r\n```\r\n在Git中，用HEAD表示当前版本，也就是最新的提交3628164...882e1e0（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100\r\n\r\n对比工作区和仓库区中某版本某文件的不同\r\n```shell\r\ngit diff HEAD -- 文件名\r\n回退历史版本到暂存区\r\ngit reset HEAD^或版本号\r\n```\r\n\r\n5：删除文件:\r\n依次执行如下命令\r\n```shell\r\nrm 文件名\r\ngit rm 文件名\r\ngit commit -m \'说明信息\'\r\n```','2018-09-14 16:15:23.531359','2018-09-15 08:14:27.889457',6,'pic_img/4b145b63eb785b06a276c_l8Rcs1w.gif',1,18);
/*!40000 ALTER TABLE `article_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_article_tag`
--

DROP TABLE IF EXISTS `article_article_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `article_id` int(11) NOT NULL,
  `tag_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `article_article_tag_article_id_tag_id_7f08f5fb_uniq` (`article_id`,`tag_id`),
  KEY `article_article_tag_tag_id_5262d0fd_fk_article_tag_id` (`tag_id`),
  CONSTRAINT `article_article_tag_article_id_484f096c_fk_article_article_id` FOREIGN KEY (`article_id`) REFERENCES `article_article` (`id`),
  CONSTRAINT `article_article_tag_tag_id_5262d0fd_fk_article_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `article_tag` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_article_tag`
--

LOCK TABLES `article_article_tag` WRITE;
/*!40000 ALTER TABLE `article_article_tag` DISABLE KEYS */;
INSERT INTO `article_article_tag` VALUES (1,1,1),(2,2,1),(14,14,1),(15,15,7),(18,17,10),(19,18,11),(20,18,12),(22,19,15),(21,19,16),(23,20,17),(24,21,18),(25,22,19),(26,23,20),(27,24,9),(28,24,21),(29,25,2),(30,26,22),(31,27,23),(32,28,24),(33,29,25),(34,30,26),(35,31,27),(36,32,28),(37,33,6),(38,34,6),(39,35,29),(40,36,30),(41,37,31),(42,38,32),(43,39,33),(44,40,34),(45,41,35),(46,42,36),(48,43,38),(49,44,39),(50,45,40),(51,46,41),(52,47,42),(53,48,43),(54,49,44),(55,50,45),(56,51,46);
/*!40000 ALTER TABLE `article_article_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_category`
--

DROP TABLE IF EXISTS `article_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_category` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `cname` varchar(20) NOT NULL,
  `isShow` tinyint(1) NOT NULL,
  `lifeOrStudy` varchar(10) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `cname` (`cname`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_category`
--

LOCK TABLES `article_category` WRITE;
/*!40000 ALTER TABLE `article_category` DISABLE KEYS */;
INSERT INTO `article_category` VALUES (1,'django',1,'学无止境'),(7,'git',1,'学无止境'),(9,'python',1,'学无止境'),(10,'pygame',1,'学无止境'),(11,'c++',1,'学无止境'),(12,'优美文章',1,'慢生活'),(13,'c',1,'学无止境'),(14,'acm',1,'学无止境'),(15,'数据结构',1,'学无止境'),(16,'html',1,'学无止境'),(17,'linux',1,'学无止境'),(18,'工具',1,'学无止境');
/*!40000 ALTER TABLE `article_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_tag`
--

DROP TABLE IF EXISTS `article_tag`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_tag` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `tname` varchar(30) NOT NULL,
  `isShow` tinyint(1) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `tname` (`tname`)
) ENGINE=InnoDB AUTO_INCREMENT=47 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_tag`
--

LOCK TABLES `article_tag` WRITE;
/*!40000 ALTER TABLE `article_tag` DISABLE KEYS */;
INSERT INTO `article_tag` VALUES (1,'django搭建个人博客',1),(2,'优美散文',1),(3,'搞笑文章',1),(4,'回忆录',1),(5,'诗歌',1),(6,'acm',1),(7,'git',1),(8,'linux',1),(9,'python',1),(10,'提高网站速度和访问量',1),(11,'django统计网站访问次数',1),(12,'django记录访问ip地址和',1),(13,'django+nginx+uw',1),(14,'pip install uws',1),(15,'pip install uwsgi安装uwsgi出错',1),(16,'django+nginx+uwsgi部署',1),(17,'python3输入输出',1),(18,'pygame',1),(19,'c++中string的用法',1),(20,'python程序使用pdb调试',1),(21,'随机漫步',1),(22,'c++运算符重载',1),(23,'c++重载重写重定义',1),(24,'c语言指针转置二维数组',1),(25,'街区最短路径问题',1),(26,'学生成绩管理系统',1),(27,'无线网络覆盖',1),(28,'蛇形填数',1),(29,'背包问题',1),(30,'二叉树的基本操作',1),(31,'循环队列的基本操作',1),(32,'二叉树遍历（前序，中序，后序）',1),(33,'希尔排序',1),(34,'链表的增删改查',1),(35,'快速排序',1),(36,'二分法插入排序',1),(37,'python使用json模块绘制世界人口地图',1),(38,'使用python将json格式文件进行数据可视化绘制世界人口',1),(39,'使用pygal绘制世界地图时的两个报错',1),(40,'处理.CSV文件格式的数据并用matplotlib可视化',1),(41,'第一次使用semantic ui做的网页',1),(42,'CSS盒模型',1),(43,'html表格及传统布局',1),(44,'安装windows+ubuntu双系统',1),(45,'deepin中安装mongodb',1),(46,'git使用',1);
/*!40000 ALTER TABLE `article_tag` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_userip`
--

DROP TABLE IF EXISTS `article_userip`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_userip` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `ip` varchar(30) NOT NULL,
  `count` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2242 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_userip`
--

LOCK TABLES `article_userip` WRITE;
/*!40000 ALTER TABLE `article_userip` DISABLE KEYS */;
INSERT INTO `article_userip` VALUES (1,'117.158.222.126',450),(2,'61.158.149.155',4),(3,'140.207.118.16',5),(4,'61.158.149.156',3),(5,'128.65.173.7',1),(6,'117.158.192.62',199),(7,'61.158.146.167',2),(8,'61.158.149.223',4),(9,'61.151.225.181',2),(10,'85.174.227.214',1),(11,'47.104.22.79',1),(12,'220.181.108.165',1),(13,'157.55.39.35',1),(14,'182.118.20.209',12),(15,'185.18.88.242',1),(16,'42.236.10.109',2),(17,'180.163.225.134',1),(18,'23.252.89.189',1),(19,'60.191.38.78',9),(20,'42.236.10.113',1),(21,'118.31.244.58',1),(22,'123.205.189.42',1),(23,'47.97.16.6',4),(24,'42.236.10.72',1),(25,'178.73.215.171',7),(26,'185.208.149.209',1),(27,'110.232.94.62',1),(28,'185.93.242.211',1),(29,'47.92.100.7',1),(30,'42.236.10.82',1),(31,'193.85.159.164',1),(32,'111.206.36.12',1),(33,'42.236.10.110',2),(34,'60.174.237.200',2),(35,'83.167.186.83',1),(36,'200.158.220.121',1),(37,'54.91.124.14',1),(38,'42.236.10.103',2),(39,'138.0.131.88',1),(40,'200.232.214.41',1),(41,'61.158.149.145',1),(42,'47.94.52.159',3),(43,'203.198.8.234',1),(44,'123.125.71.83',2),(45,'61.146.178.35',1),(46,'61.146.178.32',1),(47,'61.146.178.32',1),(48,'218.108.49.198',1),(49,'5.8.54.27',6),(50,'183.129.158.202',1),(51,'185.78.116.231',1),(52,'211.192.152.30',1),(53,'60.191.52.254',32),(54,'178.239.148.105',1),(55,'58.250.250.87',1),(56,'112.210.234.234',1),(57,'175.6.6.230',2),(58,'52.33.27.238',1),(59,'101.81.106.240',1),(60,'86.104.231.106',1),(61,'51.38.12.21',6),(62,'123.125.71.51',3),(63,'42.236.10.114',2),(64,'180.163.220.43',3),(65,'101.71.235.183',2),(66,'113.61.35.70',19),(67,'220.181.108.97',1),(68,'61.158.149.24',4),(69,'117.144.245.12',1),(70,'61.151.226.61',2),(71,'101.199.121.77',5),(72,'107.170.229.36',1),(73,'195.93.169.213',1),(74,'61.158.149.164',4),(75,'61.158.149.137',4),(76,'101.226.79.226',1),(77,'61.151.225.191',3),(78,'194.68.167.31',1),(79,'220.181.108.166',1),(80,'58.246.221.163',2),(81,'190.204.234.240',1),(82,'103.107.68.18',1),(83,'123.125.71.41',1),(84,'123.125.71.95',1),(85,'79.27.50.177',1),(86,'220.181.108.180',2),(87,'42.119.189.2',1),(88,'183.178.4.39',1),(89,'103.78.218.130',1),(90,'2.179.82.87',1),(91,'45.235.234.63',1),(92,'5.160.128.132',1),(93,'95.51.225.108',2),(94,'60.191.38.77',25),(95,'83.147.243.198',1),(96,'41.33.114.91',1),(97,'52.53.201.78',23),(98,'61.158.149.237',1),(99,'91.202.132.7',1),(100,'113.134.36.118',2),(101,'46.102.188.236',1),(102,'61.158.149.253',9),(103,'140.207.128.218',1),(104,'61.151.179.83',3),(105,'93.124.41.123',1),(106,'171.8.225.194',13),(107,'122.228.10.51',8),(108,'183.136.190.62',32),(109,'58.19.59.33',7),(110,'106.14.190.222',1),(111,'95.133.32.75',1),(112,'186.211.3.33',1),(113,'61.158.149.47',6),(114,'35.234.61.63',2),(115,'117.25.139.23',3),(116,'180.211.121.90',1),(117,'101.24.121.153',1),(118,'125.24.236.100',1),(119,'79.106.17.126',1),(120,'106.120.161.66',1),(121,'220.181.132.200',5),(122,'222.141.227.154',32),(123,'101.227.131.207',2),(124,'181.193.103.70',1),(125,'91.109.198.179',1),(126,'123.125.71.109',2),(127,'168.194.22.62',1),(128,'14.215.176.141',1),(129,'106.15.53.214',3),(130,'168.1.128.51',1),(131,'37.192.103.164',1),(132,'47.52.210.105',2),(133,'113.87.117.146',1),(134,'201.236.215.120',1),(135,'101.132.102.45',3),(136,'81.219.42.126',1),(137,'78.108.105.157',1),(138,'173.235.92.138',1),(139,'196.52.43.126',1),(140,'185.140.103.219',1),(141,'201.13.31.225',1),(142,'203.208.60.28',2),(143,'93.126.62.66',1),(144,'139.162.106.181',9),(145,'123.209.66.166',1),(146,'81.30.221.28',2),(147,'13.57.229.187',1),(148,'182.55.207.164',1),(149,'122.176.54.163',1),(150,'203.208.60.202',1),(151,'121.224.208.231',1),(152,'61.158.149.20',9),(153,'61.151.218.118',1),(154,'39.107.116.226',2),(155,'162.246.212.85',1),(156,'181.143.232.61',1),(157,'185.217.162.150',1),(158,'103.57.122.118',1),(159,'89.218.133.170',1),(160,'178.210.21.9',1),(161,'61.158.149.53',1),(162,'114.94.158.4',22),(163,'203.208.60.43',2),(164,'203.208.60.201',4),(165,'203.208.60.53',3),(166,'78.58.33.211',1),(167,'203.208.60.199',5),(168,'117.54.9.129',1),(169,'35.233.220.21',1),(170,'155.93.130.133',1),(171,'203.208.60.200',3),(172,'203.208.60.66',2),(173,'218.211.168.176',1),(174,'200.207.108.33',1),(175,'123.205.155.250',1),(176,'71.68.186.206',1),(177,'185.12.70.169',1),(178,'103.78.12.9',2),(179,'79.121.26.106',1),(180,'201.76.116.64',1),(181,'106.75.92.187',7),(182,'123.125.67.219',1),(183,'123.125.71.45',1),(184,'172.104.108.109',5),(185,'188.137.100.71',1),(186,'188.253.50.161',1),(187,'117.50.7.159',1),(188,'177.66.208.130',1),(189,'122.14.220.207',1),(190,'185.228.116.114',1),(191,'119.23.139.140',3),(192,'47.58.132.131',1),(193,'103.84.165.79',1),(194,'195.208.132.235',1),(195,'14.215.176.145',1),(196,'178.255.173.179',1),(197,'47.98.34.250',3),(198,'162.212.28.72',1),(199,'150.95.157.94',2),(200,'84.242.189.150',1),(201,'79.51.120.77',1),(202,'47.92.102.179',2),(203,'101.132.144.145',4),(204,'141.212.122.64',2),(205,'197.232.244.78',1),(206,'41.220.224.74',1),(207,'167.114.232.244',1),(208,'187.10.12.250',1),(209,'101.132.156.172',3),(210,'190.110.213.222',1),(211,'179.113.144.29',1),(212,'47.97.216.82',2),(213,'220.181.51.108',2),(214,'125.139.223.220',1),(215,'36.67.228.187',1),(216,'45.6.108.103',1),(217,'111.199.184.220',1),(218,'151.61.23.82',1),(219,'200.206.203.103',1),(220,'183.89.184.22',1),(221,'117.136.79.152',1),(222,'120.92.11.152',1),(223,'222.141.227.225',66),(224,'120.33.228.99',1),(225,'207.102.138.158',1),(226,'2.182.3.218',1),(227,'85.140.176.83',1),(228,'66.111.57.20',2),(229,'176.98.218.1',1),(230,'191.8.118.243',1),(231,'81.30.126.5',1),(232,'45.234.105.247',1),(233,'103.76.171.234',2),(234,'47.91.216.243',1),(235,'220.133.228.185',1),(236,'95.69.48.52',1),(237,'138.121.175.67',1),(238,'41.90.8.226',1),(239,'171.223.100.13',2),(240,'2.186.13.237',1),(241,'61.158.149.7',15),(242,'140.207.128.158',2),(243,'61.151.178.165',2),(244,'61.151.225.192',4),(245,'113.67.73.145',1),(246,'113.67.74.221',1),(247,'36.67.136.85',1),(248,'101.199.121.223',1),(249,'106.2.124.185',1),(250,'151.236.30.74',1),(251,'190.210.254.50',1),(252,'115.29.223.75',1),(253,'89.232.146.226',1),(254,'189.180.160.112',1),(255,'203.189.150.126',1),(256,'139.224.238.50',1),(257,'203.208.60.198',1),(258,'162.243.145.107',1),(259,'179.98.67.41',1),(260,'61.147.103.149',1),(261,'154.47.128.29',1),(262,'134.236.117.1',1),(263,'197.98.41.103',1),(264,'177.154.84.20',1),(265,'47.97.21.76',4),(266,'201.150.149.76',1),(267,'203.160.62.206',1),(268,'103.245.205.94',1),(269,'220.181.108.163',3),(270,'203.208.60.8',2),(271,'123.125.71.42',2),(272,'119.10.68.85',1),(273,'169.54.244.78',1),(274,'61.158.148.50',7),(275,'101.226.113.48',2),(276,'121.12.118.1',1),(277,'14.215.176.17',1),(278,'61.158.149.153',1),(279,'101.89.64.232',1),(280,'202.173.10.191',5),(281,'101.132.131.7',2),(282,'101.132.100.6',4),(283,'123.125.143.158',1),(284,'94.183.198.91',1),(285,'2.182.234.55',1),(286,'113.118.235.47',1),(287,'41.33.58.250',2),(288,'65.130.144.119',1),(289,'88.18.147.110',1),(290,'45.226.221.99',1),(291,'123.125.67.162',1),(292,'220.181.108.176',1),(293,'178.79.48.2',1),(294,'203.208.60.88',1),(295,'203.208.60.75',1),(296,'123.125.71.23',3),(297,'203.208.60.64',5),(298,'203.208.60.80',2),(299,'103.27.125.22',1),(300,'143.0.244.85',1),(301,'180.153.232.170',1),(302,'24.23.13.239',1),(303,'185.233.246.14',1),(304,'189.47.25.126',1),(305,'80.175.228.189',1),(306,'95.38.70.17',1),(307,'138.36.122.13',1),(308,'5.255.250.120',7),(309,'220.181.51.109',2),(310,'158.69.210.192',1),(311,'186.183.158.210',1),(312,'109.204.128.80',1),(313,'180.250.203.190',1),(314,'47.92.103.177',1),(315,'213.227.56.116',1),(316,'54.36.148.80',1),(317,'159.65.38.205',1),(318,'203.208.60.60',2),(319,'47.52.210.94',2),(320,'92.242.228.181',1),(321,'119.23.174.205',2),(322,'179.111.143.158',2),(323,'77.224.168.27',1),(324,'45.115.172.35',1),(325,'182.19.235.46',1),(326,'177.189.215.34',1),(327,'201.49.237.73',1),(328,'196.52.43.53',2),(329,'36.76.111.236',1),(330,'220.181.108.102',1),(331,'61.158.149.210',2),(332,'45.56.67.72',1),(333,'83.32.237.146',1),(334,'185.5.231.70',1),(335,'67.133.86.5',1),(336,'123.125.143.192',1),(337,'222.141.227.207',15),(338,'179.98.102.163',1),(339,'122.225.12.154',1),(340,'139.224.15.159',1),(341,'101.132.188.111',3),(342,'58.115.140.103',2),(343,'177.87.61.60',1),(344,'123.125.143.24',1),(345,'112.208.191.35',1),(346,'123.125.71.38',1),(347,'203.208.60.72',1),(348,'41.217.218.185',1),(349,'123.125.71.104',3),(350,'123.125.67.159',1),(351,'93.95.152.66',1),(352,'78.164.25.112',1),(353,'1.203.183.190',3),(354,'165.16.37.186',2),(355,'177.23.40.218',1),(356,'123.125.71.113',3),(357,'43.248.25.51',1),(358,'52.87.143.211',1),(359,'203.208.60.106',1),(360,'47.92.71.118',2),(361,'203.207.56.164',1),(362,'187.57.233.67',1),(363,'201.92.245.224',1),(364,'203.208.60.124',3),(365,'191.113.194.203',1),(366,'203.208.60.63',3),(367,'41.75.67.77',1),(368,'222.164.55.171',1),(369,'124.41.214.71',1),(370,'14.130.204.186',5),(371,'220.181.108.108',2),(372,'220.181.108.111',2),(373,'36.75.214.98',1),(374,'42.236.99.16',1),(375,'81.22.189.143',1),(376,'110.74.216.123',1),(377,'47.94.39.226',5),(378,'123.125.67.208',2),(379,'2.82.187.225',2),(380,'67.231.52.214',1),(381,'212.120.206.173',1),(382,'95.5.10.252',1),(383,'123.125.143.139',1),(384,'47.92.6.234',1),(385,'220.181.108.113',3),(386,'185.110.29.147',1),(387,'123.125.67.165',1),(388,'220.181.108.172',2),(389,'195.189.248.42',1),(390,'181.44.21.135',1),(391,'38.100.21.67',5),(392,'159.255.188.109',1),(393,'37.49.217.173',1),(394,'105.226.26.53',1),(395,'183.43.149.176',2),(396,'77.178.74.216',1),(397,'12.206.199.242',1),(398,'89.248.172.90',7),(399,'182.19.219.15',1),(400,'157.119.225.208',1),(401,'152.249.238.227',1),(402,'177.9.19.229',1),(403,'81.163.54.186',1),(404,'41.50.85.152',1),(405,'85.206.97.3',1),(406,'39.109.220.221',1),(407,'119.15.83.210',1),(408,'181.225.65.54',1),(409,'162.212.25.58',1),(410,'177.104.30.17',1),(411,'50.197.160.5',1),(412,'118.140.100.50',1),(413,'89.34.161.20',1),(414,'47.94.52.138',4),(415,'145.131.153.126',1),(416,'27.147.153.194',1),(417,'222.141.224.110',21),(418,'109.184.56.44',1),(419,'5.190.94.239',1),(420,'101.132.97.53',2),(421,'31.7.121.81',1),(422,'110.172.191.66',1),(423,'159.203.42.143',1),(424,'47.92.148.120',1),(425,'61.158.149.135',45),(426,'61.151.226.63',2),(427,'113.200.107.152',1),(428,'120.92.72.72',1),(429,'101.227.131.219',4),(430,'116.212.152.204',1),(431,'112.80.60.5',9),(432,'123.125.71.40',1),(433,'218.104.202.2',1),(434,'58.246.221.61',2),(435,'61.151.225.189',1),(436,'220.181.132.195',1),(437,'123.125.67.220',1),(438,'42.236.99.79',2),(439,'14.228.158.155',1),(440,'183.158.153.23',1),(441,'203.109.117.18',1),(442,'13.251.42.140',1),(443,'37.157.138.35',1),(444,'27.28.96.118',4),(445,'213.148.169.191',1),(446,'123.125.71.81',1),(447,'66.85.6.204',1),(448,'173.212.229.82',1),(449,'190.130.26.239',1),(450,'47.100.100.21',4),(451,'84.232.248.33',1),(452,'85.217.224.67',1),(453,'189.19.103.42',1),(454,'220.181.51.75',4),(455,'103.30.85.58',1),(456,'76.231.246.209',1),(457,'117.136.0.230',1),(458,'123.125.71.57',2),(459,'124.64.16.26',2),(460,'140.207.128.191',1),(461,'101.227.131.220',3),(462,'106.11.223.60',1),(463,'106.11.222.186',1),(464,'101.199.120.145',5),(465,'176.10.45.53',1),(466,'187.111.32.8',1),(467,'66.111.57.23',1),(468,'151.234.220.86',1),(469,'183.136.190.40',3),(470,'118.96.238.28',1),(471,'47.100.38.232',2),(472,'116.87.222.177',1),(473,'104.192.74.15',12),(474,'222.141.225.114',8),(475,'124.246.88.80',1),(476,'163.172.190.158',1),(477,'111.162.142.188',11),(478,'150.107.136.11',1),(479,'179.106.100.140',1),(480,'165.16.37.177',1),(481,'111.167.109.234',4),(482,'103.214.202.103',1),(483,'60.191.0.245',1),(484,'122.224.129.234',3),(485,'115.238.44.234',2),(486,'134.236.242.99',1),(487,'138.99.243.63',1),(488,'141.136.89.217',1),(489,'112.247.241.178',1),(490,'188.124.14.27',1),(491,'14.215.176.11',1),(492,'123.125.71.25',1),(493,'107.170.251.62',1),(494,'106.15.52.246',4),(495,'31.173.71.209',1),(496,'191.205.191.53',1),(497,'122.14.218.149',3),(498,'196.52.43.127',1),(499,'61.151.178.177',3),(500,'123.125.71.87',1),(501,'179.97.176.243',1),(502,'80.82.78.61',1),(503,'69.164.142.196',1),(504,'168.1.128.62',1),(505,'189.159.46.188',1),(506,'103.194.91.68',1),(507,'123.125.67.153',1),(508,'111.145.255.136',2),(509,'27.154.63.98',5),(510,'187.75.46.114',1),(511,'106.38.5.68',1),(512,'65.154.226.100',1),(513,'113.247.226.138',2),(514,'209.126.136.4',1),(515,'159.224.194.34',1),(516,'106.14.204.78',3),(517,'47.100.57.133',1),(518,'65.229.138.4',13),(519,'123.160.225.118',1),(520,'222.141.227.128',7),(521,'101.226.233.157',1),(522,'101.226.227.170',1),(523,'123.179.7.156',1),(524,'43.229.74.221',1),(525,'220.181.51.105',2),(526,'220.181.108.104',3),(527,'95.83.51.191',1),(528,'111.37.0.101',1),(529,'120.92.72.185',1),(530,'187.56.225.188',1),(531,'203.111.89.157',1),(532,'123.125.71.13',2),(533,'61.183.121.210',2),(534,'64.74.215.150',1),(535,'174.138.12.152',1),(536,'45.115.172.139',1),(537,'123.160.174.176',1),(538,'195.154.61.206',1),(539,'188.234.250.23',1),(540,'45.115.172.214',1),(541,'43.245.202.122',1),(542,'123.125.71.80',1),(543,'103.47.67.135',1),(544,'101.132.193.68',1),(545,'222.164.228.220',1),(546,'179.111.5.76',1),(547,'83.169.208.134',1),(548,'202.52.254.18',1),(549,'93.189.144.135',1),(550,'123.125.71.79',2),(551,'182.19.212.207',1),(552,'218.75.150.85',1),(553,'116.23.19.144',1),(554,'103.206.101.59',1),(555,'106.15.76.92',3),(556,'165.16.37.178',1),(557,'178.213.119.15',1),(558,'185.170.42.4',1),(559,'58.241.211.123',2),(560,'176.233.126.129',1),(561,'47.100.53.146',6),(562,'31.40.129.75',1),(563,'113.67.72.217',13),(564,'221.221.155.41',1),(565,'220.181.132.193',2),(566,'220.181.132.198',3),(567,'101.199.112.55',1),(568,'220.181.108.81',2),(569,'101.130.52.13',1),(570,'101.226.93.198',1),(571,'80.82.70.118',4),(572,'220.181.108.75',1),(573,'183.17.58.117',1),(574,'123.125.71.105',1),(575,'122.233.179.142',1),(576,'201.0.183.245',1),(577,'123.160.224.251',3),(578,'61.158.149.52',4),(579,'220.181.51.81',3),(580,'194.79.60.240',1),(581,'219.144.171.100',2),(582,'203.189.152.212',1),(583,'188.16.25.138',1),(584,'144.48.211.43',4),(585,'203.208.60.18',2),(586,'213.248.153.80',1),(587,'189.46.75.67',1),(588,'62.1.111.199',1),(589,'178.253.36.86',1),(590,'203.208.60.20',1),(591,'70.42.131.170',2),(592,'167.99.112.250',1),(593,'123.125.71.39',1),(594,'112.124.9.37',1),(595,'115.27.204.97',1),(596,'203.208.60.16',2),(597,'208.94.95.213',1),(598,'189.79.20.49',1),(599,'5.22.102.80',1),(600,'77.95.50.148',1),(601,'220.243.135.116',1),(602,'191.37.133.219',1),(603,'177.215.82.63',1),(604,'203.208.60.98',1),(605,'220.181.108.174',1),(606,'89.179.240.100',1),(607,'42.236.12.130',1),(608,'125.64.94.201',1),(609,'201.13.192.117',1),(610,'106.38.113.2',1),(611,'103.255.233.221',1),(612,'200.132.228.249',1),(613,'103.43.145.102',1),(614,'218.199.141.11',1),(615,'80.244.235.162',1),(616,'203.208.60.93',1),(617,'5.160.150.159',1),(618,'106.15.201.111',2),(619,'45.114.68.86',1),(620,'152.231.58.124',1),(621,'109.170.214.222',1),(622,'154.73.65.15',1),(623,'203.208.60.103',1),(624,'86.35.52.146',1),(625,'143.208.184.24',1),(626,'220.181.108.158',2),(627,'187.57.183.100',1),(628,'201.42.43.122',1),(629,'197.255.188.6',1),(630,'114.249.237.219',1),(631,'180.241.248.48',1),(632,'165.16.37.189',1),(633,'62.174.66.171',1),(634,'177.68.29.21',1),(635,'203.208.60.58',3),(636,'103.79.228.93',1),(637,'103.36.126.235',1),(638,'123.125.71.29',1),(639,'114.249.132.101',1),(640,'103.192.224.147',2),(641,'101.199.112.52',2),(642,'180.163.220.126',1),(643,'101.199.110.114',1),(644,'101.199.110.115',1),(645,'173.249.26.91',1),(646,'220.181.108.183',1),(647,'47.98.96.116',3),(648,'185.211.69.97',1),(649,'123.125.143.30',1),(650,'186.23.215.53',1),(651,'177.53.63.65',1),(652,'222.141.225.205',8),(653,'101.227.143.143',3),(654,'47.92.29.149',1),(655,'92.114.130.21',1),(656,'220.181.108.118',1),(657,'177.74.127.180',1),(658,'189.110.187.187',1),(659,'202.191.125.110',1),(660,'177.185.218.76',1),(661,'171.13.190.152',2),(662,'101.132.106.40',1),(663,'120.27.45.28',1),(664,'190.130.27.175',1),(665,'1.207.168.215',8),(666,'14.215.176.136',1),(667,'138.97.217.189',1),(668,'101.226.86.156',1),(669,'101.226.226.221',3),(670,'61.151.178.164',4),(671,'220.181.108.142',3),(672,'191.205.156.108',1),(673,'165.255.221.124',1),(674,'222.211.245.119',1),(675,'62.141.25.213',1),(676,'208.100.26.229',4),(677,'182.140.144.167',3),(678,'66.111.57.17',1),(679,'191.5.189.49',1),(680,'116.50.25.50',1),(681,'220.181.108.90',1),(682,'187.74.209.23',1),(683,'89.221.59.226',1),(684,'106.120.173.75',16),(685,'54.36.148.208',1),(686,'178.219.31.127',1),(687,'123.125.71.82',2),(688,'68.8.227.13',2),(689,'185.199.255.10',1),(690,'92.39.220.77',1),(691,'47.91.243.138',1),(692,'177.188.183.133',1),(693,'203.208.60.9',1),(694,'220.181.108.181',2),(695,'217.228.189.191',1),(696,'119.23.138.247',4),(697,'120.55.13.109',4),(698,'109.227.237.134',2),(699,'5.54.80.61',1),(700,'185.196.181.246',1),(701,'192.241.232.150',2),(702,'222.141.226.130',9),(703,'46.236.89.120',1),(704,'222.212.200.181',8),(705,'5.57.37.106',1),(706,'110.78.139.86',1),(707,'84.54.191.121',1),(708,'114.240.251.100',3),(709,'89.40.84.127',1),(710,'203.208.60.11',4),(711,'220.181.108.112',2),(712,'93.126.28.129',1),(713,'143.0.37.229',1),(714,'123.125.71.27',1),(715,'222.82.48.242',1),(716,'152.250.236.187',1),(717,'152.250.236.187',1),(718,'107.150.103.139',1),(719,'113.87.117.97',5),(720,'177.190.116.51',1),(721,'116.87.248.150',1),(722,'201.27.135.79',1),(723,'203.208.60.27',2),(724,'59.111.30.195',3),(725,'31.223.55.148',1),(726,'177.138.111.182',1),(727,'87.13.94.49',1),(728,'103.69.45.75',1),(729,'179.98.247.32',1),(730,'188.212.169.99',1),(731,'47.92.38.53',1),(732,'83.240.47.242',1),(733,'194.60.241.221',1),(734,'200.168.45.251',1),(735,'109.236.34.3',1),(736,'177.92.135.170',1),(737,'221.4.209.86',1),(738,'64.74.215.1',1),(739,'188.18.82.4',1),(740,'27.22.217.9',1),(741,'34.212.31.145',1),(742,'43.229.252.34',1),(743,'101.81.127.181',18),(744,'31.216.35.12',1),(745,'47.100.38.9',2),(746,'160.20.200.2',1),(747,'123.59.209.112',1),(748,'113.116.20.148',5),(749,'5.35.7.86',1),(750,'220.181.108.96',1),(751,'123.125.71.22',3),(752,'123.125.67.226',1),(753,'14.207.69.56',1),(754,'201.150.149.3',1),(755,'177.94.200.45',1),(756,'181.129.16.98',1),(757,'179.98.194.223',1),(758,'42.236.12.150',1),(759,'95.84.37.46',1),(760,'163.177.139.223',1),(761,'78.111.117.196',1),(762,'103.119.25.101',1),(763,'176.192.124.187',1),(764,'109.94.113.251',1),(765,'177.85.91.172',1),(766,'187.11.156.193',1),(767,'189.69.33.61',1),(768,'37.230.163.178',1),(769,'103.254.96.110',1),(770,'220.181.108.109',1),(771,'138.68.180.18',3),(772,'141.212.122.160',1),(773,'191.255.19.164',1),(774,'161.22.18.201',1),(775,'103.78.14.11',1),(776,'168.196.130.229',1),(777,'47.97.10.19',1),(778,'54.36.148.144',1),(779,'61.183.130.234',2),(780,'201.68.88.144',1),(781,'220.181.108.120',1),(782,'91.139.200.60',1),(783,'94.241.128.124',1),(784,'123.125.67.147',1),(785,'78.134.100.44',1),(786,'181.129.163.114',1),(787,'82.215.179.191',1),(788,'47.98.97.81',1),(789,'95.68.217.156',1),(790,'46.104.86.158',1),(791,'221.221.148.32',1),(792,'47.100.84.151',1),(793,'106.15.76.85',4),(794,'61.158.148.40',4),(795,'101.226.79.239',1),(796,'185.82.254.226',1),(797,'37.70.110.35',1),(798,'86.107.179.82',1),(799,'123.125.67.227',1),(800,'83.13.52.249',1),(801,'64.246.161.42',1),(802,'187.45.113.98',1),(803,'144.48.9.22',1),(804,'197.210.130.54',1),(805,'185.28.141.50',1),(806,'121.204.96.147',1),(807,'106.11.223.14',1),(808,'106.11.223.18',1),(809,'123.125.71.36',1),(810,'200.148.93.144',1),(811,'121.121.116.78',1),(812,'185.110.47.205',1),(813,'113.20.140.98',1),(814,'123.125.71.91',1),(815,'176.98.218.195',1),(816,'45.221.48.198',1),(817,'185.28.141.33',1),(818,'76.31.221.243',4),(819,'203.208.60.40',1),(820,'2.183.118.129',1),(821,'54.36.148.184',1),(822,'85.115.117.8',1),(823,'36.66.172.225',1),(824,'168.1.128.36',2),(825,'31.29.34.198',1),(826,'123.125.71.54',1),(827,'124.88.64.202',1),(828,'220.181.108.87',1),(829,'201.236.218.175',1),(830,'5.40.162.218',1),(831,'222.141.226.110',27),(832,'71.6.232.4',5),(833,'203.208.60.99',3),(834,'171.227.30.150',1),(835,'203.208.60.5',2),(836,'179.98.191.156',1),(837,'163.172.111.22',1),(838,'85.163.87.49',1),(839,'220.181.108.177',1),(840,'221.192.179.203',1),(841,'114.213.210.20',1),(842,'201.62.53.254',1),(843,'220.181.132.197',1),(844,'116.86.27.48',1),(845,'123.126.29.66',9),(846,'5.58.57.92',1),(847,'95.143.138.197',1),(848,'220.181.108.95',1),(849,'205.211.167.16',1),(850,'182.163.97.27',1),(851,'203.208.60.44',2),(852,'116.196.102.129',1),(853,'116.196.84.220',1),(854,'1.198.217.248',2),(855,'197.254.91.98',1),(856,'101.199.110.113',2),(857,'203.208.60.115',3),(858,'101.199.110.117',1),(859,'203.208.60.29',2),(860,'201.95.53.214',1),(861,'31.177.43.214',1),(862,'103.89.252.222',1),(863,'5.234.62.39',1),(864,'168.121.9.113',1),(865,'203.208.60.86',1),(866,'201.69.126.173',1),(867,'83.234.3.40',1),(868,'202.79.59.106',1),(869,'183.136.203.37',1),(870,'103.46.237.173',1),(871,'185.109.245.222',1),(872,'120.79.184.41',1),(873,'203.208.60.50',1),(874,'62.122.50.21',4),(875,'177.103.71.1',1),(876,'46.29.161.101',2),(877,'180.168.56.210',4),(878,'181.188.132.108',1),(879,'182.131.83.246',1),(880,'110.232.248.37',1),(881,'123.125.71.74',2),(882,'203.208.60.6',2),(883,'203.208.60.95',1),(884,'5.189.153.66',1),(885,'143.208.246.83',1),(886,'221.222.218.200',1),(887,'218.104.237.213',4),(888,'14.215.176.132',1),(889,'54.36.148.28',1),(890,'61.144.97.183',2),(891,'220.181.51.80',2),(892,'124.200.176.26',2),(893,'101.226.79.240',1),(894,'139.196.85.191',2),(895,'115.171.83.54',2),(896,'106.14.115.254',1),(897,'5.160.130.212',1),(898,'114.249.208.41',1),(899,'125.162.34.162',1),(900,'34.205.33.179',1),(901,'106.15.191.180',1),(902,'138.118.100.112',1),(903,'123.125.67.222',1),(904,'123.125.71.114',1),(905,'59.172.197.64',8),(906,'120.194.7.50',1),(907,'116.196.109.171',1),(908,'116.196.103.129',1),(909,'200.100.200.124',1),(910,'151.234.45.181',1),(911,'213.16.61.4',1),(912,'123.125.71.18',1),(913,'47.92.31.65',3),(914,'116.196.94.156',1),(915,'115.186.147.161',1),(916,'186.159.2.41',1),(917,'5.8.10.202',40),(918,'205.205.150.7',4),(919,'83.50.62.235',1),(920,'123.125.71.89',2),(921,'202.91.75.220',1),(922,'203.208.60.32',2),(923,'203.208.60.22',1),(924,'203.208.60.31',2),(925,'203.208.60.12',2),(926,'42.236.55.41',1),(927,'180.121.134.186',1),(928,'84.134.57.23',1),(929,'190.152.182.70',1),(930,'61.158.149.219',5),(931,'203.208.60.90',3),(932,'168.195.87.184',1),(933,'220.181.51.102',1),(934,'47.92.138.160',2),(935,'47.92.101.29',2),(936,'196.52.43.86',1),(937,'161.132.127.86',1),(938,'112.184.236.79',1),(939,'213.92.251.70',1),(940,'220.181.51.103',2),(941,'185.97.121.79',1),(942,'109.94.124.168',1),(943,'147.135.193.145',1),(944,'45.115.172.130',1),(945,'54.36.148.98',1),(946,'203.208.60.78',1),(947,'203.208.60.10',1),(948,'113.46.174.123',4),(949,'91.239.71.133',1),(950,'223.71.166.31',1),(951,'103.15.83.6',1),(952,'213.226.11.182',1),(953,'217.169.211.38',1),(954,'186.249.211.219',1),(955,'191.5.157.157',1),(956,'125.161.114.237',1),(957,'198.108.66.176',1),(958,'220.181.108.173',3),(959,'203.208.60.34',4),(960,'117.136.39.89',1),(961,'112.60.1.73',3),(962,'112.60.1.73',1),(963,'163.177.66.30',2),(964,'163.177.66.36',1),(965,'163.177.66.24',1),(966,'112.60.1.79',1),(967,'112.90.75.121',1),(968,'117.144.246.149',1),(969,'101.226.79.235',2),(970,'77.242.22.105',1),(971,'186.46.61.170',2),(972,'177.94.144.47',1),(973,'123.125.143.157',1),(974,'47.95.28.143',6),(975,'89.212.9.213',1),(976,'223.74.3.189',9),(977,'45.4.252.2',1),(978,'203.208.60.0',3),(979,'46.34.174.69',1),(980,'101.132.182.68',1),(981,'203.208.60.123',3),(982,'196.32.103.195',1),(983,'62.224.97.229',1),(984,'179.228.169.110',1),(985,'123.125.67.212',2),(986,'94.240.41.180',1),(987,'181.210.71.56',1),(988,'151.233.50.93',1),(989,'109.201.24.115',1),(990,'47.92.130.247',1),(991,'194.60.242.33',1),(992,'187.101.219.114',2),(993,'47.100.64.86',2),(994,'216.61.160.92',1),(995,'175.172.6.223',1),(996,'90.77.78.218',1),(997,'223.255.14.206',2),(998,'128.199.161.96',1),(999,'89.140.41.5',1),(1000,'101.199.112.50',3),(1001,'183.131.80.180',1),(1002,'222.141.225.76',3),(1003,'90.178.165.105',2),(1004,'139.162.108.53',1),(1005,'103.196.208.110',1),(1006,'189.69.161.31',1),(1007,'153.228.222.75',1),(1008,'114.229.253.131',10),(1009,'179.184.112.244',1),(1010,'189.46.3.81',1),(1011,'103.15.83.146',1),(1012,'187.116.82.24',1),(1013,'148.64.56.71',5),(1014,'87.205.99.127',1),(1015,'103.249.180.157',1),(1016,'2.182.152.238',1),(1017,'47.92.98.236',1),(1018,'180.247.128.37',1),(1019,'116.86.218.173',1),(1020,'45.32.89.195',1),(1021,'123.125.71.75',1),(1022,'110.77.172.213',1),(1023,'150.242.255.55',1),(1024,'60.191.23.61',1),(1025,'60.191.20.210',2),(1026,'180.241.222.142',1),(1027,'201.69.151.63',1),(1028,'202.169.225.74',1),(1029,'109.225.147.100',1),(1030,'201.150.149.55',1),(1031,'177.38.57.1',1),(1032,'116.212.152.128',1),(1033,'42.236.99.86',1),(1034,'220.181.108.89',1),(1035,'193.27.71.22',1),(1036,'18.194.38.94',2),(1037,'220.181.51.82',1),(1038,'81.198.208.95',1),(1039,'113.116.123.33',2),(1040,'47.100.51.203',2),(1041,'5.160.215.161',1),(1042,'49.156.39.202',1),(1043,'186.226.218.220',1),(1044,'101.199.112.54',1),(1045,'103.211.56.166',1),(1046,'178.32.58.135',1),(1047,'95.70.228.252',1),(1048,'109.110.174.57',1),(1049,'182.49.51.168',1),(1050,'113.134.95.189',1),(1051,'91.109.150.85',1),(1052,'109.237.231.18',1),(1053,'103.117.233.159',1),(1054,'119.123.124.129',2),(1055,'47.100.64.9',3),(1056,'220.181.108.178',1),(1057,'185.233.246.27',1),(1058,'62.219.14.94',2),(1059,'47.97.23.199',2),(1060,'217.29.212.69',1),(1061,'118.116.14.128',1),(1062,'223.74.3.185',6),(1063,'123.125.71.30',3),(1064,'223.196.67.1',1),(1065,'179.110.229.123',1),(1066,'139.255.6.234',1),(1067,'195.184.82.109',1),(1068,'139.224.116.230',2),(1069,'47.92.2.67',2),(1070,'190.116.42.10',1),(1071,'71.6.146.186',1),(1072,'54.36.149.13',1),(1073,'47.93.180.168',1),(1074,'122.247.152.107',1),(1075,'116.7.11.234',4),(1076,'203.90.129.69',2),(1077,'83.218.176.61',1),(1078,'196.45.160.15',1),(1079,'220.181.108.145',1),(1080,'101.199.110.109',2),(1081,'5.160.240.137',2),(1082,'110.139.172.225',1),(1083,'179.113.200.50',1),(1084,'223.73.115.205',2),(1085,'170.245.136.54',1),(1086,'111.197.244.194',1),(1087,'101.245.187.195',1),(1088,'220.181.132.194',1),(1089,'47.98.250.10',1),(1090,'210.209.93.167',1),(1091,'188.253.101.150',1),(1092,'222.190.132.133',5),(1093,'101.226.79.241',1),(1094,'101.226.86.154',1),(1095,'101.199.112.53',4),(1096,'125.33.125.99',1),(1097,'208.96.133.194',1),(1098,'220.181.108.119',2),(1099,'194.44.36.66',1),(1100,'201.218.142.188',1),(1101,'189.68.194.168',1),(1102,'89.254.130.26',1),(1103,'139.162.119.197',6),(1104,'177.45.204.117',1),(1105,'89.175.20.43',1),(1106,'217.29.213.237',1),(1107,'222.141.225.87',10),(1108,'91.230.43.31',1),(1109,'220.181.108.91',2),(1110,'189.78.205.230',1),(1111,'202.74.241.220',1),(1112,'1.202.83.70',1),(1113,'106.19.173.79',2),(1114,'47.92.105.73',2),(1115,'168.181.164.70',1),(1116,'183.160.77.194',1),(1117,'103.83.15.34',1),(1118,'171.91.157.247',1),(1119,'123.125.71.15',3),(1120,'46.34.170.84',1),(1121,'191.17.55.43',1),(1122,'185.172.208.22',1),(1123,'117.136.88.81',3),(1124,'120.92.72.197',1),(1125,'61.151.226.67',2),(1126,'185.8.50.59',1),(1127,'201.43.130.52',1),(1128,'103.4.67.181',1),(1129,'139.170.69.149',1),(1130,'107.170.205.162',1),(1131,'117.21.191.232',1),(1132,'89.210.93.230',1),(1133,'220.181.108.149',1),(1134,'106.11.154.232',1),(1135,'179.228.59.29',1),(1136,'90.225.50.116',1),(1137,'89.149.63.71',1),(1138,'201.150.149.0',1),(1139,'200.164.236.34',1),(1140,'45.234.222.92',1),(1141,'177.200.85.134',1),(1142,'101.226.233.147',1),(1143,'220.181.108.171',1),(1144,'119.137.3.76',2),(1145,'54.36.149.21',1),(1146,'191.255.44.64',1),(1147,'42.236.101.214',3),(1148,'122.192.15.234',10),(1149,'45.4.252.4',2),(1150,'121.69.81.166',1),(1151,'182.148.107.206',1),(1152,'117.136.86.46',6),(1153,'120.204.17.72',3),(1154,'148.64.56.76',2),(1155,'35.180.98.5',1),(1156,'88.206.79.23',1),(1157,'61.151.178.175',1),(1158,'101.226.113.53',1),(1159,'87.158.150.53',1),(1160,'210.13.117.136',1),(1161,'118.179.220.74',1),(1162,'124.23.133.49',1),(1163,'125.70.14.165',1),(1164,'203.208.60.30',1),(1165,'124.23.134.138',1),(1166,'58.62.33.72',2),(1167,'203.208.60.127',1),(1168,'203.80.191.10',1),(1169,'120.230.111.249',1),(1170,'190.94.140.209',1),(1171,'116.196.101.177',1),(1172,'203.208.60.81',1),(1173,'116.196.103.149',1),(1174,'116.196.96.180',1),(1175,'54.36.149.35',1),(1176,'116.196.103.175',1),(1177,'219.142.99.13',2),(1178,'189.46.160.72',1),(1179,'113.99.117.98',2),(1180,'111.199.190.149',3),(1181,'203.208.60.37',2),(1182,'113.109.82.80',1),(1183,'83.239.58.190',1),(1184,'139.196.78.97',2),(1185,'123.125.71.103',2),(1186,'101.51.228.207',1),(1187,'78.61.204.9',1),(1188,'187.94.113.7',1),(1189,'47.92.141.208',2),(1190,'47.100.130.114',3),(1191,'187.102.58.32',1),(1192,'179.110.69.174',1),(1193,'93.170.114.251',1),(1194,'99.227.180.10',1),(1195,'107.170.212.87',1),(1196,'213.142.146.154',1),(1197,'179.113.123.123',2),(1198,'211.143.198.208',1),(1199,'185.55.169.246',1),(1200,'211.143.198.232',1),(1201,'123.125.71.96',1),(1202,'124.64.16.21',9),(1203,'141.212.122.81',1),(1204,'101.226.79.232',1),(1205,'61.129.6.151',3),(1206,'42.116.59.168',1),(1207,'123.125.67.152',1),(1208,'117.152.90.18',1),(1209,'81.16.248.47',1),(1210,'180.153.219.15',1),(1211,'101.226.79.244',1),(1212,'185.252.145.23',1),(1213,'106.14.215.243',1),(1214,'81.201.62.46',1),(1215,'47.92.101.189',1),(1216,'101.90.252.109',1),(1217,'123.115.13.185',6),(1218,'113.104.164.145',7),(1219,'177.200.16.10',1),(1220,'113.87.40.35',4),(1221,'10.0.250.1',2),(1222,'58.152.113.184',1),(1223,'123.125.71.85',3),(1224,'101.255.93.26',1),(1225,'111.202.240.16',2),(1226,'77.245.218.200',1),(1227,'170.84.78.86',1),(1228,'170.239.186.12',1),(1229,'116.196.103.166',1),(1230,'36.81.80.165',1),(1231,'103.68.43.190',1),(1232,'129.205.200.88',1),(1233,'91.203.36.102',1),(1234,'185.214.45.119',1),(1235,'183.0.143.226',1),(1236,'61.140.199.168',1),(1237,'151.239.104.119',1),(1238,'180.178.98.102',1),(1239,'31.217.210.77',1),(1240,'201.221.131.90',1),(1241,'217.60.129.8',1),(1242,'107.50.220.118',1),(1243,'201.26.44.127',1),(1244,'114.224.29.60',1),(1245,'179.110.171.35',1),(1246,'87.244.49.234',1),(1247,'220.181.51.107',1),(1248,'201.13.177.91',1),(1249,'42.236.54.22',1),(1250,'117.136.100.41',4),(1251,'101.89.239.216',2),(1252,'120.204.17.70',1),(1253,'182.49.51.33',1),(1254,'177.139.73.165',1),(1255,'107.170.210.183',1),(1256,'61.135.169.82',3),(1257,'186.188.61.24',1),(1258,'187.74.170.143',1),(1259,'222.72.44.130',1),(1260,'112.91.84.69',8),(1261,'123.125.71.12',1),(1262,'10.32.9.175',1),(1263,'78.185.149.229',1),(1264,'112.125.92.74',2),(1265,'117.136.79.247',8),(1266,'61.129.6.147',3),(1267,'165.16.37.179',2),(1268,'81.213.156.106',1),(1269,'220.181.108.116',2),(1270,'89.249.88.158',1),(1271,'187.34.16.237',1),(1272,'79.107.160.170',1),(1273,'83.219.136.143',1),(1274,'190.94.144.96',1),(1275,'185.108.19.199',1),(1276,'187.34.218.42',1),(1277,'209.17.96.234',1),(1278,'178.156.82.237',1),(1279,'196.52.43.62',1),(1280,'220.114.239.128',1),(1281,'60.205.189.14',1),(1282,'66.240.236.119',1),(1283,'110.184.224.154',2),(1284,'65.184.228.71',1),(1285,'83.239.165.5',1),(1286,'121.100.23.146',1),(1287,'54.36.148.197',1),(1288,'123.125.71.90',1),(1289,'120.42.29.23',11),(1290,'54.152.134.137',1),(1291,'138.204.134.155',1),(1292,'46.245.130.5',1),(1293,'200.71.94.3',1),(1294,'179.106.101.248',1),(1295,'46.18.207.49',1),(1296,'104.128.144.131',1),(1297,'106.14.187.159',1),(1298,'150.107.137.241',1),(1299,'92.15.42.64',1),(1300,'169.50.160.230',1),(1301,'177.128.122.69',1),(1302,'154.118.19.5',2),(1303,'120.92.72.170',1),(1304,'27.38.249.9',3),(1305,'123.125.143.23',1),(1306,'14.215.176.134',1),(1307,'139.59.85.24',3),(1308,'41.75.77.68',1),(1309,'37.49.231.38',1),(1310,'106.75.50.37',1),(1311,'220.181.108.170',1),(1312,'91.246.16.54',1),(1313,'180.153.236.157',1),(1314,'171.88.29.243',1),(1315,'79.143.121.45',1),(1316,'172.103.164.147',1),(1317,'47.92.115.203',2),(1318,'47.97.167.161',2),(1319,'5.234.171.98',1),(1320,'61.144.96.61',2),(1321,'61.129.8.179',3),(1322,'36.68.14.75',1),(1323,'37.230.163.130',1),(1324,'113.111.202.62',2),(1325,'61.151.226.64',1),(1326,'113.87.161.11',1),(1327,'103.229.84.66',1),(1328,'117.102.226.242',1),(1329,'222.141.227.60',3),(1330,'179.111.126.128',1),(1331,'220.115.174.103',2),(1332,'220.181.132.199',2),(1333,'14.215.176.13',1),(1334,'138.185.166.71',1),(1335,'39.104.80.88',4),(1336,'39.104.95.77',2),(1337,'182.75.71.114',1),(1338,'191.205.134.37',2),(1339,'113.212.122.214',1),(1340,'191.17.149.238',1),(1341,'197.245.80.164',1),(1342,'191.255.99.147',1),(1343,'189.18.184.239',1),(1344,'47.92.137.155',1),(1345,'185.129.191.220',1),(1346,'181.211.100.54',1),(1347,'31.201.233.11',1),(1348,'177.9.32.216',1),(1349,'103.73.183.245',1),(1350,'181.129.18.122',1),(1351,'190.94.136.227',1),(1352,'107.170.211.208',1),(1353,'219.143.128.78',1),(1354,'113.87.119.55',1),(1355,'118.122.93.15',1),(1356,'54.91.65.122',1),(1357,'36.110.147.199',1),(1358,'194.126.182.82',1),(1359,'186.251.208.131',1),(1360,'47.97.220.124',1),(1361,'194.213.212.84',1),(1362,'124.200.109.74',2),(1363,'128.199.201.58',1),(1364,'103.63.24.51',1),(1365,'123.125.125.249',2),(1366,'119.136.152.6',4),(1367,'113.116.114.112',1),(1368,'123.125.71.60',2),(1369,'49.74.124.16',1),(1370,'14.20.39.99',3),(1371,'42.236.54.2',1),(1372,'125.88.24.90',11),(1373,'61.129.8.200',1),(1374,'58.247.206.141',1),(1375,'101.227.139.173',3),(1376,'220.114.194.6',1),(1377,'203.208.60.100',2),(1378,'185.83.185.59',2),(1379,'177.94.154.93',1),(1380,'163.125.218.74',1),(1381,'120.92.72.199',1),(1382,'45.71.228.3',2),(1383,'103.244.205.110',1),(1384,'177.9.57.184',1),(1385,'220.181.108.100',1),(1386,'138.118.103.77',1),(1387,'203.208.60.62',1),(1388,'191.100.10.116',1),(1389,'79.133.200.146',1),(1390,'191.37.130.54',1),(1391,'185.107.83.2',3),(1392,'36.66.83.139',1),(1393,'36.67.132.153',1),(1394,'187.74.53.123',2),(1395,'113.89.7.34',2),(1396,'116.0.4.184',1),(1397,'54.93.52.56',1),(1398,'14.120.33.239',1),(1399,'203.208.60.114',1),(1400,'123.125.143.147',1),(1401,'103.9.191.58',1),(1402,'187.57.66.229',1),(1403,'103.60.180.46',1),(1404,'160.20.200.3',1),(1405,'212.33.205.173',1),(1406,'203.208.60.125',1),(1407,'12.131.145.77',1),(1408,'203.208.60.91',3),(1409,'92.113.180.5',1),(1410,'196.52.43.125',1),(1411,'109.235.58.226',2),(1412,'103.61.195.24',1),(1413,'223.88.10.212',1),(1414,'209.17.97.26',1),(1415,'203.208.60.7',1),(1416,'125.84.190.221',1),(1417,'120.92.72.116',1),(1418,'122.192.15.119',12),(1419,'177.40.188.155',1),(1420,'42.122.96.144',2),(1421,'42.236.10.78',4),(1422,'180.163.220.97',1),(1423,'112.28.170.47',1),(1424,'141.212.122.48',1),(1425,'60.217.72.12',1),(1426,'168.0.83.46',1),(1427,'218.30.103.25',1),(1428,'193.106.166.74',1),(1429,'117.136.24.180',1),(1430,'117.136.24.160',1),(1431,'220.181.108.78',1),(1432,'47.98.37.19',2),(1433,'190.94.148.252',1),(1434,'178.44.165.96',1),(1435,'168.196.130.244',1),(1436,'191.242.245.165',2),(1437,'202.149.90.217',1),(1438,'180.177.241.97',1),(1439,'36.81.20.140',1),(1440,'186.225.180.21',1),(1441,'62.174.66.64',1),(1442,'180.168.117.34',1),(1443,'43.224.47.99',2),(1444,'61.129.6.251',4),(1445,'123.125.71.72',1),(1446,'42.236.99.130',3),(1447,'47.199.92.7',1),(1448,'203.208.60.70',2),(1449,'203.208.60.68',4),(1450,'223.74.78.202',1),(1451,'101.226.114.193',2),(1452,'114.242.249.17',1),(1453,'168.195.210.42',1),(1454,'122.227.219.162',1),(1455,'43.229.252.228',1),(1456,'222.210.169.106',1),(1457,'222.210.169.104',3),(1458,'116.196.113.53',1),(1459,'116.196.111.116',1),(1460,'116.196.111.182',1),(1461,'119.42.79.34',1),(1462,'159.146.64.209',1),(1463,'222.200.117.20',1),(1464,'192.99.44.141',7),(1465,'201.69.98.163',1),(1466,'220.181.108.92',1),(1467,'58.248.169.140',1),(1468,'117.60.207.4',2),(1469,'190.182.69.178',1),(1470,'117.158.200.38',85),(1471,'101.91.60.106',3),(1472,'101.91.60.108',2),(1473,'61.129.6.159',3),(1474,'101.89.239.238',1),(1475,'95.156.251.10',1),(1476,'62.211.207.93',1),(1477,'222.178.10.230',1),(1478,'170.84.134.34',1),(1479,'190.238.184.164',1),(1480,'101.199.108.118',1),(1481,'80.245.114.191',1),(1482,'123.125.71.17',2),(1483,'31.200.192.106',1),(1484,'191.23.41.85',2),(1485,'69.196.165.132',1),(1486,'47.92.39.202',1),(1487,'190.12.78.246',1),(1488,'183.90.100.105',1),(1489,'13.250.238.163',1),(1490,'45.237.156.9',1),(1491,'187.102.61.195',1),(1492,'91.109.199.102',1),(1493,'181.175.168.7',1),(1494,'111.53.115.116',4),(1495,'107.170.211.27',2),(1496,'202.61.53.54',1),(1497,'113.57.246.248',1),(1498,'150.107.137.166',1),(1499,'87.175.244.59',1),(1500,'47.97.204.168',3),(1501,'47.92.126.167',1),(1502,'91.192.32.164',1),(1503,'36.73.76.152',1),(1504,'60.191.0.242',1),(1505,'191.23.107.215',1),(1506,'84.22.145.36',1),(1507,'37.49.231.151',1),(1508,'220.181.108.143',1),(1509,'118.247.135.204',2),(1510,'78.84.108.99',1),(1511,'223.74.3.59',2),(1512,'2.181.5.196',1),(1513,'18.184.150.174',1),(1514,'222.249.131.26',1),(1515,'135.23.221.142',2),(1516,'61.129.6.203',2),(1517,'134.196.91.184',1),(1518,'213.59.153.19',1),(1519,'85.117.56.68',1),(1520,'171.214.128.155',5),(1521,'27.38.140.248',1),(1522,'197.164.115.179',1),(1523,'27.189.201.33',1),(1524,'220.181.108.162',1),(1525,'213.137.248.236',1),(1526,'175.196.7.28',1),(1527,'187.230.8.163',1),(1528,'223.255.14.236',1),(1529,'134.35.162.235',1),(1530,'219.140.122.142',1),(1531,'218.18.91.131',6),(1532,'112.17.243.167',4),(1533,'178.154.171.83',2),(1534,'206.189.63.85',1),(1535,'101.132.177.30',2),(1536,'106.15.176.145',1),(1537,'54.254.185.183',1),(1538,'180.153.236.189',1),(1539,'77.45.86.181',1),(1540,'115.238.132.61',1),(1541,'120.39.53.97',1),(1542,'79.132.3.184',2),(1543,'18.207.3.148',1),(1544,'88.250.40.133',1),(1545,'106.11.159.72',1),(1546,'18.185.179.59',1),(1547,'125.88.24.88',1),(1548,'171.212.121.184',1),(1549,'124.127.250.162',12),(1550,'210.21.236.134',1),(1551,'209.17.96.74',1),(1552,'187.56.6.37',1),(1553,'101.199.110.108',1),(1554,'58.64.185.220',1),(1555,'220.243.136.72',1),(1556,'101.199.112.51',1),(1557,'194.242.98.181',1),(1558,'220.181.108.186',1),(1559,'202.162.195.206',1),(1560,'220.181.51.110',1),(1561,'89.240.55.170',1),(1562,'83.237.46.154',1),(1563,'103.90.205.83',1),(1564,'189.1.11.202',1),(1565,'178.208.141.237',1),(1566,'178.170.157.229',1),(1567,'18.221.90.22',1),(1568,'96.3.171.202',1),(1569,'112.95.226.36',2),(1570,'112.95.226.37',1),(1571,'101.244.198.182',5),(1572,'73.164.105.200',1),(1573,'54.169.227.119',2),(1574,'47.97.192.46',1),(1575,'58.60.57.14',4),(1576,'101.89.239.120',1),(1577,'61.151.178.163',5),(1578,'106.120.188.139',1),(1579,'112.28.169.66',1),(1580,'111.197.73.174',1),(1581,'64.246.187.42',1),(1582,'34.221.232.114',1),(1583,'220.181.108.77',2),(1584,'91.108.208.110',1),(1585,'208.94.91.42',1),(1586,'163.125.121.18',1),(1587,'177.126.91.6',1),(1588,'203.208.60.3',2),(1589,'36.63.253.151',19),(1590,'138.197.104.177',1),(1591,'101.132.117.180',1),(1592,'177.74.154.14',1),(1593,'139.207.60.77',1),(1594,'58.247.206.156',1),(1595,'194.135.75.74',1),(1596,'220.181.108.175',1),(1597,'101.199.110.107',1),(1598,'177.188.227.229',1),(1599,'47.92.146.203',1),(1600,'49.74.246.153',1),(1601,'179.97.6.111',1),(1602,'87.122.74.183',1),(1603,'185.145.147.62',1),(1604,'203.208.60.104',2),(1605,'85.105.85.78',1),(1606,'106.14.114.244',3),(1607,'170.0.85.9',1),(1608,'123.125.71.69',1),(1609,'42.236.102.23',1),(1610,'175.188.159.141',1),(1611,'47.97.120.5',1),(1612,'190.46.81.31',1),(1613,'113.143.183.200',1),(1614,'220.181.108.114',1),(1615,'179.110.171.235',1),(1616,'103.113.107.108',1),(1617,'190.94.140.195',1),(1618,'201.184.163.26',1),(1619,'34.201.219.177',1),(1620,'119.90.34.135',1),(1621,'187.110.208.24',1),(1622,'123.125.71.49',1),(1623,'103.77.49.87',1),(1624,'61.158.147.219',1),(1625,'128.201.207.198',1),(1626,'117.158.222.124',64),(1627,'101.89.239.230',2),(1628,'61.151.207.141',1),(1629,'201.93.248.139',1),(1630,'37.122.85.114',1),(1631,'59.111.29.6',1),(1632,'95.103.223.36',1),(1633,'109.170.45.50',1),(1634,'103.25.138.229',1),(1635,'188.38.14.78',1),(1636,'103.254.56.227',1),(1637,'89.186.24.158',1),(1638,'191.100.10.94',1),(1639,'220.181.108.156',2),(1640,'120.78.231.236',4),(1641,'185.164.41.172',1),(1642,'88.148.41.96',1),(1643,'79.54.139.51',1),(1644,'220.89.42.97',1),(1645,'171.83.47.23',2),(1646,'101.91.62.89',2),(1647,'197.232.51.149',1),(1648,'165.227.190.231',1),(1649,'81.213.151.92',1),(1650,'220.181.51.77',1),(1651,'83.148.238.122',1),(1652,'117.136.0.131',3),(1653,'101.81.114.33',1),(1654,'220.231.133.105',1),(1655,'47.92.125.35',2),(1656,'223.255.21.13',2),(1657,'43.245.218.199',1),(1658,'58.246.143.128',7),(1659,'101.227.139.172',1),(1660,'180.159.64.165',3),(1661,'121.33.144.233',3),(1662,'42.51.178.141',2),(1663,'218.17.214.98',4),(1664,'180.163.220.66',1),(1665,'201.77.140.245',1),(1666,'103.206.225.66',1),(1667,'61.158.148.84',2),(1668,'213.16.35.186',1),(1669,'103.78.132.4',1),(1670,'123.160.224.118',7),(1671,'218.77.108.228',6),(1672,'209.97.163.197',1),(1673,'101.199.110.110',1),(1674,'159.89.173.197',1),(1675,'77.43.131.142',1),(1676,'5.2.241.253',1),(1677,'113.208.117.131',2),(1678,'182.33.159.132',1),(1679,'120.92.72.99',2),(1680,'43.240.100.13',1),(1681,'165.227.180.73',1),(1682,'36.24.146.96',2),(1683,'101.89.29.86',1),(1684,'111.207.196.153',9),(1685,'103.212.90.134',1),(1686,'123.118.82.203',2),(1687,'18.196.55.141',1),(1688,'11.2.48.170',1),(1689,'47.96.254.10',1),(1690,'220.243.136.199',1),(1691,'5.236.208.145',1),(1692,'220.181.124.6',1),(1693,'114.67.236.212',1),(1694,'114.67.232.103',1),(1695,'176.218.208.176',1),(1696,'34.203.75.180',4),(1697,'81.214.125.136',1),(1698,'193.231.113.221',1),(1699,'183.205.1.38',1),(1700,'209.17.96.242',1),(1701,'79.132.203.241',1),(1702,'118.113.89.71',2),(1703,'11.2.48.1',1),(1704,'93.78.121.170',1),(1705,'178.196.178.200',1),(1706,'113.78.12.107',4),(1707,'13.250.33.150',1),(1708,'103.46.236.110',1),(1709,'91.242.148.51',1),(1710,'113.104.193.58',1),(1711,'106.14.189.11',1),(1712,'80.13.123.225',1),(1713,'45.4.252.3',1),(1714,'168.195.0.163',1),(1715,'187.109.231.46',1),(1716,'14.215.176.4',1),(1717,'106.16.68.5',11),(1718,'94.19.142.198',1),(1719,'116.30.220.67',1),(1720,'138.0.178.8',1),(1721,'101.199.110.111',2),(1722,'154.70.121.195',1),(1723,'78.187.220.150',1),(1724,'41.72.203.82',1),(1725,'59.109.158.45',4),(1726,'88.236.165.210',1),(1727,'61.158.149.128',1),(1728,'124.193.128.166',2),(1729,'96.90.251.222',1),(1730,'139.214.246.87',1),(1731,'120.36.255.146',7),(1732,'201.1.145.110',1),(1733,'187.101.230.152',1),(1734,'18.191.227.117',1),(1735,'190.94.141.172',1),(1736,'81.215.187.66',1),(1737,'123.235.137.10',3),(1738,'106.11.222.188',1),(1739,'106.11.222.131',1),(1740,'123.125.71.117',2),(1741,'47.97.216.157',1),(1742,'54.255.246.148',2),(1743,'78.185.135.19',1),(1744,'93.117.9.92',1),(1745,'47.97.16.76',1),(1746,'210.64.188.137',1),(1747,'106.14.104.214',1),(1748,'41.138.208.85',1),(1749,'196.52.43.131',1),(1750,'61.9.33.194',1),(1751,'68.151.85.155',1),(1752,'165.16.42.29',1),(1753,'47.74.137.81',1),(1754,'201.49.232.191',1),(1755,'165.255.174.226',1),(1756,'212.83.172.147',2),(1757,'42.93.244.130',1),(1758,'80.216.146.181',1),(1759,'27.38.37.36',1),(1760,'182.142.52.155',2),(1761,'61.151.178.174',1),(1762,'31.223.88.208',1),(1763,'47.92.98.215',1),(1764,'77.95.195.19',1),(1765,'77.79.191.32',1),(1766,'113.234.169.144',13),(1767,'112.53.148.34',9),(1768,'111.198.24.66',2),(1769,'197.101.36.16',1),(1770,'94.71.186.45',1),(1771,'42.236.10.84',3),(1772,'113.67.107.63',1),(1773,'151.234.174.136',1),(1774,'178.93.14.99',1),(1775,'123.125.71.34',1),(1776,'58.240.228.66',1),(1777,'5.143.67.180',1),(1778,'43.224.47.150',2),(1779,'180.163.220.4',5),(1780,'79.143.121.128',1),(1781,'112.64.68.144',4),(1782,'101.89.29.94',1),(1783,'101.227.139.171',1),(1784,'89.25.247.53',1),(1785,'114.67.232.67',1),(1786,'46.152.146.167',1),(1787,'114.67.232.65',1),(1788,'2.187.233.21',1),(1789,'37.32.47.252',1),(1790,'211.161.244.87',1),(1791,'185.94.88.22',1),(1792,'118.34.4.202',1),(1793,'207.35.72.98',3),(1794,'123.125.71.24',1),(1795,'138.255.148.42',2),(1796,'46.17.43.187',1),(1797,'106.11.153.186',1),(1798,'222.82.62.159',1),(1799,'178.17.21.95',1),(1800,'120.239.67.22',1),(1801,'106.15.186.63',2),(1802,'220.181.108.185',1),(1803,'46.252.34.213',1),(1804,'36.67.4.167',1),(1805,'58.182.217.180',1),(1806,'200.1.200.181',1),(1807,'223.88.10.237',1),(1808,'106.121.128.234',1),(1809,'183.2.216.189',1),(1810,'170.79.89.62',1),(1811,'103.206.225.50',1),(1812,'101.132.98.159',3),(1813,'106.109.115.41',4),(1814,'83.144.110.2',1),(1815,'5.202.87.1',1),(1816,'111.175.50.137',1),(1817,'221.221.150.70',2),(1818,'170.238.115.133',1),(1819,'221.221.149.151',1),(1820,'36.82.212.226',1),(1821,'119.123.65.123',1),(1822,'116.231.15.122',1),(1823,'138.185.164.162',1),(1824,'176.218.243.149',1),(1825,'101.199.112.45',1),(1826,'2.187.161.195',1),(1827,'139.214.246.89',1),(1828,'106.91.211.31',1),(1829,'203.128.94.183',1),(1830,'103.231.146.242',2),(1831,'87.229.73.207',1),(1832,'61.35.57.98',1),(1833,'38.100.21.78',5),(1834,'168.235.93.142',2),(1835,'220.181.108.80',1),(1836,'89.248.174.55',1),(1837,'177.106.12.49',1),(1838,'42.200.128.48',1),(1839,'106.15.229.102',2),(1840,'59.173.198.221',1),(1841,'59.173.198.223',1),(1842,'107.170.211.241',1),(1843,'120.78.225.124',1),(1844,'71.6.167.142',1),(1845,'112.26.6.98',1),(1846,'93.119.113.201',1),(1847,'204.44.65.4',3),(1848,'220.181.108.94',2),(1849,'138.122.77.246',1),(1850,'61.148.244.219',3),(1851,'190.245.81.217',1),(1852,'183.233.89.222',4),(1853,'180.251.243.80',1),(1854,'119.179.55.126',1),(1855,'189.38.137.100',1),(1856,'14.152.64.153',1),(1857,'113.57.167.242',3),(1858,'62.205.213.118',1),(1859,'42.94.32.117',4),(1860,'60.190.23.50',1),(1861,'47.100.124.106',1),(1862,'185.111.254.17',1),(1863,'202.173.11.248',2),(1864,'86.60.185.131',1),(1865,'117.107.163.226',7),(1866,'106.109.122.36',6),(1867,'39.155.192.178',2),(1868,'196.52.43.59',1),(1869,'218.76.35.77',2),(1870,'218.30.116.7',2),(1871,'209.17.96.178',1),(1872,'123.125.71.88',1),(1873,'122.204.142.169',1),(1874,'202.105.145.59',4),(1875,'210.4.69.138',1),(1876,'201.219.203.93',1),(1877,'180.163.220.68',4),(1878,'202.180.54.51',1),(1879,'43.242.38.181',1),(1880,'185.65.55.15',1),(1881,'112.47.17.94',2),(1882,'155.246.202.73',1),(1883,'185.56.0.59',1),(1884,'121.52.138.98',1),(1885,'125.88.24.190',1),(1886,'125.88.24.142',5),(1887,'94.102.49.193',1),(1888,'54.210.75.94',1),(1889,'82.114.95.178',1),(1890,'207.46.13.121',1),(1891,'124.41.213.116',1),(1892,'203.83.182.35',1),(1893,'177.139.234.139',1),(1894,'177.139.234.139',1),(1895,'177.139.234.139',1),(1896,'101.132.177.14',2),(1897,'62.170.2.205',1),(1898,'203.128.80.181',1),(1899,'167.249.1.154',1),(1900,'178.253.42.209',1),(1901,'129.110.241.80',1),(1902,'58.19.92.1',1),(1903,'179.127.117.251',1),(1904,'43.227.135.203',1),(1905,'177.125.110.228',1),(1906,'178.159.237.109',1),(1907,'221.219.216.77',1),(1908,'122.233.42.79',12),(1909,'101.89.29.78',1),(1910,'117.158.222.125',112),(1911,'58.246.221.162',1),(1912,'61.158.148.66',2),(1913,'101.91.62.99',1),(1914,'217.112.129.45',1),(1915,'189.18.154.193',1),(1916,'93.110.196.110',1),(1917,'24.243.226.123',1),(1918,'2.181.20.152',1),(1919,'223.104.63.27',1),(1920,'3.120.41.12',1),(1921,'183.142.105.105',3),(1922,'210.56.2.171',1),(1923,'42.236.10.92',4),(1924,'220.181.108.168',1),(1925,'2.87.3.120',1),(1926,'115.192.86.162',1),(1927,'121.15.151.179',1),(1928,'101.89.29.97',2),(1929,'210.48.203.42',1),(1930,'202.142.146.51',1),(1931,'203.177.13.122',1),(1932,'106.11.152.185',1),(1933,'193.104.208.200',1),(1934,'41.216.166.54',1),(1935,'220.181.108.161',1),(1936,'187.145.8.75',1),(1937,'87.249.18.242',1),(1938,'123.125.67.144',1),(1939,'169.50.165.19',1),(1940,'47.92.155.0',1),(1941,'117.86.10.217',1),(1942,'221.158.56.31',1),(1943,'110.188.95.130',4),(1944,'103.197.105.90',1),(1945,'110.87.122.33',3),(1946,'36.72.217.238',1),(1947,'180.153.236.11',1),(1948,'106.11.157.176',1),(1949,'118.42.93.27',1),(1950,'177.105.236.141',1),(1951,'177.188.233.232',1),(1952,'104.192.74.42',12),(1953,'200.29.19.51',1),(1954,'138.255.182.106',1),(1955,'2.181.18.96',1),(1956,'123.125.71.70',2),(1957,'185.63.14.254',1),(1958,'211.137.2.3',1),(1959,'101.254.230.157',1),(1960,'197.245.56.36',1),(1961,'58.16.228.236',1),(1962,'177.11.140.145',1),(1963,'60.28.133.115',7),(1964,'180.163.220.62',1),(1965,'223.104.177.114',1),(1966,'151.239.83.129',1),(1967,'98.143.148.135',1),(1968,'47.98.62.203',2),(1969,'195.154.36.109',1),(1970,'107.170.203.131',1),(1971,'203.208.60.74',1),(1972,'203.208.60.49',3),(1973,'203.208.60.26',1),(1974,'191.7.218.94',1),(1975,'143.255.3.37',1),(1976,'80.245.185.151',1),(1977,'5.62.47.245',2),(1978,'113.88.108.170',1),(1979,'113.89.188.131',4),(1980,'123.1.154.214',1),(1981,'100.35.197.111',4),(1982,'61.149.20.179',4),(1983,'218.244.57.126',1),(1984,'54.191.69.5',1),(1985,'101.89.239.232',3),(1986,'179.99.196.97',1),(1987,'113.58.167.113',1),(1988,'79.150.233.55',1),(1989,'95.82.213.32',1),(1990,'218.197.153.26',10),(1991,'106.39.152.43',1),(1992,'213.6.227.126',1),(1993,'135.245.48.76',1),(1994,'197.245.187.64',1),(1995,'125.88.24.139',1),(1996,'27.72.230.224',1),(1997,'103.109.2.135',1),(1998,'200.192.148.3',1),(1999,'118.179.205.122',1),(2000,'54.36.149.99',1),(2001,'116.196.121.118',1),(2002,'62.217.133.90',1),(2003,'45.115.218.100',1),(2004,'117.25.139.90',1),(2005,'210.22.245.226',1),(2006,'185.100.87.190',4),(2007,'180.153.236.149',1),(2008,'218.75.37.19',1),(2009,'42.91.133.137',1),(2010,'218.186.211.120',1),(2011,'180.163.220.3',1),(2012,'198.108.66.208',1),(2013,'41.45.6.61',1),(2014,'106.120.173.118',1),(2015,'91.207.172.194',1),(2016,'94.153.162.94',1),(2017,'123.125.71.56',1),(2018,'112.47.16.72',2),(2019,'189.68.63.119',1),(2020,'42.236.10.124',3),(2021,'52.53.195.176',1),(2022,'120.92.72.88',1),(2023,'61.129.7.236',3),(2024,'188.3.198.168',1),(2025,'101.132.107.246',1),(2026,'201.92.196.76',1),(2027,'220.181.108.88',1),(2028,'196.52.43.64',1),(2029,'123.125.71.86',1),(2030,'191.17.194.51',1),(2031,'175.158.58.127',1),(2032,'101.132.97.6',1),(2033,'106.11.154.161',1),(2034,'61.158.149.233',1),(2035,'43.229.93.60',1),(2036,'37.21.213.11',1),(2037,'45.237.156.23',1),(2038,'82.103.108.71',1),(2039,'201.13.173.9',1),(2040,'202.108.211.56',1),(2041,'46.151.63.163',1),(2042,'42.199.131.211',1),(2043,'5.154.9.150',1),(2044,'218.10.70.13',1),(2045,'113.66.106.157',1),(2046,'148.64.56.67',2),(2047,'178.212.94.17',1),(2048,'148.64.56.70',2),(2049,'1.49.74.107',4),(2050,'14.120.104.10',1),(2051,'120.239.67.45',1),(2052,'5.160.110.24',1),(2053,'213.162.213.25',1),(2054,'190.249.132.68',1),(2055,'220.181.108.79',2),(2056,'47.92.33.91',1),(2057,'189.47.92.242',1),(2058,'112.47.17.104',2),(2059,'85.108.89.87',1),(2060,'78.85.40.133',1),(2061,'54.144.196.37',1),(2062,'209.17.96.218',1),(2063,'54.36.148.88',1),(2064,'202.110.209.184',1),(2065,'61.158.148.17',5),(2066,'117.158.192.61',19),(2067,'123.122.101.45',2),(2068,'58.247.212.141',2),(2069,'180.163.220.5',1),(2070,'101.227.139.161',1),(2071,'61.158.148.67',1),(2072,'201.13.198.86',1),(2073,'106.120.173.124',1),(2074,'96.9.67.253',1),(2075,'42.236.99.206',1),(2076,'202.154.180.18',1),(2077,'220.181.108.139',1),(2078,'85.108.84.88',1),(2079,'115.198.245.169',4),(2080,'220.181.108.76',1),(2081,'154.47.128.105',1),(2082,'124.207.192.18',2),(2083,'42.115.110.232',1),(2084,'88.129.238.228',1),(2085,'197.210.130.86',1),(2086,'58.212.161.243',7),(2087,'120.92.72.104',1),(2088,'101.89.19.149',1),(2089,'200.166.248.104',1),(2090,'212.174.171.145',1),(2091,'162.243.147.47',1),(2092,'190.186.17.61',1),(2093,'203.208.60.83',1),(2094,'112.134.165.41',1),(2095,'5.236.114.232',1),(2096,'220.181.108.86',1),(2097,'103.114.246.186',1),(2098,'138.118.86.23',1),(2099,'88.249.139.183',1),(2100,'47.100.113.43',1),(2101,'125.212.217.214',1),(2102,'185.205.142.101',1),(2103,'182.160.116.226',1),(2104,'108.188.200.204',1),(2105,'201.110.133.245',1),(2106,'117.158.192.60',15),(2107,'176.9.23.4',1),(2108,'61.158.148.31',6),(2109,'58.247.212.207',1),(2110,'54.36.148.22',1),(2111,'61.158.149.206',1),(2112,'36.66.172.29',1),(2113,'61.158.149.144',1),(2114,'47.92.95.89',1),(2115,'111.202.101.88',1),(2116,'187.57.171.196',1),(2117,'180.160.98.68',1),(2118,'177.45.86.132',1),(2119,'220.135.47.179',1),(2120,'59.173.198.135',1),(2121,'54.36.148.20',1),(2122,'221.221.148.131',3),(2123,'221.221.155.249',5),(2124,'186.233.223.92',1),(2125,'120.204.17.71',1),(2126,'61.151.178.236',1),(2127,'223.104.105.233',2),(2128,'14.147.106.142',1),(2129,'14.147.106.74',1),(2130,'14.147.104.70',1),(2131,'153.3.219.43',1),(2132,'138.219.108.19',1),(2133,'118.113.0.105',1),(2134,'91.218.175.14',1),(2135,'114.67.227.5',1),(2136,'220.181.108.141',1),(2137,'61.158.149.140',7),(2138,'87.98.175.104',1),(2139,'61.158.147.192',4),(2140,'118.91.162.22',1),(2141,'101.91.62.109',1),(2142,'183.57.53.196',1),(2143,'183.63.97.126',1),(2144,'106.117.84.83',1),(2145,'177.215.72.66',1),(2146,'31.44.115.225',1),(2147,'2.83.144.110',1),(2148,'27.77.247.250',1),(2149,'66.240.219.146',1),(2150,'106.34.11.43',3),(2151,'92.26.32.200',1),(2152,'5.202.40.159',1),(2153,'115.124.70.46',1),(2154,'123.125.67.151',1),(2155,'222.109.119.195',1),(2156,'187.36.226.159',1),(2157,'39.104.91.125',4),(2158,'39.104.70.5',2),(2159,'178.216.38.169',1),(2160,'54.36.148.117',1),(2161,'188.120.19.234',1),(2162,'73.189.211.128',1),(2163,'169.255.153.143',1),(2164,'52.205.219.68',1),(2165,'223.166.222.110',1),(2166,'175.2.37.1',2),(2167,'61.158.149.56',100),(2168,'123.125.71.73',1),(2169,'47.98.97.252',1),(2170,'189.120.184.137',1),(2171,'125.88.24.74',2),(2172,'203.208.60.42',2),(2173,'203.208.60.76',1),(2174,'101.89.19.197',1),(2175,'61.151.178.217',2),(2176,'203.208.60.17',4),(2177,'120.197.57.62',1),(2178,'203.208.60.38',1),(2179,'203.208.60.71',1),(2180,'203.208.60.107',1),(2181,'203.208.60.25',1),(2182,'203.208.60.85',1),(2183,'203.208.60.21',1),(2184,'203.208.60.108',2),(2185,'5.58.99.99',1),(2186,'203.208.60.19',1),(2187,'203.208.60.120',1),(2188,'203.208.60.67',1),(2189,'103.85.161.10',1),(2190,'203.220.204.68',1),(2191,'106.14.168.238',1),(2192,'202.110.105.124',1),(2193,'58.211.105.147',1),(2194,'203.189.137.85',1),(2195,'151.237.241.84',1),(2196,'103.215.220.60',1),(2197,'203.208.60.118',1),(2198,'203.208.60.45',1),(2199,'220.181.108.179',1),(2200,'114.67.230.174',1),(2201,'61.158.149.238',10),(2202,'183.57.53.177',1),(2203,'101.226.79.190',1),(2204,'61.151.207.186',1),(2205,'61.129.6.227',1),(2206,'148.64.56.79',1),(2207,'191.193.234.190',1),(2208,'2.179.220.113',1),(2209,'185.34.16.147',1),(2210,'114.67.231.205',1),(2211,'220.115.174.116',2),(2212,'66.249.79.205',1),(2213,'1.80.139.80',1),(2214,'61.158.149.101',9),(2215,'101.226.114.195',1),(2216,'58.251.121.186',1),(2217,'58.251.121.184',1),(2218,'171.244.52.131',1),(2219,'203.208.60.69',1),(2220,'201.43.92.136',1),(2221,'177.185.218.170',1),(2222,'85.105.53.114',1),(2223,'47.92.75.171',1),(2224,'177.185.217.42',1),(2225,'123.125.71.32',1),(2226,'85.241.170.20',1),(2227,'59.32.114.54',1),(2228,'124.88.64.198',1),(2229,'101.24.127.16',1),(2230,'124.225.44.255',1),(2231,'106.45.1.139',1),(2232,'183.128.217.194',1),(2233,'191.6.132.77',1),(2234,'197.184.150.32',1),(2235,'47.100.51.108',1),(2236,'203.208.60.14',1),(2237,'139.224.112.110',1),(2238,'123.125.71.107',1),(2239,'223.104.108.143',1),(2240,'89.39.18.165',1),(2241,'117.132.183.17',1);
/*!40000 ALTER TABLE `article_userip` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `article_visitnumber`
--

DROP TABLE IF EXISTS `article_visitnumber`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `article_visitnumber` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `count` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `article_visitnumber`
--

LOCK TABLES `article_visitnumber` WRITE;
/*!40000 ALTER TABLE `article_visitnumber` DISABLE KEYS */;
INSERT INTO `article_visitnumber` VALUES (1,4990);
/*!40000 ALTER TABLE `article_visitnumber` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group`
--

DROP TABLE IF EXISTS `auth_group`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(80) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `name` (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group`
--

LOCK TABLES `auth_group` WRITE;
/*!40000 ALTER TABLE `auth_group` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_group_permissions`
--

DROP TABLE IF EXISTS `auth_group_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_group_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `group_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_group_permissions_group_id_permission_id_0cd325b0_uniq` (`group_id`,`permission_id`),
  KEY `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_group_permissio_permission_id_84c5c92e_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_group_permissions_group_id_b120cbf9_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_group_permissions`
--

LOCK TABLES `auth_group_permissions` WRITE;
/*!40000 ALTER TABLE `auth_group_permissions` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_group_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_permission`
--

DROP TABLE IF EXISTS `auth_permission`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_permission` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(255) NOT NULL,
  `content_type_id` int(11) NOT NULL,
  `codename` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_permission_content_type_id_codename_01ab375a_uniq` (`content_type_id`,`codename`),
  CONSTRAINT `auth_permission_content_type_id_2f476e4b_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=34 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_permission`
--

LOCK TABLES `auth_permission` WRITE;
/*!40000 ALTER TABLE `auth_permission` DISABLE KEYS */;
INSERT INTO `auth_permission` VALUES (1,'Can add log entry',1,'add_logentry'),(2,'Can change log entry',1,'change_logentry'),(3,'Can delete log entry',1,'delete_logentry'),(4,'Can add user',2,'add_user'),(5,'Can change user',2,'change_user'),(6,'Can delete user',2,'delete_user'),(7,'Can add permission',3,'add_permission'),(8,'Can change permission',3,'change_permission'),(9,'Can delete permission',3,'delete_permission'),(10,'Can add group',4,'add_group'),(11,'Can change group',4,'change_group'),(12,'Can delete group',4,'delete_group'),(13,'Can add content type',5,'add_contenttype'),(14,'Can change content type',5,'change_contenttype'),(15,'Can delete content type',5,'delete_contenttype'),(16,'Can add session',6,'add_session'),(17,'Can change session',6,'change_session'),(18,'Can delete session',6,'delete_session'),(19,'Can add 我的博客',7,'add_article'),(20,'Can change 我的博客',7,'change_article'),(21,'Can delete 我的博客',7,'delete_article'),(22,'Can add 文章类别',8,'add_category'),(23,'Can change 文章类别',8,'change_category'),(24,'Can delete 文章类别',8,'delete_category'),(25,'Can add 文章标签',9,'add_tag'),(26,'Can change 文章标签',9,'change_tag'),(27,'Can delete 文章标签',9,'delete_tag'),(28,'Can add 网站访问总次数',10,'add_visitnumber'),(29,'Can change 网站访问总次数',10,'change_visitnumber'),(30,'Can delete 网站访问总次数',10,'delete_visitnumber'),(31,'Can add 访问用户信息',11,'add_userip'),(32,'Can change 访问用户信息',11,'change_userip'),(33,'Can delete 访问用户信息',11,'delete_userip');
/*!40000 ALTER TABLE `auth_permission` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user`
--

DROP TABLE IF EXISTS `auth_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `password` varchar(128) NOT NULL,
  `last_login` datetime(6) DEFAULT NULL,
  `is_superuser` tinyint(1) NOT NULL,
  `username` varchar(150) NOT NULL,
  `first_name` varchar(30) NOT NULL,
  `last_name` varchar(150) NOT NULL,
  `email` varchar(254) NOT NULL,
  `is_staff` tinyint(1) NOT NULL,
  `is_active` tinyint(1) NOT NULL,
  `date_joined` datetime(6) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user`
--

LOCK TABLES `auth_user` WRITE;
/*!40000 ALTER TABLE `auth_user` DISABLE KEYS */;
INSERT INTO `auth_user` VALUES (1,'pbkdf2_sha256$100000$UNmMaiB8AOgc$+rfigIRlL+NnprqC9FkCKJb3mlg5WxKmgyvPVHYHKk8=','2018-09-13 08:23:13.383755',1,'shihao','','','',1,1,'2018-07-14 17:00:11.895316'),(2,'pbkdf2_sha256$100000$0Axky8Ph3mtM$RbYRDNbIRBJciffTiiQRdFkiDo1vV4WIfWMpx7OXpr8=',NULL,0,'xiaoming','','','',0,1,'2018-07-17 16:07:29.000000');
/*!40000 ALTER TABLE `auth_user` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_groups`
--

DROP TABLE IF EXISTS `auth_user_groups`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_groups` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `group_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_groups_user_id_group_id_94350c0c_uniq` (`user_id`,`group_id`),
  KEY `auth_user_groups_group_id_97559544_fk_auth_group_id` (`group_id`),
  CONSTRAINT `auth_user_groups_group_id_97559544_fk_auth_group_id` FOREIGN KEY (`group_id`) REFERENCES `auth_group` (`id`),
  CONSTRAINT `auth_user_groups_user_id_6a12ed8b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_groups`
--

LOCK TABLES `auth_user_groups` WRITE;
/*!40000 ALTER TABLE `auth_user_groups` DISABLE KEYS */;
/*!40000 ALTER TABLE `auth_user_groups` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `auth_user_user_permissions`
--

DROP TABLE IF EXISTS `auth_user_user_permissions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `auth_user_user_permissions` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `user_id` int(11) NOT NULL,
  `permission_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `auth_user_user_permissions_user_id_permission_id_14a6b632_uniq` (`user_id`,`permission_id`),
  KEY `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` (`permission_id`),
  CONSTRAINT `auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm` FOREIGN KEY (`permission_id`) REFERENCES `auth_permission` (`id`),
  CONSTRAINT `auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `auth_user_user_permissions`
--

LOCK TABLES `auth_user_user_permissions` WRITE;
/*!40000 ALTER TABLE `auth_user_user_permissions` DISABLE KEYS */;
INSERT INTO `auth_user_user_permissions` VALUES (1,2,19);
/*!40000 ALTER TABLE `auth_user_user_permissions` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_admin_log`
--

DROP TABLE IF EXISTS `django_admin_log`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_admin_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `action_time` datetime(6) NOT NULL,
  `object_id` longtext,
  `object_repr` varchar(200) NOT NULL,
  `action_flag` smallint(5) unsigned NOT NULL,
  `change_message` longtext NOT NULL,
  `content_type_id` int(11) DEFAULT NULL,
  `user_id` int(11) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `django_admin_log_content_type_id_c4bce8eb_fk_django_co` (`content_type_id`),
  KEY `django_admin_log_user_id_c564eba6_fk_auth_user_id` (`user_id`),
  CONSTRAINT `django_admin_log_content_type_id_c4bce8eb_fk_django_co` FOREIGN KEY (`content_type_id`) REFERENCES `django_content_type` (`id`),
  CONSTRAINT `django_admin_log_user_id_c564eba6_fk_auth_user_id` FOREIGN KEY (`user_id`) REFERENCES `auth_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=176 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_admin_log`
--

LOCK TABLES `django_admin_log` WRITE;
/*!40000 ALTER TABLE `django_admin_log` DISABLE KEYS */;
INSERT INTO `django_admin_log` VALUES (1,'2018-07-14 17:03:22.482457','1','django',1,'[{\"added\": {}}]',8,1),(2,'2018-07-14 17:03:46.421940','1','django搭建个人博客',1,'[{\"added\": {}}]',9,1),(3,'2018-07-14 17:03:51.668979','1','django admin定制（使用django-suit)',1,'[{\"added\": {}}]',7,1),(4,'2018-07-14 17:08:25.799895','2','Django2.0整合markdown编辑器并实现代码高亮',1,'[{\"added\": {}}]',7,1),(5,'2018-07-14 17:08:52.937181','2','美文',1,'[{\"added\": {}}]',8,1),(6,'2018-07-14 17:09:13.340029','2','优美散文',1,'[{\"added\": {}}]',9,1),(7,'2018-07-14 17:09:15.100825','3','关于你，我有太多东西关于你',1,'[{\"added\": {}}]',7,1),(8,'2018-07-14 17:09:47.172842','4','我的幸福刚刚好',1,'[{\"added\": {}}]',7,1),(9,'2018-07-14 17:10:13.692129','5','爱若放手，祝福依旧',1,'[{\"added\": {}}]',7,1),(10,'2018-07-14 17:11:47.399005','3','搞笑文章',1,'[{\"added\": {}}]',8,1),(11,'2018-07-14 17:11:55.773021','3','搞笑文章',1,'[{\"added\": {}}]',9,1),(12,'2018-07-14 17:12:15.508450','6','笑一笑，十年少',1,'[{\"added\": {}}]',7,1),(13,'2018-07-14 17:12:44.499184','4','回忆录',1,'[{\"added\": {}}]',8,1),(14,'2018-07-14 17:12:54.996935','4','回忆录',1,'[{\"added\": {}}]',9,1),(15,'2018-07-14 17:13:05.803063','7','家乡的小河，你是一首流动的歌',1,'[{\"added\": {}}]',7,1),(16,'2018-07-14 17:17:27.609002','5','诗歌',1,'[{\"added\": {}}]',8,1),(17,'2018-07-14 17:17:38.166340','5','诗歌',1,'[{\"added\": {}}]',9,1),(18,'2018-07-14 17:17:43.243337','8','《英雄志》叶挽星',1,'[{\"added\": {}}]',7,1),(19,'2018-07-14 17:27:30.473482','4','回忆录',2,'[{\"changed\": {\"fields\": [\"lifeOrStudy\"]}}]',8,1),(20,'2018-07-14 17:27:35.845494','5','诗歌',2,'[{\"changed\": {\"fields\": [\"lifeOrStudy\"]}}]',8,1),(21,'2018-07-14 17:29:36.751721','6','acm',1,'[{\"added\": {}}]',8,1),(22,'2018-07-14 17:29:44.640010','6','acm',1,'[{\"added\": {}}]',9,1),(23,'2018-07-14 17:29:50.798003','9','苹果',1,'[{\"added\": {}}]',7,1),(24,'2018-07-16 08:06:51.941529','10','从前',1,'[{\"added\": {}}]',7,1),(25,'2018-07-16 08:07:31.636727','11','慢慢才明白',1,'[{\"added\": {}}]',7,1),(26,'2018-07-16 08:07:50.104082','11','慢慢才明白',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(27,'2018-07-17 16:07:29.323255','2','xiaoming',1,'[{\"added\": {}}]',2,1),(28,'2018-07-17 16:07:57.768471','2','xiaoming',2,'[{\"changed\": {\"fields\": [\"user_permissions\"]}}]',2,1),(29,'2018-07-17 16:08:49.236691','2','xiaoming',2,'[{\"changed\": {\"fields\": [\"password\"]}}]',2,1),(30,'2018-07-17 16:09:46.278412','11','慢慢才明白了',2,'[{\"changed\": {\"fields\": [\"title\", \"content\"]}}]',7,1),(31,'2018-07-17 16:11:31.095803','12','test',1,'[{\"added\": {}}]',7,1),(32,'2018-07-17 19:38:38.510663','13','test2',1,'[{\"added\": {}}]',7,1),(33,'2018-07-17 20:56:27.067821','1','django admin定制（使用django-suit)',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(34,'2018-07-17 20:57:36.114469','2','Django2.0整合markdown编辑器并实现代码高亮',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(35,'2018-07-17 20:57:44.679048','3','关于你，我有太多东西关于你',2,'[]',7,1),(36,'2018-07-17 20:57:53.203749','4','我的幸福刚刚好',2,'[]',7,1),(37,'2018-07-17 20:58:15.813465','9','苹果',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(38,'2018-07-17 20:58:43.009810','13','test2',3,'',7,1),(39,'2018-07-17 20:58:43.013799','12','test',3,'',7,1),(40,'2018-07-20 17:27:50.768979','14','Django2.0整合markdown编辑器',1,'[{\"added\": {}}]',7,1),(41,'2018-07-20 17:41:18.548495','1','django admin定制（使用django-suit)',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(42,'2018-07-25 15:58:10.851592','10','从前',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(43,'2018-07-25 16:02:04.044116','14','Django2.0整合markdown编辑器',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(44,'2018-07-25 16:02:26.378992','14','Django2.0整合markdown编辑器',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(45,'2018-07-27 17:46:30.299340','1','django admin定制（使用django-suit)',2,'[{\"changed\": {\"fields\": [\"pic\"]}}]',7,1),(46,'2018-07-28 15:12:01.931415','7','git',1,'[{\"added\": {}}]',8,1),(47,'2018-07-28 15:12:18.689175','7','git',1,'[{\"added\": {}}]',9,1),(48,'2018-07-28 15:12:38.375130','15','使用git报错：Failed to connect to 1',1,'[{\"added\": {}}]',7,1),(49,'2018-07-28 16:47:33.161790','8','linux',1,'[{\"added\": {}}]',8,1),(50,'2018-07-28 16:47:38.406210','8','linux',1,'[{\"added\": {}}]',9,1),(51,'2018-07-28 16:47:41.973068','9','python',1,'[{\"added\": {}}]',9,1),(52,'2018-07-28 16:47:50.520347','16','修改linux下默认的python版本',1,'[{\"added\": {}}]',7,1),(53,'2018-07-28 17:29:14.259711','10','提高网站速度和访问量',1,'[{\"added\": {}}]',9,1),(54,'2018-07-28 17:29:19.672885','17','个人网站优化',1,'[{\"added\": {}}]',7,1),(55,'2018-07-28 17:38:03.671316','16','修改linux下默认的python版本',2,'[]',7,1),(56,'2018-07-28 19:52:15.461440','2','Django2.0整合markdown编辑器并实现代码高亮',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(57,'2018-07-29 17:59:47.744439','1','0',1,'[{\"added\": {}}]',10,1),(58,'2018-07-29 18:14:26.972895','16','修改linux下默认的python版本',2,'[{\"changed\": {\"fields\": [\"isShow\"]}}]',7,1),(59,'2018-07-29 18:26:19.779252','11','django统计网站访问次数',1,'[{\"added\": {}}]',9,1),(60,'2018-07-29 18:26:30.232136','12','django记录访问ip地址和',1,'[{\"added\": {}}]',9,1),(61,'2018-07-29 18:26:33.244931','18','django统计网站访问次数，同时记录访问ip地址和次数',1,'[{\"added\": {}}]',7,1),(62,'2018-07-29 19:42:22.280263','18','django统计网站访问次数，同时记录访问ip地址和次数',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(63,'2018-07-30 13:16:28.208681','13','django+nginx+uw',1,'[{\"added\": {}}]',9,1),(64,'2018-07-30 13:16:38.739210','14','pip install uws',1,'[{\"added\": {}}]',9,1),(65,'2018-07-30 13:19:20.731368','15','pip install uwsgi安装uwsgi出错',1,'[{\"added\": {}}]',9,1),(66,'2018-07-30 13:19:38.250700','16','django+nginx+uwsgi部署',1,'[{\"added\": {}}]',9,1),(67,'2018-07-30 13:19:50.169263','19','django+nginx+uwsgi部署（及遇到的错误）',1,'[{\"added\": {}}]',7,1),(68,'2018-08-02 21:16:46.795945','9','python',1,'[{\"added\": {}}]',8,1),(69,'2018-08-02 21:17:10.606021','17','python3输入输出',1,'[{\"added\": {}}]',9,1),(70,'2018-08-02 21:17:16.107611','20','python3之输入输出格式',1,'[{\"added\": {}}]',7,1),(71,'2018-08-02 22:04:54.494904','20','python3之输入输出格式',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(72,'2018-08-02 22:08:06.074112','14','Django2.0整合markdown编辑器',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(73,'2018-08-02 22:08:33.149287','19','django+nginx+uwsgi部署（及遇到的错误）',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(74,'2018-08-02 22:09:07.312507','9','苹果',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(75,'2018-08-02 22:14:24.306843','18','django统计网站访问次数，同时记录访问ip地址和次数',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(76,'2018-08-02 22:15:15.782788','1','django admin定制（使用django-suit)',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(77,'2018-08-02 22:15:56.654555','1','django admin定制（使用django-suit)',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(78,'2018-08-02 22:16:46.499532','2','Django2.0整合markdown编辑器并实现代码高亮',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(79,'2018-08-02 22:17:32.945342','14','Django2.0整合markdown编辑器',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(80,'2018-08-02 22:19:12.809413','18','django统计网站访问次数，同时记录访问ip地址和次数',2,'[]',7,1),(81,'2018-08-02 22:29:44.404694','19','django+nginx+uwsgi部署（及遇到的错误）',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(82,'2018-08-06 16:05:10.467790','10','pygame',1,'[{\"added\": {}}]',8,1),(83,'2018-08-06 16:05:27.168651','18','pygame',1,'[{\"added\": {}}]',9,1),(84,'2018-08-06 16:05:31.749324','21','外星人入侵游戏（Python3）',1,'[{\"added\": {}}]',7,1),(85,'2018-08-15 15:17:18.822469','11','c++',1,'[{\"added\": {}}]',8,1),(86,'2018-08-15 15:17:44.623556','19','c++中string的用法',1,'[{\"added\": {}}]',9,1),(87,'2018-08-15 15:17:45.546162','22','c++中string的用法',1,'[{\"added\": {}}]',7,1),(88,'2018-08-22 09:33:07.048877','20','python程序使用pdb调试',1,'[{\"added\": {}}]',9,1),(89,'2018-08-22 09:33:07.825365','23','python程序使用pdb调试',1,'[{\"added\": {}}]',7,1),(90,'2018-09-08 17:49:25.513208','21','随机漫步',1,'[{\"added\": {}}]',9,1),(91,'2018-09-08 17:50:11.720225','24','随机漫步',1,'[{\"added\": {}}]',7,1),(92,'2018-09-14 14:57:54.297928','14','Django2.0整合markdown编辑器',2,'[{\"changed\": {\"fields\": [\"isShow\"]}}]',7,1),(93,'2018-09-14 14:58:32.522586','11','慢慢才明白了',3,'',7,1),(94,'2018-09-14 14:58:32.529593','10','从前',3,'',7,1),(95,'2018-09-14 14:58:32.532827','9','苹果',3,'',7,1),(96,'2018-09-14 14:58:32.534607','8','《英雄志》叶挽星',3,'',7,1),(97,'2018-09-14 14:58:32.537658','7','家乡的小河，你是一首流动的歌',3,'',7,1),(98,'2018-09-14 14:58:32.540934','6','笑一笑，十年少',3,'',7,1),(99,'2018-09-14 14:58:32.543292','5','爱若放手，祝福依旧',3,'',7,1),(100,'2018-09-14 14:58:32.546508','4','我的幸福刚刚好',3,'',7,1),(101,'2018-09-14 14:58:32.550756','3','关于你，我有太多东西关于你',3,'',7,1),(102,'2018-09-14 14:59:06.753103','2','美文',3,'',8,1),(103,'2018-09-14 14:59:06.759768','3','搞笑文章',3,'',8,1),(104,'2018-09-14 14:59:06.765417','4','回忆录',3,'',8,1),(105,'2018-09-14 14:59:06.768870','5','诗歌',3,'',8,1),(106,'2018-09-14 14:59:11.280607','8','linux',3,'',8,1),(107,'2018-09-14 14:59:31.034419','6','acm',3,'',8,1),(108,'2018-09-14 15:02:19.798385','12','优美文章',1,'[{\"added\": {}}]',8,1),(109,'2018-09-14 15:03:12.529667','25','人生哲理',1,'[{\"added\": {}}]',7,1),(110,'2018-09-14 15:06:41.252254','22','c++运算符重载',1,'[{\"added\": {}}]',9,1),(111,'2018-09-14 15:07:10.132215','26','运算符重载',1,'[{\"added\": {}}]',7,1),(112,'2018-09-14 15:07:24.593174','26','c++运算符重载',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(113,'2018-09-14 15:07:47.852390','26','c++运算符重载',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(114,'2018-09-14 15:08:37.728670','23','c++重载重写重定义',1,'[{\"added\": {}}]',9,1),(115,'2018-09-14 15:08:55.957466','27','c++重载重写重定义',1,'[{\"added\": {}}]',7,1),(116,'2018-09-14 15:10:43.872163','13','c',1,'[{\"added\": {}}]',8,1),(117,'2018-09-14 15:10:53.296066','24','c语言指针转置二维数组',1,'[{\"added\": {}}]',9,1),(118,'2018-09-14 15:11:44.290766','28','c语言指针转置二维数组',1,'[{\"added\": {}}]',7,1),(119,'2018-09-14 15:12:35.458768','25','街区最短路径问题',1,'[{\"added\": {}}]',9,1),(120,'2018-09-14 15:12:36.280725','29','街区最短路径问题',1,'[{\"added\": {}}]',7,1),(121,'2018-09-14 15:14:28.237448','26','学生成绩管理系统',1,'[{\"added\": {}}]',9,1),(122,'2018-09-14 15:14:30.981079','30','学生成绩管理系统',1,'[{\"added\": {}}]',7,1),(123,'2018-09-14 15:15:24.563160','27','无线网络覆盖',1,'[{\"added\": {}}]',9,1),(124,'2018-09-14 15:15:29.152692','31','无线网络覆盖',1,'[{\"added\": {}}]',7,1),(125,'2018-09-14 15:16:29.577468','28','蛇形填数',1,'[{\"added\": {}}]',9,1),(126,'2018-09-14 15:16:31.502874','32','蛇形添数',1,'[{\"added\": {}}]',7,1),(127,'2018-09-14 15:19:46.723221','32','蛇形添数',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(128,'2018-09-14 15:21:42.609690','14','acm',1,'[{\"added\": {}}]',8,1),(129,'2018-09-14 15:21:57.761293','33','最长公共子序列',1,'[{\"added\": {}}]',7,1),(130,'2018-09-14 15:23:23.851858','34','非洲小孩',1,'[{\"added\": {}}]',7,1),(131,'2018-09-14 15:25:06.424363','29','背包问题',1,'[{\"added\": {}}]',9,1),(132,'2018-09-14 15:25:09.131721','35','背包问题',1,'[{\"added\": {}}]',7,1),(133,'2018-09-14 15:26:11.301335','15','数据结构',1,'[{\"added\": {}}]',8,1),(134,'2018-09-14 15:26:35.808512','30','二叉树的基本操作',1,'[{\"added\": {}}]',9,1),(135,'2018-09-14 15:26:37.556117','36','二叉树子系统',1,'[{\"added\": {}}]',7,1),(136,'2018-09-14 15:27:42.452962','31','循环队列的基本操作',1,'[{\"added\": {}}]',9,1),(137,'2018-09-14 15:27:48.270641','37','循环队列的基本操作',1,'[{\"added\": {}}]',7,1),(138,'2018-09-14 15:28:44.967936','32','二叉树遍历（前序，中序，后序）',1,'[{\"added\": {}}]',9,1),(139,'2018-09-14 15:28:47.111812','38','二叉树遍历（前序，中序，后序）',1,'[{\"added\": {}}]',7,1),(140,'2018-09-14 15:29:43.076672','33','希尔排序',1,'[{\"added\": {}}]',9,1),(141,'2018-09-14 15:29:45.001555','39','希尔排序',1,'[{\"added\": {}}]',7,1),(142,'2018-09-14 15:30:57.478675','34','链表的增删改查',1,'[{\"added\": {}}]',9,1),(143,'2018-09-14 15:30:59.075492','40','链表的基本操作',1,'[{\"added\": {}}]',7,1),(144,'2018-09-14 15:31:32.914111','35','快速排序',1,'[{\"added\": {}}]',9,1),(145,'2018-09-14 15:31:39.744533','41','快速排序',1,'[{\"added\": {}}]',7,1),(146,'2018-09-14 15:32:23.712530','36','二分法插入排序',1,'[{\"added\": {}}]',9,1),(147,'2018-09-14 15:32:25.641318','42','二分法插入排序',1,'[{\"added\": {}}]',7,1),(148,'2018-09-14 15:33:44.843713','37','python使用json模块绘制世界人口地图',1,'[{\"added\": {}}]',9,1),(149,'2018-09-14 15:34:16.351724','43','python使用json模块绘制世界人口地图',1,'[{\"added\": {}}]',7,1),(150,'2018-09-14 15:46:30.165971','38','使用python将json格式文件进行数据可视化绘制世界人口',1,'[{\"added\": {}}]',9,1),(151,'2018-09-14 15:46:36.383696','43','使用python将json格式文件进行数据可视化绘制世界人口',2,'[{\"changed\": {\"fields\": [\"title\", \"tag\", \"content\"]}}]',7,1),(152,'2018-09-14 15:47:22.532128','43','json格式文件进行数据可视化绘制世界人口地图',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(153,'2018-09-14 15:47:31.701882','43','将json格式文件进行数据可视化绘制世界人口地图',2,'[{\"changed\": {\"fields\": [\"title\"]}}]',7,1),(154,'2018-09-14 15:49:25.171234','39','使用pygal绘制世界地图时的两个报错',1,'[{\"added\": {}}]',9,1),(155,'2018-09-14 15:49:29.523946','44','使用pygal绘制世界地图时的两个报错',1,'[{\"added\": {}}]',7,1),(156,'2018-09-14 15:51:45.692035','40','处理.CSV文件格式的数据并用matplotlib可视化',1,'[{\"added\": {}}]',9,1),(157,'2018-09-14 15:51:47.219740','45','处理.CSV文件格式的数据并用matplotlib可视化',1,'[{\"added\": {}}]',7,1),(158,'2018-09-14 15:52:05.626443','45','处理.CSV文件格式的数据并用matplotlib可视化',2,'[]',7,1),(159,'2018-09-14 15:55:43.641289','16','html',1,'[{\"added\": {}}]',8,1),(160,'2018-09-14 15:55:55.647719','41','第一次使用semantic ui做的网页',1,'[{\"added\": {}}]',9,1),(161,'2018-09-14 15:55:56.728411','46','第一次使用semantic ui做的网页',1,'[{\"added\": {}}]',7,1),(162,'2018-09-14 15:58:36.670599','42','CSS盒模型',1,'[{\"added\": {}}]',9,1),(163,'2018-09-14 15:58:38.344274','47','CSS盒模型',1,'[{\"added\": {}}]',7,1),(164,'2018-09-14 15:59:01.220179','47','CSS盒模型',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1),(165,'2018-09-14 16:01:35.635382','43','html表格及传统布局',1,'[{\"added\": {}}]',9,1),(166,'2018-09-14 16:01:37.208807','48','html表格及传统布局',1,'[{\"added\": {}}]',7,1),(167,'2018-09-14 16:02:20.018182','17','linux',1,'[{\"added\": {}}]',8,1),(168,'2018-09-14 16:02:33.505665','44','安装windows+ubuntu双系统',1,'[{\"added\": {}}]',9,1),(169,'2018-09-14 16:11:32.149542','49','安装windows+ubuntu双系统',1,'[{\"added\": {}}]',7,1),(170,'2018-09-14 16:13:45.226677','45','deepin中安装mongodb',1,'[{\"added\": {}}]',9,1),(171,'2018-09-14 16:14:04.947843','50','deepin中安装mongodb',1,'[{\"added\": {}}]',7,1),(172,'2018-09-14 16:15:01.713520','18','工具',1,'[{\"added\": {}}]',8,1),(173,'2018-09-14 16:15:15.915660','46','git使用',1,'[{\"added\": {}}]',9,1),(174,'2018-09-14 16:15:23.584794','51','git使用',1,'[{\"added\": {}}]',7,1),(175,'2018-09-14 16:15:55.377929','51','git使用',2,'[{\"changed\": {\"fields\": [\"content\"]}}]',7,1);
/*!40000 ALTER TABLE `django_admin_log` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_content_type`
--

DROP TABLE IF EXISTS `django_content_type`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_content_type` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app_label` varchar(100) NOT NULL,
  `model` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `django_content_type_app_label_model_76bd3d3b_uniq` (`app_label`,`model`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_content_type`
--

LOCK TABLES `django_content_type` WRITE;
/*!40000 ALTER TABLE `django_content_type` DISABLE KEYS */;
INSERT INTO `django_content_type` VALUES (1,'admin','logentry'),(7,'article','article'),(8,'article','category'),(9,'article','tag'),(11,'article','userip'),(10,'article','visitnumber'),(4,'auth','group'),(3,'auth','permission'),(2,'auth','user'),(5,'contenttypes','contenttype'),(6,'sessions','session');
/*!40000 ALTER TABLE `django_content_type` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_migrations`
--

DROP TABLE IF EXISTS `django_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_migrations` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `app` varchar(255) NOT NULL,
  `name` varchar(255) NOT NULL,
  `applied` datetime(6) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=18 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_migrations`
--

LOCK TABLES `django_migrations` WRITE;
/*!40000 ALTER TABLE `django_migrations` DISABLE KEYS */;
INSERT INTO `django_migrations` VALUES (1,'contenttypes','0001_initial','2018-07-14 16:59:45.647084'),(2,'auth','0001_initial','2018-07-14 16:59:46.115589'),(3,'admin','0001_initial','2018-07-14 16:59:46.224189'),(4,'admin','0002_logentry_remove_auto_add','2018-07-14 16:59:46.237038'),(5,'article','0001_initial','2018-07-14 16:59:46.489225'),(6,'contenttypes','0002_remove_content_type_name','2018-07-14 16:59:46.573651'),(7,'auth','0002_alter_permission_name_max_length','2018-07-14 16:59:46.619746'),(8,'auth','0003_alter_user_email_max_length','2018-07-14 16:59:46.675549'),(9,'auth','0004_alter_user_username_opts','2018-07-14 16:59:46.693887'),(10,'auth','0005_alter_user_last_login_null','2018-07-14 16:59:46.732814'),(11,'auth','0006_require_contenttypes_0002','2018-07-14 16:59:46.736448'),(12,'auth','0007_alter_validators_add_error_messages','2018-07-14 16:59:46.754158'),(13,'auth','0008_alter_user_username_max_length','2018-07-14 16:59:46.799716'),(14,'auth','0009_alter_user_last_name_max_length','2018-07-14 16:59:46.847992'),(15,'sessions','0001_initial','2018-07-14 16:59:46.884195'),(16,'article','0002_userip_visitnumber','2018-07-29 17:59:16.844607'),(17,'article','0003_auto_20180730_1318','2018-07-30 13:18:58.209534');
/*!40000 ALTER TABLE `django_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `django_session`
--

DROP TABLE IF EXISTS `django_session`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `django_session` (
  `session_key` varchar(40) NOT NULL,
  `session_data` longtext NOT NULL,
  `expire_date` datetime(6) NOT NULL,
  PRIMARY KEY (`session_key`),
  KEY `django_session_expire_date_a5c62663` (`expire_date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `django_session`
--

LOCK TABLES `django_session` WRITE;
/*!40000 ALTER TABLE `django_session` DISABLE KEYS */;
INSERT INTO `django_session` VALUES ('14413b3q7e5ximc05mqguyodw3zwite1','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-14 22:15:38.703880'),('4bmt3lkma02g5wjgckww3jhu5ajjpvrw','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 20:55:43.980269'),('5noi062quha8sm5fbl00ohzfopbaedp3','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 17:00:39.780108'),('6bml216w21ujbsr4fmkmy6szjlj5jufi','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-19 08:34:09.847854'),('6d78usdmctfw3vxsbw7oop55tp5d99cq','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-29 10:27:38.380385'),('9j3ush8v2gb2qrr6s5y7upfiqzi5yiis','OGMzYzg4ODU4YTY4MmQ4ZTM2ODc2MjJjY2M3MDM2NjliMGFmNWJmODp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-08 15:56:40.020333'),('a6i6il04062x1z5ogxilfuzz2xtm7npi','ZTBhMzZkMmMyYzc2N2ZkMTc5ZDRhMGFhMDZkYzg2NWE0YmQwZDBjYjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-20 16:51:06.572492'),('blng1dyipr1z3ba2so2ht6y167ptl4zr','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 17:52:54.613289'),('brg3mdk1wb47y0g9gq4xnm55a45jf4xm','YjI2ZWU3NWEzODgxNDcyZTg4ZDQ1YmNhODFlYzQ2MzY4NjVjN2JiNzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-12 18:33:54.866135'),('d1b9sqj0w6a3hvpc5qe8ivvm5df2zz8v','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-25 09:53:32.031536'),('d46p20ztlyewcbooiehq35v3p88ysncm','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-04 10:24:28.552962'),('dfmawpav81ibyk7ukfoxeqnfywxncfpl','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 17:52:20.843213'),('dj4nw7ye4m5dt87u2sxjzu4787qy58mi','ODIxMGM4NzBmYWU4ZDQwMDRjZGM3MGNlOTM2MTUyZWE4N2I0OTVhMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-07-28 17:00:18.637412'),('e1rbam6qd44t27vaekof4ie1msy4if0f','ODIxMGM4NzBmYWU4ZDQwMDRjZGM3MGNlOTM2MTUyZWE4N2I0OTVhMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-27 08:23:13.388470'),('gchrlnyac5o3cf7dpvfy30p2phqcra80','ZTBhMzZkMmMyYzc2N2ZkMTc5ZDRhMGFhMDZkYzg2NWE0YmQwZDBjYjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-25 19:06:33.771672'),('j35yl0l2icw1043eepj9urc7x8dlb6lc','YjI2ZWU3NWEzODgxNDcyZTg4ZDQ1YmNhODFlYzQ2MzY4NjVjN2JiNzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-11 15:10:50.302687'),('jw30myl12siv9lji0b0j67eejkqgist4','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 17:51:54.985654'),('k8nc27arhk7om9b9jg4dm6u67e3pjb3a','ODIxMGM4NzBmYWU4ZDQwMDRjZGM3MGNlOTM2MTUyZWE4N2I0OTVhMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-26 08:12:48.055001'),('kdxs8anmkh75ve7s9okfgsn110dhiwm4','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-09-09 19:38:07.267993'),('kldiz5gaqseepwbgj0bjr7cft5ycj17i','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-08 17:09:13.476725'),('m62czyu3bp599r1my3hkjxrohnhzmx9h','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-03 17:37:23.061345'),('n5mwjz4ws1pdrlchx4mwh3x5am171nmf','OGMzYzg4ODU4YTY4MmQ4ZTM2ODc2MjJjY2M3MDM2NjliMGFmNWJmODp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2lkIjoiMSIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-08 16:01:48.700800'),('o0438gzf4fl5onzuvb3kr156vudpz6gi','ODIxMGM4NzBmYWU4ZDQwMDRjZGM3MGNlOTM2MTUyZWE4N2I0OTVhMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-26 08:50:46.776998'),('okfky2ex2ym2ed2z9cu790iqm6av67fp','ZjRmOGE4NmEzYWJhM2E5YmJhZjYzMmMxOGVlN2FiMzYyYmFjMzZjMTp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIn0=','2018-08-01 08:24:04.726472'),('ooakp6fmqeo0kdhsovpn2vr0raondvad','ODIxMGM4NzBmYWU4ZDQwMDRjZGM3MGNlOTM2MTUyZWE4N2I0OTVhMTp7Il9hdXRoX3VzZXJfaGFzaCI6IjAzOWU4NDEyNDI3Mzc3ZGMwZGRhY2UyYTkwNzIwYzEyYjIzZjg5MjIiLCJfYXV0aF91c2VyX2JhY2tlbmQiOiJkamFuZ28uY29udHJpYi5hdXRoLmJhY2tlbmRzLk1vZGVsQmFja2VuZCIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-07-31 14:53:18.097296'),('oug8sklw7k037vlng6xv8tf677s430j0','ZTBhMzZkMmMyYzc2N2ZkMTc5ZDRhMGFhMDZkYzg2NWE0YmQwZDBjYjp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9oYXNoIjoiMDM5ZTg0MTI0MjczNzdkYzBkZGFjZTJhOTA3MjBjMTJiMjNmODkyMiIsIl9hdXRoX3VzZXJfaWQiOiIxIn0=','2018-09-18 16:22:30.864931'),('rfkrmu0a7mxwgzwll76pfjcc5ri1g7s7','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-09-05 09:29:54.518578'),('whpfotb0d1s26f8gszvt82e3dxh3rh8k','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-08-20 15:29:01.489212'),('xvgod9j1tju491pn4620ecis2k7vgxjq','YzhlZmNmNDU3OWQwNjAzNmE3MDQzNTI5MzJiNGE5M2UyZDExNDBlMzp7Il9hdXRoX3VzZXJfYmFja2VuZCI6ImRqYW5nby5jb250cmliLmF1dGguYmFja2VuZHMuTW9kZWxCYWNrZW5kIiwiX2F1dGhfdXNlcl9pZCI6IjEiLCJfYXV0aF91c2VyX2hhc2giOiIwMzllODQxMjQyNzM3N2RjMGRkYWNlMmE5MDcyMGMxMmIyM2Y4OTIyIn0=','2018-09-04 08:19:50.958699');
/*!40000 ALTER TABLE `django_session` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-09-15  9:18:20
